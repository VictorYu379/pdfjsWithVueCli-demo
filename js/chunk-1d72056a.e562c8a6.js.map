{"version":3,"sources":["webpack:///./src/lib/ui_utils.js","webpack:///./src/lib/grab_to_pan.js","webpack:///./src/lib/pdf_cursor_tools.js","webpack:///./src/lib/pdf_rendering_queue.js","webpack:///./src/lib/pdf_sidebar.js","webpack:///./src/lib/pdf_find_utils.js","webpack:///./src/lib/pdf_find_controller.js","webpack:///./src/lib/pdf_history.js","webpack:///./src/lib/pdf_link_service.js","webpack:///./src/lib/annotation_layer_builder.js","webpack:///./src/lib/pdf_page_view.js","webpack:///./src/lib/text_layer_builder.js","webpack:///./src/lib/base_viewer.js","webpack:///./src/lib/app.js","webpack:///./src/lib/pdf_viewer.js","webpack:///./src/lib/view_history.js","webpack:///./node_modules/core-js/modules/es.string.search.js"],"names":["CSS_UNITS","DEFAULT_SCALE_VALUE","DEFAULT_SCALE","MIN_SCALE","MAX_SCALE","UNKNOWN_SCALE","MAX_AUTO_SCALE","SCROLLBAR_PADDING","VERTICAL_PADDING","PresentationModeState","UNKNOWN","NORMAL","CHANGING","FULLSCREEN","RendererType","CANVAS","SVG","TextLayerMode","DISABLE","ENABLE","ENABLE_ENHANCE","ScrollMode","VERTICAL","HORIZONTAL","WRAPPED","SpreadMode","NONE","ODD","EVEN","AutoPrintRegExp","formatL10nValue","text","args","replace","all","name","NullL10n","getLanguage","getDirection","get","property","fallback","translate","element","getOutputScale","ctx","devicePixelRatio","window","backingStoreRatio","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","backingStorePixelRatio","pixelRatio","sx","sy","scaled","scrollIntoView","spot","skipOverflowHiddenElements","parent","offsetParent","offsetY","offsetTop","clientTop","offsetX","offsetLeft","clientLeft","clientHeight","scrollHeight","clientWidth","scrollWidth","getComputedStyle","overflow","dataset","_scaleY","_scaleX","undefined","top","left","scrollLeft","scrollTop","console","error","watchScroll","viewAreaElement","callback","debounceScroll","evt","rAF","requestAnimationFrame","currentX","lastX","state","right","currentY","lastY","down","_eventHandler","store","commit","parseQueryString","query","parts","split","params","Object","create","i","ii","length","param","key","toLowerCase","value","decodeURIComponent","binarySearchFirstItem","items","condition","minIndex","maxIndex","currentIndex","currentItem","approximateFraction","x","Math","floor","xinv","limit","result","x_","a","b","c","d","p","q","roundToDivide","div","r","round","backtrackBeforeAllVisibleElements","index","views","elt","pageTop","getVisibleElements","scrollEl","sortByVisibility","horizontal","bottom","isElementBottomAfterViewTop","view","elementBottom","isElementRightAfterViewLeft","elementRight","visible","numViews","firstVisibleElementInd","lastEdge","currentWidth","currentHeight","viewWidth","viewHeight","viewRight","viewBottom","hiddenHeight","max","hiddenWidth","percent","push","id","y","first","last","sort","pc","abs","noContextMenuHandler","preventDefault","isDataSchema","url","trim","substring","getPDFFileNameFromURL","defaultFilename","warn","reURI","reFilename","splitURI","exec","suggestedFilename","includes","ex","normalizeWheelEventDelta","delta","sqrt","deltaX","deltaY","angle","atan2","PI","MOUSE_DOM_DELTA_PIXEL_MODE","MOUSE_DOM_DELTA_LINE_MODE","MOUSE_PIXELS_PER_LINE","MOUSE_LINES_PER_PAGE","deltaMode","isValidRotation","Number","isInteger","isValidScrollMode","mode","values","isValidSpreadMode","isPortraitOrientation","size","width","height","WaitOnType","EVENT","TIMEOUT","waitOnEventOrTimeout","target","delay","Promise","resolve","reject","Error","handler","type","EventBus","_off","eventHandler","removeEventListener","timeout","clearTimeout","bind","_on","addEventListener","timeoutHandler","setTimeout","animationStarted","PDFJSDev","test","dispatchDOMEvent","eventName","details","obj","document","event","createEvent","initCustomEvent","dispatchEvent","options","this","_isInAutomation","isInAutomation","listener","external","Array","prototype","slice","call","arguments","internalEventBus","$emit","externalEventBus","$on","$off","clamp","v","min","ProgressBar","units","querySelector","bar","parentNode","style","_indeterminate","classList","add","remove","progressSize","_percent","viewer","container","scrollbarWidth","offsetWidth","body","val","isNaN","_updateBar","moveToEndOfArray","arr","moved","len","write","read","matchesSelector","GrabToPan","ownerDocument","ignoreTarget","onActiveChanged","activate","deactivate","toggle","_onmousedown","_onmousemove","_endPan","overlay","createElement","className","CSS_CLASS_GRAB","active","node","button","originalTarget","tagName","e","scrollLeftStart","scrollTopStart","clientXStart","clientX","clientYStart","clientY","stopPropagation","focusedElement","activeElement","contains","blur","isLeftMouseReleased","xDiff","yDiff","scrollTo","behavior","appendChild","some","prefix","documentElement","isNotIEorIsIE10plus","documentMode","chrome","isChrome15OrOpera15plus","webstore","app","isSafari6plus","navigator","vendor","userAgent","buttons","which","CursorTool","SELECT","HAND","ZOOM","PDFCursorTools","eventBus","cursorToolOnLoad","activeBeforePresentationMode","handTool","_addEventListeners","then","switchTool","tool","disableActiveTool","_dispatchEvent","dispatch","source","previouslyActive","switchInProgress","CLEANUP_TIMEOUT","RenderingStates","INITIAL","RUNNING","PAUSED","FINISHED","PDFRenderingQueue","pdfViewer","pdfThumbnailViewer","onIdle","highestPriorityPage","idleTimeout","printing","isThumbnailViewEnabled","renderingId","currentlyVisiblePages","forceRendering","scrolledDown","visibleViews","numVisible","isViewFinished","nextPageIndex","previousPageIndex","renderingState","resume","draw","finally","renderHighestPriority","catch","reason","SidebarView","THUMBS","OUTLINE","ATTACHMENTS","LAYERS","CharacterType","SPACE","ALPHA_LETTER","PUNCT","HAN_LETTER","KATAKANA_LETTER","HIRAGANA_LETTER","HALFWIDTH_KATAKANA_LETTER","THAI_LETTER","isAlphabeticalScript","charCode","isAscii","isAsciiAlpha","isAsciiDigit","isAsciiSpace","isHan","isKatakana","isHiragana","isHalfwidthKatakana","isThai","getCharacterType","FindState","FOUND","NOT_FOUND","PENDING","FIND_TIMEOUT","MATCH_SCROLL_OFFSET_TOP","MATCH_SCROLL_OFFSET_LEFT","CHARACTERS_TO_NORMALIZE","normalizationRegex","normalize","keys","join","RegExp","ch","PDFFindController","linkService","_linkService","_eventBus","_reset","_onFindBarClose","pdfDocument","_pdfDocument","_firstPageCapability","cmd","_state","_shouldDirtyMatch","_dirtyMatch","_updateUIState","promise","_extractText","findbarClosed","_highlightMatches","pendingTimeout","_findTimeout","_nextMatch","highlightAll","_updateAllPages","pageIndex","matchIndex","_scrollMatches","_selected","matchIdx","pageIdx","_pageMatches","_pageMatchesLength","_offset","wrapped","_extractTextPromises","_pageContents","_matchesCountTotal","_pagesToSearch","_pendingFindMatches","_resumePageIdx","createPromiseCapability","pageNumber","pagesCount","page","isPageVisible","matchesWithLength","matches","matchesLength","isSubTerm","currentElem","nextElem","match","skipped","prevElem","matchLength","content","startIdx","charCodeAt","endIdx","pageContent","entireWord","queryLen","indexOf","_isEntireWord","queryArray","subquery","subqueryLen","_prepareMatches","_query","caseSensitive","phraseSearch","_calculatePhraseMatch","_calculateWordMatch","_updatePage","_nextPageMatch","pageMatchesCount","_updateUIResultsCount","extractTextCapability","getPage","pdfPage","getTextContent","normalizeWhitespace","textContent","textItems","strBuf","j","jj","str","previous","findPrevious","currentPageIndex","numPages","_calculateMatch","offset","numPageMatches","_updateMatch","_advanceOffsetPage","numMatches","_matchesReady","found","previousPage","current","total","matchesCount","_requestMatchesCount","_rawQuery","_normalizedQuery","HASH_CHANGE_TIMEOUT","POSITION_UPDATED_THRESHOLD","UPDATE_VIEWAREA_TIMEOUT","getCurrentHash","location","hash","PDFHistory","_initialized","_fingerprint","reset","_boundEvents","_isViewerInPresentationMode","_isPagesLoaded","onPagesLoaded","fingerprint","resetHistory","updateUrl","reInitialized","_updateUrl","_bindEvents","history","_popStateInProgress","_blockHashChange","_currentHash","_numPositionUpdates","_uid","_maxUid","_destination","_position","_isValidState","_parseCurrentHash","rotation","_pushOrReplaceState","destination","_updateInternalState","uid","_initialRotation","dest","_initialBookmark","JSON","stringify","_pageHide","_unbindEvents","_updateViewareaTimeout","namedDest","explicitDest","isArray","forceReplace","isDestHashesEqual","isDestArraysEqual","_tryPushCurrentPosition","back","forward","newUrl","shouldReplace","newState","chromecomState","baseUrl","href","startsWith","replaceState","pushState","runtime","sendMessage","temporary","position","assign","checkReload","performance","getEntriesByType","perfEntry","removeTemporary","unescape","pdfOpenParams","newHash","hashChanged","navigateTo","setHash","updateViewarea","_updateViewarea","popState","_popState","pageHide","destHash","pushHash","nameddest","firstDest","secondDest","isEntryEqual","second","PDFLinkService","externalLinkTarget","externalLinkRel","externalLinkEnabled","ignoreDestinationZoom","_ignoreDestinationZoom","pdfHistory","_pagesRefCache","goToDestination","destRef","_cachedPageNumber","getPageIndex","cachePageRef","pushCurrentPosition","scrollPageIntoView","destArray","getDestination","data","getAnchorUrl","escape","anchor","search","phrase","zoomArgs","zoom","zoomArg","zoomArgNumber","parseFloat","allowNegativeOffset","pagemode","parse","toString","isValidExplicitDestination","action","pageNum","pageRef","refStr","gen","num","currentPageNumber","pagesRotation","destLength","allowNull","SimpleLinkService","AnnotationLayerBuilder","pageDiv","downloadManager","imageResourcesPath","renderInteractiveForms","l10n","_cancelled","viewport","intent","getAnnotations","annotations","parameters","clone","dontFlip","AnnotationLayer","update","render","setAttribute","MAX_CANVAS_PIXELS","viewerCompatibilityParams","maxCanvasPixels","PDFPageView","defaultViewport","pageLabel","scale","pdfPageRotate","hasRestrictedScaling","textLayerMode","useOnlyCssZoom","renderingQueue","textLayerFactory","annotationLayerFactory","renderer","enableWebGL","paintTask","paintedViewportMap","WeakMap","annotationLayer","textLayer","zoomLayer","rotate","totalRotation","getViewport","stats","cleanup","removeFromDOM","zoomLayerCanvas","firstChild","delete","keepZoomLayer","keepAnnotations","cancelRendering","childNodes","currentZoomLayerNode","currentAnnotationNode","removeChild","removeAttribute","hide","cancel","canvas","_resetZoomLayer","svg","loadingIconDiv","cssTransform","timestamp","now","isScalingRestricted","outputScale","hasAttribute","redrawAnnotations","relativeRotation","absRotation","scaleX","scaleY","transform","textLayerViewport","textRelativeRotation","textAbsRotation","transX","transY","textLayerDiv","transformOrigin","convertToPdfPoint","canvasWrapper","insertBefore","createTextLayerBuilder","renderContinueCallback","cont","isHighestPriority","finishPaintTask","RenderingCancelledException","paintOnSvg","paintOnCanvas","onRenderContinue","resultPromise","readableStream","streamTextContent","setTextContentStream","createAnnotationLayerBuilder","renderCapability","renderTask","msg","isCanvasHidden","showCanvas","mozOpaque","getContext","alpha","actualSizeViewport","pixelsInViewport","maxScale","sfx","sfy","set","renderContext","canvasContext","onContinue","wrapper","cancelled","ensureNotCancelled","getOperatorList","opList","svgGfx","SVGGraphics","commonObjs","objs","getSVG","label","EXPAND_DIVS_TIMEOUT","TextLayerBuilder","findController","enhanceTextSelection","textContentItemsStr","textContentStream","renderingDone","textDivs","textLayerRenderTask","_onUpdateTextLayerMatches","_bindMouse","endOfContent","numTextDivs","textLayerFrag","createDocumentFragment","renderTextLayer","_finishRendering","_updateMatches","iIndex","end","m","mm","begin","divIdx","isSelectedPage","selected","selectedMatchIdx","prevEnd","infinity","i0","i1","isSelected","highlightSuffix","scrollMatchIntoView","appendTextToDiv","beginText","n0","n1","fromOffset","toOffset","createTextNode","span","clearedUntilDivIdx","n","highlightMatches","pageMatches","pageMatchesLength","_convertMatches","_renderMatches","expandDivsTimer","expandTextDivs","adjustTop","getPropertyValue","divBounds","getBoundingClientRect","pageY","toFixed","DEFAULT_CACHE_SIZE","PDFPageViewBuffer","splice","shift","destroy","resize","newSize","pagesToKeep","pageIdsToKeep","Set","iMax","has","isSameScale","oldScale","newScale","validateFileURL","webViewerOpenFileViaURL","webViewerFileInputChange","webViewerOpenFile","BaseViewer","constructor","_name","firstElementChild","removePageBorders","enablePrintAutoRotate","defaultRenderingQueue","setViewer","scroll","_scrollUpdate","presentationModeState","_onBeforeDraw","_onAfterDraw","_resetView","_pages","resetCurrentPageView","_currentPageNumber","_resetCurrentPageView","_pageLabels","_getVisiblePages","_onePageRenderedCapability","_cancelRendering","setDocument","firstPagePromise","_pagesCapability","pageView","_buffer","settled","firstPdfPage","currentScale","_viewerElement","firstPageView","setPdfPage","ref","_spreadMode","_updateSpreadMode","_onePageRenderedOrForceFetch","loadingParams","disableAutoFetch","getPagesLeft","labels","setPageLabel","_currentScale","_currentScaleValue","_location","_pagesRotation","_pagesRequests","_scrollMode","_updateScrollMode","pageSpot","newValue","noScroll","preset","presetValue","isInPresentationMode","isChangingPresentationMode","_setScaleUpdatePages","currentPage","noPadding","hPadding","vPadding","_isScrollModeHorizontal","pageWidthScale","pageHeightScale","horizontalScale","_setScale","_scrollIntoView","widthScale","heightScale","changeOrientation","pageWidth","pageHeight","currentScaleValue","boundingRect","convertToViewportPoint","_setCurrentPageNumber","firstPage","normalizedScaleValue","currentPageView","topLeft","getPagePoint","intLeft","intTop","visiblePages","numVisiblePages","newCacheSize","_updateHelper","_updateLocation","focus","scrollAhead","getHighestPriority","_ensurePdfPageLoaded","renderView","pagesOverview","map","isFirstPagePortrait","scrollMode","pages","parity","spread","cloneNode","every","PDFViewer","_getCurrentVisiblePage","currentId","stillFullyVisible","shadow","DEFAULT_VIEW_HISTORY_CACHE_SIZE","ViewHistory","cacheSize","_initializedPromise","_readFromStorage","databaseStr","database","files","branch","file","sessionStorage","setItem","localStorage","getItem","_writeToStorage","properties","defaultValue","DEFAULT_SCALE_DELTA","DISABLE_AUTO_FETCH_LOADING_BAR_TIMEOUT","FORCE_PAGES_LOADED_TIMEOUT","WHEEL_ZOOM_DISABLED_TIMEOUT","ENABLE_PERMISSIONS_CLASS","ViewOnLoad","PREVIOUS","DefaultExternalServices","callbacks","ctrlKey","metaKey","PDFViewerApplication","initialBookmark","_initializedCapability","fellback","appConfig","pdfLoadingTask","printService","pdfRenderingQueue","pdfLinkService","pdfAttachmentViewer","pdfCursorTools","preferences","isInitialViewSet","downloadComplete","isViewerEmbedded","externalServices","contentDispositionFilename","initialize","createPreferences","_readPreferences","_parseHashParameters","_initializeL10n","AppOptions","LinkTarget","TOP","_initializeViewerComponents","bindEvents","bindWindowEvents","appContainer","getAll","prefs","message","hashParams","waitOn","disableworker","loadFakeWorker","disablerange","disablestream","disableautofetch","disablefontface","disablehistory","webgl","verbosity","textlayer","viewerContainer","enabled","pdfbug","loadAndEnablePDFBug","locale","createL10n","createDownloadManager","disableCreateObjectURL","mainContainer","setHistory","supportsIntegratedFind","run","config","webViewerInitialized","zoomIn","ticks","ceil","zoomOut","zoomReset","PDFPrintServiceFactory","instance","supportsPrinting","support","fullscreenEnabled","mozFullScreenEnabled","doc","requestFullscreen","mozRequestFullScreen","webkitRequestFullScreen","msRequestFullscreen","webkitFullscreenEnabled","msFullscreenEnabled","supportsDocumentFonts","supportedMouseWheelZoomModifierKeys","initPassiveLoading","onOpenWithTransport","transport","open","range","onOpenWithData","onOpenWithURL","originalUrl","onError","err","onProgress","loaded","setTitleUsingUrl","title","getFilenameFromUrl","setTitle","close","errorWrapper","webViewerResetPermissions","PDFBug","workerParameters","OptionKind","WORKER","GlobalWorkerOptions","apiParameters","API","URL","loadingTask","getDocument","onPassword","updateCallback","onUnsupportedFeature","load","exception","loadingErrorMessage","InvalidPDFException","MissingPDFException","UnexpectedResponseException","download","downloadByUrl","downloadUrl","filename","onerror","getData","blob","Blob","featureId","moreInfo","moreInfoText","version","build","stack","lineNumber","line","errorWrapperConfig","errorMessage","closeButton","onclick","errorMoreInfo","moreInfoButton","lessInfoButton","oncontextmenu","progress","level","loadingBar","disableAutoFetchLoadingBarTimeout","show","getDownloadInfo","baseDocumentUrl","pageLayoutPromise","getPageLayout","pageModePromise","getPageMode","openActionPromise","getOpenAction","onePageRendered","pagesPromise","storedPromise","getMultiple","sidebarView","spreadMode","stored","pageLayout","pageMode","openAction","viewOnLoad","_initializePdfHistory","initialDest","parseInt","apiPageModeToSidebarView","apiPageLayoutToSpreadMode","setInitialView","_initializePermissions","race","hasEqualPageSizes","_initializeAutoPrint","_initializePageLabels","_initializeMetadata","getJavaScript","javaScript","triggerAutoPrint","js","UNSUPPORTED_FEATURES","print","getMetadata","info","metadata","documentInfo","log","PDFFormatVersion","Producer","Creator","infoTitle","Title","pdfTitle","metadataTitle","IsAcroFormPresent","forms","versionId","KNOWN_VERSIONS","generatorId","KNOWN_GENERATORS","producer","generator","formType","IsXFAPresent","reportTelemetry","getPageLabels","numLabels","setPageLabels","initialRotation","getPermissions","permissions","PermissionFlag","COPY","storedHash","setRotation","setViewerModes","currentPageLabel","beforePrint","pageViewsReady","getPagesOverview","printContainer","createPrintService","layout","notReadyMessage","alert","printMessage","afterPrint","rotatePages","newRotation","requestPresentationMode","webViewerResize","webViewerHashchange","webViewerPageRendered","webViewerUpdateViewarea","webViewerPageChanging","webViewerScaleChanging","webViewerRotationChanging","webViewerSidebarViewChanged","webViewerPageMode","webViewerNamedAction","webViewerPresentationModeChanged","webViewerPresentationMode","webViewerPrint","webViewerDownload","webViewerFirstPage","webViewerLastPage","webViewerNextPage","webViewerPreviousPage","webViewerZoomIn","webViewerZoomOut","webViewerZoomReset","webViewerPageNumberChanged","webViewerScaleChanged","webViewerRotateCw","webViewerRotateCcw","webViewerSwitchScrollMode","webViewerScrollModeChanged","webViewerSwitchSpreadMode","webViewerSpreadModeChanged","webViewerDocumentProperties","webViewerFind","webViewerFindFromUrlHash","webViewerUpdateFindMatchesCount","webViewerUpdateFindControlState","windowResize","windowHashChange","windowBeforePrint","windowAfterPrint","webViewerVisibilityChange","webViewerWheel","passive","webViewerClick","webViewerKeyDown","unbindEvents","unbindWindowEvents","HOSTED_VIEWER_ORIGINS","viewerOrigin","origin","protocol","workerSrc","SystemJS","import","pdfjsWorker","loadScript","PDFWorker","getWorkerSrc","enabledTabs","debuggerScriptPath","enable","init","OPS","queryString","fileInput","openFileInputName","File","FileReader","FileList","dataTransfer","dropEffect","supportsFullscreen","getPageView","Stats","getStats","setMultiple","popStateInProgress","executeCommand","visibilityState","setZoomDisabledTimeout","lastIndexOf","xhr","XMLHttpRequest","onload","Uint8Array","response","responseType","send","createObjectURL","fileReader","buffer","readAsArrayBuffer","getElementById","click","zoomDisabledTimeout","previousScale","MOUSE_WHEEL_DELTA_PER_PAGE_SCALE","scaleCorrectionFactor","rect","dx","dy","containsElement","handled","ensureViewerFocused","altKey","shiftKey","isViewerInPresentationMode","keyCode","findState","curElement","curElementTagName","toUpperCase","isContentEditable","turnPage","turnOnlyIfPageFit","isVerticalScrollbarEnabled","isHorizontalScrollbarEnabled","fixRegExpWellKnownSymbolLogic","anObject","requireObjectCoercible","sameValue","regExpExec","SEARCH","nativeSearch","maybeCallNative","regexp","O","searcher","String","res","done","rx","S","previousLastIndex","lastIndex"],"mappings":"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","file":"js/chunk-1d72056a.e562c8a6.js","sourcesContent":["/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n import {\n  internalEventBus,\n  externalEventBus\n } from '../eventbus';\n import { store } from \"../store\";\n\nconst CSS_UNITS = 96.0 / 72.0;\nconst DEFAULT_SCALE_VALUE = \"auto\";\nconst DEFAULT_SCALE = 1.0;\nconst MIN_SCALE = 0.1;\nconst MAX_SCALE = 10.0;\nconst UNKNOWN_SCALE = 0;\nconst MAX_AUTO_SCALE = 1.25;\nconst SCROLLBAR_PADDING = 40;\nconst VERTICAL_PADDING = 5;\n\nconst PresentationModeState = {\n  UNKNOWN: 0,\n  NORMAL: 1,\n  CHANGING: 2,\n  FULLSCREEN: 3,\n};\n\nconst RendererType = {\n  CANVAS: \"canvas\",\n  SVG: \"svg\",\n};\n\nconst TextLayerMode = {\n  DISABLE: 0,\n  ENABLE: 1,\n  ENABLE_ENHANCE: 2,\n};\n\nconst ScrollMode = {\n  UNKNOWN: -1,\n  VERTICAL: 0, // Default value.\n  HORIZONTAL: 1,\n  WRAPPED: 2,\n};\n\nconst SpreadMode = {\n  UNKNOWN: -1,\n  NONE: 0, // Default value.\n  ODD: 1,\n  EVEN: 2,\n};\n\n// Used by `PDFViewerApplication`, and by the API unit-tests.\nconst AutoPrintRegExp = /\\bprint\\s*\\(/;\n\n// Replaces {{arguments}} with their values.\nfunction formatL10nValue(text, args) {\n  if (!args) {\n    return text;\n  }\n  return text.replace(/\\{\\{\\s*(\\w+)\\s*\\}\\}/g, (all, name) => {\n    return name in args ? args[name] : \"{{\" + name + \"}}\";\n  });\n}\n\n/**\n * No-op implementation of the localization service.\n * @implements {IL10n}\n */\nconst NullL10n = {\n  async getLanguage() {\n    return \"en-us\";\n  },\n\n  async getDirection() {\n    return \"ltr\";\n  },\n\n  async get(property, args, fallback) {\n    return formatL10nValue(fallback, args);\n  },\n\n  async translate(element) {},\n};\n\n/**\n * Returns scale factor for the canvas. It makes sense for the HiDPI displays.\n * @returns {Object} The object with horizontal (sx) and vertical (sy)\n *                   scales. The scaled property is set to false if scaling is\n *                   not required, true otherwise.\n */\nfunction getOutputScale(ctx) {\n  const devicePixelRatio = window.devicePixelRatio || 1;\n  const backingStoreRatio =\n    ctx.webkitBackingStorePixelRatio ||\n    ctx.mozBackingStorePixelRatio ||\n    ctx.msBackingStorePixelRatio ||\n    ctx.oBackingStorePixelRatio ||\n    ctx.backingStorePixelRatio ||\n    1;\n  const pixelRatio = devicePixelRatio / backingStoreRatio;\n  return {\n    sx: pixelRatio,\n    sy: pixelRatio,\n    scaled: pixelRatio !== 1,\n  };\n}\n\n/**\n * Scrolls specified element into view of its parent.\n * @param {Object} element - The element to be visible.\n * @param {Object} spot - An object with optional top and left properties,\n *   specifying the offset from the top left edge.\n * @param {boolean} skipOverflowHiddenElements - Ignore elements that have\n *   the CSS rule `overflow: hidden;` set. The default is false.\n */\nfunction scrollIntoView(element, spot, skipOverflowHiddenElements = false) {\n  // Assuming offsetParent is available (it's not available when viewer is in\n  // hidden iframe or object). We have to scroll: if the offsetParent is not set\n  // producing the error. See also animationStarted.\n  let parent = element.offsetParent;\n  if (!parent) {\n    console.error(\"offsetParent is not set -- cannot scroll\");\n    return;\n  }\n  let offsetY = element.offsetTop + element.clientTop;\n  let offsetX = element.offsetLeft + element.clientLeft;\n  while (\n    (parent.clientHeight === parent.scrollHeight &&\n      parent.clientWidth === parent.scrollWidth) ||\n    (skipOverflowHiddenElements &&\n      getComputedStyle(parent).overflow === \"hidden\")\n  ) {\n    if (parent.dataset._scaleY) {\n      offsetY /= parent.dataset._scaleY;\n      offsetX /= parent.dataset._scaleX;\n    }\n    offsetY += parent.offsetTop;\n    offsetX += parent.offsetLeft;\n    parent = parent.offsetParent;\n    if (!parent) {\n      return; // no need to scroll\n    }\n  }\n  if (spot) {\n    if (spot.top !== undefined) {\n      offsetY += spot.top;\n    }\n    if (spot.left !== undefined) {\n      offsetX += spot.left;\n      parent.scrollLeft = offsetX;\n    }\n  }\n  parent.scrollTop = offsetY;\n}\n\n/**\n * Helper function to start monitoring the scroll event and converting them into\n * PDF.js friendly one: with scroll debounce and scroll direction.\n */\nfunction watchScroll(viewAreaElement, callback) {\n  const debounceScroll = function (evt) {\n    if (rAF) {\n      return;\n    }\n    // schedule an invocation of scroll for next animation frame.\n    rAF = window.requestAnimationFrame(function viewAreaElementScrolled() {\n      rAF = null;\n\n      const currentX = viewAreaElement.scrollLeft;\n      const lastX = state.lastX;\n      if (currentX !== lastX) {\n        state.right = currentX > lastX;\n      }\n      state.lastX = currentX;\n      const currentY = viewAreaElement.scrollTop;\n      const lastY = state.lastY;\n      if (currentY !== lastY) {\n        state.down = currentY > lastY;\n      }\n      state.lastY = currentY;\n      callback(state);\n    });\n  };\n\n  const state = {\n    right: true,\n    down: true,\n    lastX: viewAreaElement.scrollLeft,\n    lastY: viewAreaElement.scrollTop,\n    _eventHandler: debounceScroll,\n  };\n\n  let rAF = null;\n  // viewAreaElement.addEventListener(\"scroll\", debounceScroll, true);\n  store.commit(\"addScrollListeners\", debounceScroll);\n  return state;\n}\n\n/**\n * Helper function to parse query string (e.g. ?param1=value&parm2=...).\n */\nfunction parseQueryString(query) {\n  const parts = query.split(\"&\");\n  const params = Object.create(null);\n  for (let i = 0, ii = parts.length; i < ii; ++i) {\n    const param = parts[i].split(\"=\");\n    const key = param[0].toLowerCase();\n    const value = param.length > 1 ? param[1] : null;\n    params[decodeURIComponent(key)] = decodeURIComponent(value);\n  }\n  return params;\n}\n\n/**\n * Use binary search to find the index of the first item in a given array which\n * passes a given condition. The items are expected to be sorted in the sense\n * that if the condition is true for one item in the array, then it is also true\n * for all following items.\n *\n * @returns {number} Index of the first array element to pass the test,\n *                   or |items.length| if no such element exists.\n */\nfunction binarySearchFirstItem(items, condition) {\n  let minIndex = 0;\n  let maxIndex = items.length - 1;\n\n  if (maxIndex < 0 || !condition(items[maxIndex])) {\n    return items.length;\n  }\n  if (condition(items[minIndex])) {\n    return minIndex;\n  }\n\n  while (minIndex < maxIndex) {\n    const currentIndex = (minIndex + maxIndex) >> 1;\n    const currentItem = items[currentIndex];\n    if (condition(currentItem)) {\n      maxIndex = currentIndex;\n    } else {\n      minIndex = currentIndex + 1;\n    }\n  }\n  return minIndex; /* === maxIndex */\n}\n\n/**\n *  Approximates float number as a fraction using Farey sequence (max order\n *  of 8).\n *  @param {number} x - Positive float number.\n *  @returns {Array} Estimated fraction: the first array item is a numerator,\n *                   the second one is a denominator.\n */\nfunction approximateFraction(x) {\n  // Fast paths for int numbers or their inversions.\n  if (Math.floor(x) === x) {\n    return [x, 1];\n  }\n  const xinv = 1 / x;\n  const limit = 8;\n  if (xinv > limit) {\n    return [1, limit];\n  } else if (Math.floor(xinv) === xinv) {\n    return [1, xinv];\n  }\n\n  const x_ = x > 1 ? xinv : x;\n  // a/b and c/d are neighbours in Farey sequence.\n  let a = 0,\n    b = 1,\n    c = 1,\n    d = 1;\n  // Limiting search to order 8.\n  while (true) {\n    // Generating next term in sequence (order of q).\n    const p = a + c,\n      q = b + d;\n    if (q > limit) {\n      break;\n    }\n    if (x_ <= p / q) {\n      c = p;\n      d = q;\n    } else {\n      a = p;\n      b = q;\n    }\n  }\n  let result;\n  // Select closest of the neighbours to x.\n  if (x_ - a / b < c / d - x_) {\n    result = x_ === x ? [a, b] : [b, a];\n  } else {\n    result = x_ === x ? [c, d] : [d, c];\n  }\n  return result;\n}\n\nfunction roundToDivide(x, div) {\n  const r = x % div;\n  return r === 0 ? x : Math.round(x - r + div);\n}\n\n/**\n * Gets the size of the specified page, converted from PDF units to inches.\n * @param {Object} An Object containing the properties: {Array} `view`,\n *   {number} `userUnit`, and {number} `rotate`.\n * @returns {Object} An Object containing the properties: {number} `width`\n *   and {number} `height`, given in inches.\n */\nfunction getPageSizeInches({ view, userUnit, rotate }) {\n  const [x1, y1, x2, y2] = view;\n  // We need to take the page rotation into account as well.\n  const changeOrientation = rotate % 180 !== 0;\n\n  const width = ((x2 - x1) / 72) * userUnit;\n  const height = ((y2 - y1) / 72) * userUnit;\n\n  return {\n    width: changeOrientation ? height : width,\n    height: changeOrientation ? width : height,\n  };\n}\n\n/**\n * Helper function for getVisibleElements.\n *\n * @param {number} index - initial guess at the first visible element\n * @param {Array} views - array of pages, into which `index` is an index\n * @param {number} top - the top of the scroll pane\n * @returns {number} less than or equal to `index` that is definitely at or\n *   before the first visible element in `views`, but not by too much. (Usually,\n *   this will be the first element in the first partially visible row in\n *   `views`, although sometimes it goes back one row further.)\n */\nfunction backtrackBeforeAllVisibleElements(index, views, top) {\n  // binarySearchFirstItem's assumption is that the input is ordered, with only\n  // one index where the conditions flips from false to true: [false ...,\n  // true...]. With vertical scrolling and spreads, it is possible to have\n  // [false ..., true, false, true ...]. With wrapped scrolling we can have a\n  // similar sequence, with many more mixed true and false in the middle.\n  //\n  // So there is no guarantee that the binary search yields the index of the\n  // first visible element. It could have been any of the other visible elements\n  // that were preceded by a hidden element.\n\n  // Of course, if either this element or the previous (hidden) element is also\n  // the first element, there's nothing to worry about.\n  if (index < 2) {\n    return index;\n  }\n\n  // That aside, the possible cases are represented below.\n  //\n  //     ****  = fully hidden\n  //     A*B*  = mix of partially visible and/or hidden pages\n  //     CDEF  = fully visible\n  //\n  // (1) Binary search could have returned A, in which case we can stop.\n  // (2) Binary search could also have returned B, in which case we need to\n  // check the whole row.\n  // (3) Binary search could also have returned C, in which case we need to\n  // check the whole previous row.\n  //\n  // There's one other possibility:\n  //\n  //     ****  = fully hidden\n  //     ABCD  = mix of fully and/or partially visible pages\n  //\n  // (4) Binary search could only have returned A.\n\n  // Initially assume that we need to find the beginning of the current row\n  // (case 1, 2, or 4), which means finding a page that is above the current\n  // page's top. If the found page is partially visible, we're definitely not in\n  // case 3, and this assumption is correct.\n  let elt = views[index].div;\n  let pageTop = elt.offsetTop + elt.clientTop;\n\n  if (pageTop >= top) {\n    // The found page is fully visible, so we're actually either in case 3 or 4,\n    // and unfortunately we can't tell the difference between them without\n    // scanning the entire previous row, so we just conservatively assume that\n    // we do need to backtrack to that row. In both cases, the previous page is\n    // in the previous row, so use its top instead.\n    elt = views[index - 1].div;\n    pageTop = elt.offsetTop + elt.clientTop;\n  }\n\n  // Now we backtrack to the first page that still has its bottom below\n  // `pageTop`, which is the top of a page in the first visible row (unless\n  // we're in case 4, in which case it's the row before that).\n  // `index` is found by binary search, so the page at `index - 1` is\n  // invisible and we can start looking for potentially visible pages from\n  // `index - 2`. (However, if this loop terminates on its first iteration,\n  // which is the case when pages are stacked vertically, `index` should remain\n  // unchanged, so we use a distinct loop variable.)\n  for (let i = index - 2; i >= 0; --i) {\n    elt = views[i].div;\n    if (elt.offsetTop + elt.clientTop + elt.clientHeight <= pageTop) {\n      // We have reached the previous row, so stop now.\n      // This loop is expected to terminate relatively quickly because the\n      // number of pages per row is expected to be small.\n      break;\n    }\n    index = i;\n  }\n  return index;\n}\n\n/**\n * Generic helper to find out what elements are visible within a scroll pane.\n *\n * Well, pretty generic. There are some assumptions placed on the elements\n * referenced by `views`:\n *   - If `horizontal`, no left of any earlier element is to the right of the\n *     left of any later element.\n *   - Otherwise, `views` can be split into contiguous rows where, within a row,\n *     no top of any element is below the bottom of any other element, and\n *     between rows, no bottom of any element in an earlier row is below the\n *     top of any element in a later row.\n *\n * (Here, top, left, etc. all refer to the padding edge of the element in\n * question. For pages, that ends up being equivalent to the bounding box of the\n * rendering canvas. Earlier and later refer to index in `views`, not page\n * layout.)\n *\n * @param scrollEl {HTMLElement} - a container that can possibly scroll\n * @param views {Array} - objects with a `div` property that contains an\n *   HTMLElement, which should all be descendents of `scrollEl` satisfying the\n *   above layout assumptions\n * @param sortByVisibility {boolean} - if true, the returned elements are sorted\n *   in descending order of the percent of their padding box that is visible\n * @param horizontal {boolean} - if true, the elements are assumed to be laid\n *   out horizontally instead of vertically\n * @returns {Object} `{ first, last, views: [{ id, x, y, view, percent }] }`\n */\nfunction getVisibleElements(\n  scrollEl,\n  views,\n  sortByVisibility = false,\n  horizontal = false\n) {\n  const top = scrollEl.scrollTop,\n    bottom = top + scrollEl.clientHeight;\n  const left = scrollEl.scrollLeft,\n    right = left + scrollEl.clientWidth;\n\n  // Throughout this \"generic\" function, comments will assume we're working with\n  // PDF document pages, which is the most important and complex case. In this\n  // case, the visible elements we're actually interested is the page canvas,\n  // which is contained in a wrapper which adds no padding/border/margin, which\n  // is itself contained in `view.div` which adds no padding (but does add a\n  // border). So, as specified in this function's doc comment, this function\n  // does all of its work on the padding edge of the provided views, starting at\n  // offsetLeft/Top (which includes margin) and adding clientLeft/Top (which is\n  // the border). Adding clientWidth/Height gets us the bottom-right corner of\n  // the padding edge.\n  function isElementBottomAfterViewTop(view) {\n    const element = view.div;\n    const elementBottom =\n      element.offsetTop + element.clientTop + element.clientHeight;\n    return elementBottom > top;\n  }\n  function isElementRightAfterViewLeft(view) {\n    const element = view.div;\n    const elementRight =\n      element.offsetLeft + element.clientLeft + element.clientWidth;\n    return elementRight > left;\n  }\n\n  const visible = [],\n    numViews = views.length;\n  let firstVisibleElementInd =\n    numViews === 0\n      ? 0\n      : binarySearchFirstItem(\n          views,\n          horizontal ? isElementRightAfterViewLeft : isElementBottomAfterViewTop\n        );\n\n  // Please note the return value of the `binarySearchFirstItem` function when\n  // no valid element is found (hence the `firstVisibleElementInd` check below).\n  if (\n    firstVisibleElementInd > 0 &&\n    firstVisibleElementInd < numViews &&\n    !horizontal\n  ) {\n    // In wrapped scrolling (or vertical scrolling with spreads), with some page\n    // sizes, isElementBottomAfterViewTop doesn't satisfy the binary search\n    // condition: there can be pages with bottoms above the view top between\n    // pages with bottoms below. This function detects and corrects that error;\n    // see it for more comments.\n    firstVisibleElementInd = backtrackBeforeAllVisibleElements(\n      firstVisibleElementInd,\n      views,\n      top\n    );\n  }\n\n  // lastEdge acts as a cutoff for us to stop looping, because we know all\n  // subsequent pages will be hidden.\n  //\n  // When using wrapped scrolling or vertical scrolling with spreads, we can't\n  // simply stop the first time we reach a page below the bottom of the view;\n  // the tops of subsequent pages on the same row could still be visible. In\n  // horizontal scrolling, we don't have that issue, so we can stop as soon as\n  // we pass `right`, without needing the code below that handles the -1 case.\n  let lastEdge = horizontal ? right : -1;\n\n  for (let i = firstVisibleElementInd; i < numViews; i++) {\n    const view = views[i],\n      element = view.div;\n    const currentWidth = element.offsetLeft + element.clientLeft;\n    const currentHeight = element.offsetTop + element.clientTop;\n    const viewWidth = element.clientWidth,\n      viewHeight = element.clientHeight;\n    const viewRight = currentWidth + viewWidth;\n    const viewBottom = currentHeight + viewHeight;\n\n    if (lastEdge === -1) {\n      // As commented above, this is only needed in non-horizontal cases.\n      // Setting lastEdge to the bottom of the first page that is partially\n      // visible ensures that the next page fully below lastEdge is on the\n      // next row, which has to be fully hidden along with all subsequent rows.\n      if (viewBottom >= bottom) {\n        lastEdge = viewBottom;\n      }\n    } else if ((horizontal ? currentWidth : currentHeight) > lastEdge) {\n      break;\n    }\n\n    if (\n      viewBottom <= top ||\n      currentHeight >= bottom ||\n      viewRight <= left ||\n      currentWidth >= right\n    ) {\n      continue;\n    }\n\n    const hiddenHeight =\n      Math.max(0, top - currentHeight) + Math.max(0, viewBottom - bottom);\n    const hiddenWidth =\n      Math.max(0, left - currentWidth) + Math.max(0, viewRight - right);\n    const percent =\n      (((viewHeight - hiddenHeight) * (viewWidth - hiddenWidth) * 100) /\n        viewHeight /\n        viewWidth) |\n      0;\n    visible.push({\n      id: view.id,\n      x: currentWidth,\n      y: currentHeight,\n      view,\n      percent,\n    });\n  }\n\n  const first = visible[0],\n    last = visible[visible.length - 1];\n\n  if (sortByVisibility) {\n    visible.sort(function (a, b) {\n      const pc = a.percent - b.percent;\n      if (Math.abs(pc) > 0.001) {\n        return -pc;\n      }\n      return a.id - b.id; // ensure stability\n    });\n  }\n  return { first, last, views: visible };\n}\n\n/**\n * Event handler to suppress context menu.\n */\nfunction noContextMenuHandler(evt) {\n  evt.preventDefault();\n}\n\nfunction isDataSchema(url) {\n  let i = 0;\n  const ii = url.length;\n  while (i < ii && url[i].trim() === \"\") {\n    i++;\n  }\n  return url.substring(i, i + 5).toLowerCase() === \"data:\";\n}\n\n/**\n * Returns the filename or guessed filename from the url (see issue 3455).\n * @param {string} url - The original PDF location.\n * @param {string} defaultFilename - The value returned if the filename is\n *   unknown, or the protocol is unsupported.\n * @returns {string} Guessed PDF filename.\n */\nfunction getPDFFileNameFromURL(url, defaultFilename = \"document.pdf\") {\n  if (typeof url !== \"string\") {\n    return defaultFilename;\n  }\n  if (isDataSchema(url)) {\n    console.warn(\n      \"getPDFFileNameFromURL: \" +\n        'ignoring \"data:\" URL for performance reasons.'\n    );\n    return defaultFilename;\n  }\n  const reURI = /^(?:(?:[^:]+:)?\\/\\/[^\\/]+)?([^?#]*)(\\?[^#]*)?(#.*)?$/;\n  //            SCHEME        HOST         1.PATH  2.QUERY   3.REF\n  // Pattern to get last matching NAME.pdf\n  const reFilename = /[^\\/?#=]+\\.pdf\\b(?!.*\\.pdf\\b)/i;\n  const splitURI = reURI.exec(url);\n  let suggestedFilename =\n    reFilename.exec(splitURI[1]) ||\n    reFilename.exec(splitURI[2]) ||\n    reFilename.exec(splitURI[3]);\n  if (suggestedFilename) {\n    suggestedFilename = suggestedFilename[0];\n    if (suggestedFilename.includes(\"%\")) {\n      // URL-encoded %2Fpath%2Fto%2Ffile.pdf should be file.pdf\n      try {\n        suggestedFilename = reFilename.exec(\n          decodeURIComponent(suggestedFilename)\n        )[0];\n      } catch (ex) {\n        // Possible (extremely rare) errors:\n        // URIError \"Malformed URI\", e.g. for \"%AA.pdf\"\n        // TypeError \"null has no properties\", e.g. for \"%2F.pdf\"\n      }\n    }\n  }\n  return suggestedFilename || defaultFilename;\n}\n\nfunction normalizeWheelEventDelta(evt) {\n  let delta = Math.sqrt(evt.deltaX * evt.deltaX + evt.deltaY * evt.deltaY);\n  const angle = Math.atan2(evt.deltaY, evt.deltaX);\n  if (-0.25 * Math.PI < angle && angle < 0.75 * Math.PI) {\n    // All that is left-up oriented has to change the sign.\n    delta = -delta;\n  }\n\n  const MOUSE_DOM_DELTA_PIXEL_MODE = 0;\n  const MOUSE_DOM_DELTA_LINE_MODE = 1;\n  const MOUSE_PIXELS_PER_LINE = 30;\n  const MOUSE_LINES_PER_PAGE = 30;\n\n  // Converts delta to per-page units\n  if (evt.deltaMode === MOUSE_DOM_DELTA_PIXEL_MODE) {\n    delta /= MOUSE_PIXELS_PER_LINE * MOUSE_LINES_PER_PAGE;\n  } else if (evt.deltaMode === MOUSE_DOM_DELTA_LINE_MODE) {\n    delta /= MOUSE_LINES_PER_PAGE;\n  }\n  return delta;\n}\n\nfunction isValidRotation(angle) {\n  return Number.isInteger(angle) && angle % 90 === 0;\n}\n\nfunction isValidScrollMode(mode) {\n  return (\n    Number.isInteger(mode) &&\n    Object.values(ScrollMode).includes(mode) &&\n    mode !== ScrollMode.UNKNOWN\n  );\n}\n\nfunction isValidSpreadMode(mode) {\n  return (\n    Number.isInteger(mode) &&\n    Object.values(SpreadMode).includes(mode) &&\n    mode !== SpreadMode.UNKNOWN\n  );\n}\n\nfunction isPortraitOrientation(size) {\n  return size.width <= size.height;\n}\n\nconst WaitOnType = {\n  EVENT: \"event\",\n  TIMEOUT: \"timeout\",\n};\n\n/**\n * @typedef {Object} WaitOnEventOrTimeoutParameters\n * @property {Object} target - The event target, can for example be:\n *   `window`, `document`, a DOM element, or an {EventBus} instance.\n * @property {string} name - The name of the event.\n * @property {number} delay - The delay, in milliseconds, after which the\n *   timeout occurs (if the event wasn't already dispatched).\n */\n\n/**\n * Allows waiting for an event or a timeout, whichever occurs first.\n * Can be used to ensure that an action always occurs, even when an event\n * arrives late or not at all.\n *\n * @param {WaitOnEventOrTimeoutParameters}\n * @returns {Promise} A promise that is resolved with a {WaitOnType} value.\n */\nfunction waitOnEventOrTimeout({ target, name, delay = 0 }) {\n  return new Promise(function (resolve, reject) {\n    if (\n      typeof target !== \"object\" ||\n      !(name && typeof name === \"string\") ||\n      !(Number.isInteger(delay) && delay >= 0)\n    ) {\n      throw new Error(\"waitOnEventOrTimeout - invalid parameters.\");\n    }\n\n    function handler(type) {\n      if (target instanceof EventBus) {\n        target._off(name, eventHandler);\n      } else {\n        target.removeEventListener(name, eventHandler);\n      }\n\n      if (timeout) {\n        clearTimeout(timeout);\n      }\n      resolve(type);\n    }\n\n    const eventHandler = handler.bind(null, WaitOnType.EVENT);\n    if (target instanceof EventBus) {\n      target._on(name, eventHandler);\n    } else {\n      target.addEventListener(name, eventHandler);\n    }\n\n    const timeoutHandler = handler.bind(null, WaitOnType.TIMEOUT);\n    const timeout = setTimeout(timeoutHandler, delay);\n  });\n}\n\n/**\n * Promise that is resolved when DOM window becomes visible.\n */\nconst animationStarted = new Promise(function (resolve) {\n  if (\n    typeof PDFJSDev !== \"undefined\" &&\n    PDFJSDev.test(\"LIB && TESTING\") &&\n    typeof window === \"undefined\"\n  ) {\n    // Prevent \"ReferenceError: window is not defined\" errors when running the\n    // unit-tests in Node.js/Travis.\n    setTimeout(resolve, 20);\n    return;\n  }\n  window.requestAnimationFrame(resolve);\n});\n\n/**\n * NOTE: Only used to support various PDF viewer tests in `mozilla-central`.\n */\nfunction dispatchDOMEvent(eventName, args = null) {\n  if (typeof PDFJSDev !== \"undefined\" && !PDFJSDev.test(\"MOZCENTRAL\")) {\n    throw new Error(\"Not implemented: dispatchDOMEvent\");\n  }\n  const details = Object.create(null);\n  if (args && args.length > 0) {\n    const obj = args[0];\n    for (const key in obj) {\n      const value = obj[key];\n      if (key === \"source\") {\n        if (value === window || value === document) {\n          return; // No need to re-dispatch (already) global events.\n        }\n        continue; // Ignore the `source` property.\n      }\n      details[key] = value;\n    }\n  }\n  const event = document.createEvent(\"CustomEvent\");\n  event.initCustomEvent(eventName, true, true, details);\n  document.dispatchEvent(event);\n}\n\n/**\n * Simple event bus for an application. Listeners are attached using the `on`\n * and `off` methods. To raise an event, the `dispatch` method shall be used.\n */\nclass EventBus {\n  constructor(options) {\n    if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"MOZCENTRAL\")) {\n      this._isInAutomation = (options && options.isInAutomation) === true;\n    }\n  }\n\n  /**\n   * @param {string} eventName\n   * @param {function} listener\n   */\n  on(eventName, listener) {\n    this._on(eventName, listener, { external: true });\n  }\n\n  /**\n   * @param {string} eventName\n   * @param {function} listener\n   */\n  off(eventName, listener) {\n    this._off(eventName, listener, { external: true });\n  }\n\n  dispatch(eventName) {\n    // Passing all arguments after the eventName to the listeners.\n    const args = Array.prototype.slice.call(arguments, 1)[0];\n    let externalListeners;\n    // Making copy of the listeners array in case if it will be modified\n    // during dispatch.\n    internalEventBus.$emit(eventName, args);\n    // Dispatch any \"external\" listeners *after* the internal ones, to give the\n    // viewer components time to handle events and update their state first.\n    externalEventBus.$emit(eventName, args);\n    if (\n      (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"MOZCENTRAL\")) &&\n      this._isInAutomation\n    ) {\n      dispatchDOMEvent(eventName, args);\n    }\n  }\n\n  /**\n   * @ignore\n   */\n  _on(eventName, listener, options = null) {\n    if (options && options.external) {\n      externalEventBus.$on(eventName, listener);\n    } else {\n      internalEventBus.$on(eventName, listener);\n    }\n  }\n\n  /**\n   * @ignore\n   */\n  _off(eventName, listener, options = null) {\n    if (options && options.external) {\n      externalEventBus.$off(eventName, listener);\n    } else {\n      internalEventBus.$off(eventName, listener);\n    }\n  }\n}\n\nfunction clamp(v, min, max) {\n  return Math.min(Math.max(v, min), max);\n}\n\nclass ProgressBar {\n  constructor(id, { height, width, units } = {}) {\n    this.visible = true;\n\n    // Fetch the sub-elements for later.\n    this.div = document.querySelector(id + \" .progress\");\n    // Get the loading bar element, so it can be resized to fit the viewer.\n    this.bar = this.div.parentNode;\n\n    // Get options, with sensible defaults.\n    this.height = height || 100;\n    this.width = width || 100;\n    this.units = units || \"%\";\n\n    // Initialize heights.\n    this.div.style.height = this.height + this.units;\n    this.percent = 0;\n  }\n\n  _updateBar() {\n    if (this._indeterminate) {\n      this.div.classList.add(\"indeterminate\");\n      this.div.style.width = this.width + this.units;\n      return;\n    }\n\n    this.div.classList.remove(\"indeterminate\");\n    const progressSize = (this.width * this._percent) / 100;\n    this.div.style.width = progressSize + this.units;\n  }\n\n  get percent() {\n    return this._percent;\n  }\n\n  set percent(val) {\n    this._indeterminate = isNaN(val);\n    this._percent = clamp(val, 0, 100);\n    this._updateBar();\n  }\n\n  setWidth(viewer) {\n    if (!viewer) {\n      return;\n    }\n    const container = viewer.parentNode;\n    const scrollbarWidth = container.offsetWidth - viewer.offsetWidth;\n    if (scrollbarWidth > 0) {\n      this.bar.style.width = `calc(100% - ${scrollbarWidth}px)`;\n    }\n  }\n\n  hide() {\n    if (!this.visible) {\n      return;\n    }\n    this.visible = false;\n    this.bar.classList.add(\"hidden\");\n    document.body.classList.remove(\"loadingInProgress\");\n  }\n\n  show() {\n    if (this.visible) {\n      return;\n    }\n    this.visible = true;\n    document.body.classList.add(\"loadingInProgress\");\n    this.bar.classList.remove(\"hidden\");\n  }\n}\n\n/**\n * Moves all elements of an array that satisfy condition to the end of the\n * array, preserving the order of the rest.\n */\nfunction moveToEndOfArray(arr, condition) {\n  const moved = [],\n    len = arr.length;\n  let write = 0;\n  for (let read = 0; read < len; ++read) {\n    if (condition(arr[read])) {\n      moved.push(arr[read]);\n    } else {\n      arr[write] = arr[read];\n      ++write;\n    }\n  }\n  for (let read = 0; write < len; ++read, ++write) {\n    arr[write] = moved[read];\n  }\n}\n\nexport {\n  AutoPrintRegExp,\n  CSS_UNITS,\n  DEFAULT_SCALE_VALUE,\n  DEFAULT_SCALE,\n  MIN_SCALE,\n  MAX_SCALE,\n  UNKNOWN_SCALE,\n  MAX_AUTO_SCALE,\n  SCROLLBAR_PADDING,\n  VERTICAL_PADDING,\n  isValidRotation,\n  isValidScrollMode,\n  isValidSpreadMode,\n  isPortraitOrientation,\n  PresentationModeState,\n  RendererType,\n  TextLayerMode,\n  ScrollMode,\n  SpreadMode,\n  NullL10n,\n  EventBus,\n  clamp,\n  ProgressBar,\n  getPDFFileNameFromURL,\n  noContextMenuHandler,\n  parseQueryString,\n  backtrackBeforeAllVisibleElements, // only exported for testing\n  getVisibleElements,\n  roundToDivide,\n  getPageSizeInches,\n  approximateFraction,\n  getOutputScale,\n  scrollIntoView,\n  watchScroll,\n  binarySearchFirstItem,\n  normalizeWheelEventDelta,\n  animationStarted,\n  WaitOnType,\n  waitOnEventOrTimeout,\n  moveToEndOfArray,\n};\n","/* Copyright 2013 Rob Wu <rob@robwu.nl>\n * https://github.com/Rob--W/grab-to-pan.js\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Construct a GrabToPan instance for a given HTML element.\n * @param options.element {Element}\n * @param options.ignoreTarget {function} optional. See `ignoreTarget(node)`\n * @param options.onActiveChanged {function(boolean)} optional. Called\n *  when grab-to-pan is (de)activated. The first argument is a boolean that\n *  shows whether grab-to-pan is activated.\n */\nfunction GrabToPan(options) {\n  this.element = options.element;\n  this.document = options.element.ownerDocument;\n  if (typeof options.ignoreTarget === \"function\") {\n    this.ignoreTarget = options.ignoreTarget;\n  }\n  this.onActiveChanged = options.onActiveChanged;\n\n  // Bind the contexts to ensure that `this` always points to\n  // the GrabToPan instance.\n  this.activate = this.activate.bind(this);\n  this.deactivate = this.deactivate.bind(this);\n  this.toggle = this.toggle.bind(this);\n  this._onmousedown = this._onmousedown.bind(this);\n  this._onmousemove = this._onmousemove.bind(this);\n  this._endPan = this._endPan.bind(this);\n\n  // This overlay will be inserted in the document when the mouse moves during\n  // a grab operation, to ensure that the cursor has the desired appearance.\n  const overlay = (this.overlay = document.createElement(\"div\"));\n  overlay.className = \"grab-to-pan-grabbing\";\n}\nGrabToPan.prototype = {\n  /**\n   * Class name of element which can be grabbed\n   */\n  CSS_CLASS_GRAB: \"grab-to-pan-grab\",\n\n  /**\n   * Bind a mousedown event to the element to enable grab-detection.\n   */\n  activate: function GrabToPan_activate() {\n    if (!this.active) {\n      this.active = true;\n      this.element.addEventListener(\"mousedown\", this._onmousedown, true);\n      this.element.classList.add(this.CSS_CLASS_GRAB);\n      if (this.onActiveChanged) {\n        this.onActiveChanged(true);\n      }\n    }\n  },\n\n  /**\n   * Removes all events. Any pending pan session is immediately stopped.\n   */\n  deactivate: function GrabToPan_deactivate() {\n    if (this.active) {\n      this.active = false;\n      this.element.removeEventListener(\"mousedown\", this._onmousedown, true);\n      this._endPan();\n      this.element.classList.remove(this.CSS_CLASS_GRAB);\n      if (this.onActiveChanged) {\n        this.onActiveChanged(false);\n      }\n    }\n  },\n\n  toggle: function GrabToPan_toggle() {\n    if (this.active) {\n      this.deactivate();\n    } else {\n      this.activate();\n    }\n  },\n\n  /**\n   * Whether to not pan if the target element is clicked.\n   * Override this method to change the default behaviour.\n   *\n   * @param node {Element} The target of the event\n   * @returns {boolean} Whether to not react to the click event.\n   */\n  ignoreTarget: function GrabToPan_ignoreTarget(node) {\n    // Use matchesSelector to check whether the clicked element\n    // is (a child of) an input element / link\n    return node[matchesSelector](\n      \"a[href], a[href] *, input, textarea, button, button *, select, option\"\n    );\n  },\n\n  /**\n   * @private\n   */\n  _onmousedown: function GrabToPan__onmousedown(event) {\n    if (event.button !== 0 || this.ignoreTarget(event.target)) {\n      return;\n    }\n    if (event.originalTarget) {\n      try {\n        // eslint-disable-next-line no-unused-expressions\n        event.originalTarget.tagName;\n      } catch (e) {\n        // Mozilla-specific: element is a scrollbar (XUL element)\n        return;\n      }\n    }\n\n    this.scrollLeftStart = this.element.scrollLeft;\n    this.scrollTopStart = this.element.scrollTop;\n    this.clientXStart = event.clientX;\n    this.clientYStart = event.clientY;\n    this.document.addEventListener(\"mousemove\", this._onmousemove, true);\n    this.document.addEventListener(\"mouseup\", this._endPan, true);\n    // When a scroll event occurs before a mousemove, assume that the user\n    // dragged a scrollbar (necessary for Opera Presto, Safari and IE)\n    // (not needed for Chrome/Firefox)\n    this.element.addEventListener(\"scroll\", this._endPan, true);\n    event.preventDefault();\n    event.stopPropagation();\n\n    const focusedElement = document.activeElement;\n    if (focusedElement && !focusedElement.contains(event.target)) {\n      focusedElement.blur();\n    }\n  },\n\n  /**\n   * @private\n   */\n  _onmousemove: function GrabToPan__onmousemove(event) {\n    this.element.removeEventListener(\"scroll\", this._endPan, true);\n    if (isLeftMouseReleased(event)) {\n      this._endPan();\n      return;\n    }\n    const xDiff = event.clientX - this.clientXStart;\n    const yDiff = event.clientY - this.clientYStart;\n    const scrollTop = this.scrollTopStart - yDiff;\n    const scrollLeft = this.scrollLeftStart - xDiff;\n    if (this.element.scrollTo) {\n      this.element.scrollTo({\n        top: scrollTop,\n        left: scrollLeft,\n        behavior: \"instant\",\n      });\n    } else {\n      this.element.scrollTop = scrollTop;\n      this.element.scrollLeft = scrollLeft;\n    }\n    if (!this.overlay.parentNode) {\n      document.body.appendChild(this.overlay);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _endPan: function GrabToPan__endPan() {\n    this.element.removeEventListener(\"scroll\", this._endPan, true);\n    this.document.removeEventListener(\"mousemove\", this._onmousemove, true);\n    this.document.removeEventListener(\"mouseup\", this._endPan, true);\n    // Note: ChildNode.remove doesn't throw if the parentNode is undefined.\n    this.overlay.remove();\n  },\n};\n\n// Get the correct (vendor-prefixed) name of the matches method.\nlet matchesSelector;\n[\"webkitM\", \"mozM\", \"msM\", \"oM\", \"m\"].some(function (prefix) {\n  let name = prefix + \"atches\";\n  if (name in document.documentElement) {\n    matchesSelector = name;\n  }\n  name += \"Selector\";\n  if (name in document.documentElement) {\n    matchesSelector = name;\n  }\n  return matchesSelector; // If found, then truthy, and [].some() ends.\n});\n\n// Browser sniffing because it's impossible to feature-detect\n// whether event.which for onmousemove is reliable\nconst isNotIEorIsIE10plus = !document.documentMode || document.documentMode > 9;\nconst chrome = window.chrome;\nconst isChrome15OrOpera15plus = chrome && (chrome.webstore || chrome.app);\n//                                         ^ Chrome 15+       ^ Opera 15+\nconst isSafari6plus =\n  /Apple/.test(navigator.vendor) &&\n  /Version\\/([6-9]\\d*|[1-5]\\d+)/.test(navigator.userAgent);\n\n/**\n * Whether the left mouse is not pressed.\n * @param event {MouseEvent}\n * @returns {boolean} True if the left mouse button is not pressed,\n *                    False if unsure or if the left mouse button is pressed.\n */\nfunction isLeftMouseReleased(event) {\n  if (\"buttons\" in event && isNotIEorIsIE10plus) {\n    // http://www.w3.org/TR/DOM-Level-3-Events/#events-MouseEvent-buttons\n    // Firefox 15+\n    // Internet Explorer 10+\n    return !(event.buttons & 1);\n  }\n  if (isChrome15OrOpera15plus || isSafari6plus) {\n    // Chrome 14+\n    // Opera 15+\n    // Safari 6.0+\n    return event.which === 0;\n  }\n  return false;\n}\n\nexport { GrabToPan };\n","/* Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { GrabToPan } from \"./grab_to_pan.js\";\n\nconst CursorTool = {\n  SELECT: 0, // The default value.\n  HAND: 1,\n  ZOOM: 2,\n};\n\n/**\n * @typedef {Object} PDFCursorToolsOptions\n * @property {HTMLDivElement} container - The document container.\n * @property {EventBus} eventBus - The application event bus.\n * @property {number} [cursorToolOnLoad] - The cursor tool that will be enabled\n *   on load; the constants from {CursorTool} should be used. The default value\n *   is `CursorTool.SELECT`.\n */\n\nclass PDFCursorTools {\n  /**\n   * @param {PDFCursorToolsOptions} options\n   */\n  constructor({ container, eventBus, cursorToolOnLoad = CursorTool.SELECT }) {\n    this.container = container;\n    this.eventBus = eventBus;\n\n    this.active = CursorTool.SELECT;\n    this.activeBeforePresentationMode = null;\n\n    this.handTool = new GrabToPan({\n      element: this.container,\n    });\n\n    this._addEventListeners();\n\n    // Defer the initial `switchTool` call, to give other viewer components\n    // time to initialize *and* register 'cursortoolchanged' event listeners.\n    Promise.resolve().then(() => {\n      this.switchTool(cursorToolOnLoad);\n    });\n  }\n\n  /**\n   * @type {number} One of the values in {CursorTool}.\n   */\n  get activeTool() {\n    return this.active;\n  }\n\n  /**\n   * NOTE: This method is ignored while Presentation Mode is active.\n   * @param {number} tool - The cursor mode that should be switched to,\n   *                        must be one of the values in {CursorTool}.\n   */\n  switchTool(tool) {\n    if (this.activeBeforePresentationMode !== null) {\n      return; // Cursor tools cannot be used in Presentation Mode.\n    }\n    if (tool === this.active) {\n      return; // The requested tool is already active.\n    }\n\n    const disableActiveTool = () => {\n      switch (this.active) {\n        case CursorTool.SELECT:\n          break;\n        case CursorTool.HAND:\n          this.handTool.deactivate();\n          break;\n        case CursorTool.ZOOM:\n        /* falls through */\n      }\n    };\n\n    // Enable the new cursor tool.\n    switch (tool) {\n      case CursorTool.SELECT:\n        disableActiveTool();\n        break;\n      case CursorTool.HAND:\n        disableActiveTool();\n        this.handTool.activate();\n        break;\n      case CursorTool.ZOOM:\n      /* falls through */\n      default:\n        console.error(`switchTool: \"${tool}\" is an unsupported value.`);\n        return;\n    }\n    // Update the active tool *after* it has been validated above,\n    // in order to prevent setting it to an invalid state.\n    this.active = tool;\n\n    this._dispatchEvent();\n  }\n\n  /**\n   * @private\n   */\n  _dispatchEvent() {\n    this.eventBus.dispatch(\"cursortoolchanged\", {\n      source: this,\n      tool: this.active,\n    });\n  }\n\n  /**\n   * @private\n   */\n  _addEventListeners() {\n    this.eventBus._on(\"switchcursortool\", evt => {\n      this.switchTool(evt.tool);\n    });\n\n    this.eventBus._on(\"presentationmodechanged\", evt => {\n      if (evt.switchInProgress) {\n        return;\n      }\n      let previouslyActive;\n\n      if (evt.active) {\n        previouslyActive = this.active;\n\n        this.switchTool(CursorTool.SELECT);\n        this.activeBeforePresentationMode = previouslyActive;\n      } else {\n        previouslyActive = this.activeBeforePresentationMode;\n\n        this.activeBeforePresentationMode = null;\n        this.switchTool(previouslyActive);\n      }\n    });\n  }\n}\n\nexport { CursorTool, PDFCursorTools };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst CLEANUP_TIMEOUT = 30000;\n\nconst RenderingStates = {\n  INITIAL: 0,\n  RUNNING: 1,\n  PAUSED: 2,\n  FINISHED: 3,\n};\n\n/**\n * Controls rendering of the views for pages and thumbnails.\n */\nclass PDFRenderingQueue {\n  constructor() {\n    this.pdfViewer = null;\n    this.pdfThumbnailViewer = null;\n    this.onIdle = null;\n    this.highestPriorityPage = null;\n    this.idleTimeout = null;\n    this.printing = false;\n    this.isThumbnailViewEnabled = false;\n  }\n\n  /**\n   * @param {PDFViewer} pdfViewer\n   */\n  setViewer(pdfViewer) {\n    this.pdfViewer = pdfViewer;\n  }\n\n  /**\n   * @param {PDFThumbnailViewer} pdfThumbnailViewer\n   */\n  setThumbnailViewer(pdfThumbnailViewer) {\n    this.pdfThumbnailViewer = pdfThumbnailViewer;\n  }\n\n  /**\n   * @param {IRenderableView} view\n   * @returns {boolean}\n   */\n  isHighestPriority(view) {\n    return this.highestPriorityPage === view.renderingId;\n  }\n\n  /**\n   * @param {Object} currentlyVisiblePages\n   */\n  renderHighestPriority(currentlyVisiblePages) {\n    if (this.idleTimeout) {\n      clearTimeout(this.idleTimeout);\n      this.idleTimeout = null;\n    }\n\n    // Pages have a higher priority than thumbnails, so check them first.\n    if (this.pdfViewer.forceRendering(currentlyVisiblePages)) {\n      return;\n    }\n    // No pages needed rendering, so check thumbnails.\n    if (this.pdfThumbnailViewer && this.isThumbnailViewEnabled) {\n      if (this.pdfThumbnailViewer.forceRendering()) {\n        return;\n      }\n    }\n\n    if (this.printing) {\n      // If printing is currently ongoing do not reschedule cleanup.\n      return;\n    }\n\n    if (this.onIdle) {\n      this.idleTimeout = setTimeout(this.onIdle.bind(this), CLEANUP_TIMEOUT);\n    }\n  }\n\n  /**\n   * @param {Object} visible\n   * @param {Array} views\n   * @param {boolean} scrolledDown\n   */\n  getHighestPriority(visible, views, scrolledDown) {\n    /**\n     * The state has changed. Figure out which page has the highest priority to\n     * render next (if any).\n     *\n     * Priority:\n     * 1. visible pages\n     * 2. if last scrolled down, the page after the visible pages, or\n     *    if last scrolled up, the page before the visible pages\n     */\n    const visibleViews = visible.views;\n\n    const numVisible = visibleViews.length;\n    if (numVisible === 0) {\n      return null;\n    }\n    for (let i = 0; i < numVisible; ++i) {\n      const view = visibleViews[i].view;\n      if (!this.isViewFinished(view)) {\n        return view;\n      }\n    }\n\n    // All the visible views have rendered; try to render next/previous pages.\n    if (scrolledDown) {\n      const nextPageIndex = visible.last.id;\n      // IDs start at 1, so no need to add 1.\n      if (views[nextPageIndex] && !this.isViewFinished(views[nextPageIndex])) {\n        return views[nextPageIndex];\n      }\n    } else {\n      const previousPageIndex = visible.first.id - 2;\n      if (\n        views[previousPageIndex] &&\n        !this.isViewFinished(views[previousPageIndex])\n      ) {\n        return views[previousPageIndex];\n      }\n    }\n    // Everything that needs to be rendered has been.\n    return null;\n  }\n\n  /**\n   * @param {IRenderableView} view\n   * @returns {boolean}\n   */\n  isViewFinished(view) {\n    return view.renderingState === RenderingStates.FINISHED;\n  }\n\n  /**\n   * Render a page or thumbnail view. This calls the appropriate function\n   * based on the views state. If the view is already rendered it will return\n   * `false`.\n   *\n   * @param {IRenderableView} view\n   */\n  renderView(view) {\n    switch (view.renderingState) {\n      case RenderingStates.FINISHED:\n        return false;\n      case RenderingStates.PAUSED:\n        this.highestPriorityPage = view.renderingId;\n        view.resume();\n        break;\n      case RenderingStates.RUNNING:\n        this.highestPriorityPage = view.renderingId;\n        break;\n      case RenderingStates.INITIAL:\n        this.highestPriorityPage = view.renderingId;\n        view\n          .draw()\n          .finally(() => {\n            this.renderHighestPriority();\n          })\n          .catch(reason => {\n            console.error(`renderView: \"${reason}\"`);\n          });\n        break;\n    }\n    return true;\n  }\n}\n\nexport { RenderingStates, PDFRenderingQueue };\n","/* Copyright 2016 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NullL10n } from \"./ui_utils.js\";\nimport { RenderingStates } from \"./pdf_rendering_queue.js\";\n\nconst UI_NOTIFICATION_CLASS = \"pdfSidebarNotification\";\n\nconst SidebarView = {\n  UNKNOWN: -1,\n  NONE: 0,\n  THUMBS: 1, // Default value.\n  OUTLINE: 2,\n  ATTACHMENTS: 3,\n  LAYERS: 4,\n};\n\n/**\n * @typedef {Object} PDFSidebarOptions\n * @property {PDFSidebarElements} elements - The DOM elements.\n * @property {PDFViewer} pdfViewer - The document viewer.\n * @property {PDFThumbnailViewer} pdfThumbnailViewer - The thumbnail viewer.\n * @property {EventBus} eventBus - The application event bus.\n * @property {IL10n} l10n - The localization service.\n * @property {boolean} [disableNotification] - Disable the notification for\n *   documents containing outline/attachments. The default value is `false`.\n */\n\n/**\n * @typedef {Object} PDFSidebarElements\n * @property {HTMLDivElement} outerContainer - The outer container\n *   (encasing both the viewer and sidebar elements).\n * @property {HTMLDivElement} viewerContainer - The viewer container\n *   (in which the viewer element is placed).\n * @property {HTMLButtonElement} toggleButton - The button used for\n *   opening/closing the sidebar.\n * @property {HTMLButtonElement} thumbnailButton - The button used to show\n *   the thumbnail view.\n * @property {HTMLButtonElement} outlineButton - The button used to show\n *   the outline view.\n * @property {HTMLButtonElement} attachmentsButton - The button used to show\n *   the attachments view.\n * @property {HTMLDivElement} thumbnailView - The container in which\n *   the thumbnails are placed.\n * @property {HTMLDivElement} outlineView - The container in which\n *   the outline is placed.\n * @property {HTMLDivElement} attachmentsView - The container in which\n *   the attachments are placed.\n */\n\nclass PDFSidebar {\n  /**\n   * @param {PDFSidebarOptions} options\n   */\n  constructor({\n    elements,\n    pdfViewer,\n    pdfThumbnailViewer,\n    eventBus,\n    l10n = NullL10n,\n    disableNotification = false,\n  }) {\n    this.isOpen = false;\n    this.active = SidebarView.THUMBS;\n    this.isInitialViewSet = false;\n\n    /**\n     * Callback used when the sidebar has been opened/closed, to ensure that\n     * the viewers (PDFViewer/PDFThumbnailViewer) are updated correctly.\n     */\n    this.onToggled = null;\n\n    this.pdfViewer = pdfViewer;\n    this.pdfThumbnailViewer = pdfThumbnailViewer;\n\n    this.outerContainer = elements.outerContainer;\n    this.viewerContainer = elements.viewerContainer;\n    this.toggleButton = elements.toggleButton;\n\n    this.thumbnailButton = elements.thumbnailButton;\n    this.outlineButton = elements.outlineButton;\n    this.attachmentsButton = elements.attachmentsButton;\n\n    this.thumbnailView = elements.thumbnailView;\n    this.outlineView = elements.outlineView;\n    this.attachmentsView = elements.attachmentsView;\n\n    this.eventBus = eventBus;\n    this.l10n = l10n;\n    this._disableNotification = disableNotification;\n\n    this._addEventListeners();\n  }\n\n  reset() {\n    this.isInitialViewSet = false;\n\n    this._hideUINotification(null);\n    this.switchView(SidebarView.THUMBS);\n\n    this.outlineButton.disabled = false;\n    this.attachmentsButton.disabled = false;\n  }\n\n  /**\n   * @type {number} One of the values in {SidebarView}.\n   */\n  get visibleView() {\n    return this.isOpen ? this.active : SidebarView.NONE;\n  }\n\n  get isThumbnailViewVisible() {\n    return this.isOpen && this.active === SidebarView.THUMBS;\n  }\n\n  get isOutlineViewVisible() {\n    return this.isOpen && this.active === SidebarView.OUTLINE;\n  }\n\n  get isAttachmentsViewVisible() {\n    return this.isOpen && this.active === SidebarView.ATTACHMENTS;\n  }\n\n  /**\n   * @param {number} view - The sidebar view that should become visible,\n   *                        must be one of the values in {SidebarView}.\n   */\n  setInitialView(view = SidebarView.NONE) {\n    if (this.isInitialViewSet) {\n      return;\n    }\n    this.isInitialViewSet = true;\n\n    // If the user has already manually opened the sidebar, immediately closing\n    // it would be bad UX; also ignore the \"unknown\" sidebar view value.\n    if (view === SidebarView.NONE || view === SidebarView.UNKNOWN) {\n      this._dispatchEvent();\n      return;\n    }\n    // Prevent dispatching two back-to-back `sidebarviewchanged` events,\n    // since `this._switchView` dispatched the event if the view changed.\n    if (!this._switchView(view, /* forceOpen */ true)) {\n      this._dispatchEvent();\n    }\n  }\n\n  /**\n   * @param {number} view - The sidebar view that should be switched to,\n   *                        must be one of the values in {SidebarView}.\n   * @param {boolean} [forceOpen] - Ensure that the sidebar is open.\n   *                                The default value is `false`.\n   */\n  switchView(view, forceOpen = false) {\n    this._switchView(view, forceOpen);\n  }\n\n  /**\n   * @returns {boolean} Indicating if `this._dispatchEvent` was called.\n   * @private\n   */\n  _switchView(view, forceOpen = false) {\n    const isViewChanged = view !== this.active;\n    let shouldForceRendering = false;\n\n    switch (view) {\n      case SidebarView.NONE:\n        if (this.isOpen) {\n          this.close();\n          return true; // Closing will trigger rendering and dispatch the event.\n        }\n        return false;\n      case SidebarView.THUMBS:\n        if (this.isOpen && isViewChanged) {\n          shouldForceRendering = true;\n        }\n        break;\n      case SidebarView.OUTLINE:\n        if (this.outlineButton.disabled) {\n          return false;\n        }\n        break;\n      case SidebarView.ATTACHMENTS:\n        if (this.attachmentsButton.disabled) {\n          return false;\n        }\n        break;\n      default:\n        console.error(`PDFSidebar._switchView: \"${view}\" is not a valid view.`);\n        return false;\n    }\n    // Update the active view *after* it has been validated above,\n    // in order to prevent setting it to an invalid state.\n    this.active = view;\n\n    // Update the CSS classes, for all buttons...\n    this.thumbnailButton.classList.toggle(\n      \"toggled\",\n      view === SidebarView.THUMBS\n    );\n    this.outlineButton.classList.toggle(\n      \"toggled\",\n      view === SidebarView.OUTLINE\n    );\n    this.attachmentsButton.classList.toggle(\n      \"toggled\",\n      view === SidebarView.ATTACHMENTS\n    );\n    // ... and for all views.\n    this.thumbnailView.classList.toggle(\"hidden\", view !== SidebarView.THUMBS);\n    this.outlineView.classList.toggle(\"hidden\", view !== SidebarView.OUTLINE);\n    this.attachmentsView.classList.toggle(\n      \"hidden\",\n      view !== SidebarView.ATTACHMENTS\n    );\n\n    if (forceOpen && !this.isOpen) {\n      this.open();\n      return true; // Opening will trigger rendering and dispatch the event.\n    }\n    if (shouldForceRendering) {\n      this._updateThumbnailViewer();\n      this._forceRendering();\n    }\n    if (isViewChanged) {\n      this._dispatchEvent();\n    }\n    this._hideUINotification(this.active);\n    return isViewChanged;\n  }\n\n  open() {\n    if (this.isOpen) {\n      return;\n    }\n    this.isOpen = true;\n    this.toggleButton.classList.add(\"toggled\");\n\n    this.outerContainer.classList.add(\"sidebarMoving\", \"sidebarOpen\");\n\n    if (this.active === SidebarView.THUMBS) {\n      this._updateThumbnailViewer();\n    }\n    this._forceRendering();\n    this._dispatchEvent();\n\n    this._hideUINotification(this.active);\n  }\n\n  close() {\n    if (!this.isOpen) {\n      return;\n    }\n    this.isOpen = false;\n    this.toggleButton.classList.remove(\"toggled\");\n\n    this.outerContainer.classList.add(\"sidebarMoving\");\n    this.outerContainer.classList.remove(\"sidebarOpen\");\n\n    this._forceRendering();\n    this._dispatchEvent();\n  }\n\n  toggle() {\n    if (this.isOpen) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _dispatchEvent() {\n    this.eventBus.dispatch(\"sidebarviewchanged\", {\n      source: this,\n      view: this.visibleView,\n    });\n  }\n\n  /**\n   * @private\n   */\n  _forceRendering() {\n    if (this.onToggled) {\n      this.onToggled();\n    } else {\n      // Fallback\n      this.pdfViewer.forceRendering();\n      this.pdfThumbnailViewer.forceRendering();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _updateThumbnailViewer() {\n    const { pdfViewer, pdfThumbnailViewer } = this;\n\n    // Use the rendered pages to set the corresponding thumbnail images.\n    const pagesCount = pdfViewer.pagesCount;\n    for (let pageIndex = 0; pageIndex < pagesCount; pageIndex++) {\n      const pageView = pdfViewer.getPageView(pageIndex);\n      if (pageView && pageView.renderingState === RenderingStates.FINISHED) {\n        const thumbnailView = pdfThumbnailViewer.getThumbnail(pageIndex);\n        thumbnailView.setImage(pageView);\n      }\n    }\n    pdfThumbnailViewer.scrollThumbnailIntoView(pdfViewer.currentPageNumber);\n  }\n\n  /**\n   * @private\n   */\n  _showUINotification(view) {\n    if (this._disableNotification) {\n      return;\n    }\n\n    this.l10n\n      .get(\n        \"toggle_sidebar_notification.title\",\n        null,\n        \"Toggle Sidebar (document contains outline/attachments)\"\n      )\n      .then(msg => {\n        this.toggleButton.title = msg;\n      });\n\n    if (!this.isOpen) {\n      // Only show the notification on the `toggleButton` if the sidebar is\n      // currently closed, to avoid unnecessarily bothering the user.\n      this.toggleButton.classList.add(UI_NOTIFICATION_CLASS);\n    } else if (view === this.active) {\n      // If the sidebar is currently open *and* the `view` is visible, do not\n      // bother the user with a notification on the corresponding button.\n      return;\n    }\n\n    switch (view) {\n      case SidebarView.OUTLINE:\n        this.outlineButton.classList.add(UI_NOTIFICATION_CLASS);\n        break;\n      case SidebarView.ATTACHMENTS:\n        this.attachmentsButton.classList.add(UI_NOTIFICATION_CLASS);\n        break;\n    }\n  }\n\n  /**\n   * @private\n   */\n  _hideUINotification(view) {\n    if (this._disableNotification) {\n      return;\n    }\n\n    const removeNotification = sidebarView => {\n      switch (sidebarView) {\n        case SidebarView.OUTLINE:\n          this.outlineButton.classList.remove(UI_NOTIFICATION_CLASS);\n          break;\n        case SidebarView.ATTACHMENTS:\n          this.attachmentsButton.classList.remove(UI_NOTIFICATION_CLASS);\n          break;\n      }\n    };\n\n    if (!this.isOpen && view !== null) {\n      // Only hide the notifications when the sidebar is currently open,\n      // or when it is being reset (i.e. `view === null`).\n      return;\n    }\n    this.toggleButton.classList.remove(UI_NOTIFICATION_CLASS);\n\n    if (view !== null) {\n      removeNotification(view);\n      return;\n    }\n    // Remove all sidebar notifications on reset.\n    for (view in SidebarView) {\n      removeNotification(SidebarView[view]);\n    }\n\n    this.l10n.get(\"toggle_sidebar.title\", null, \"Toggle Sidebar\").then(msg => {\n      this.toggleButton.title = msg;\n    });\n  }\n\n  /**\n   * @private\n   */\n  _addEventListeners() {\n    this.viewerContainer.addEventListener(\"transitionend\", evt => {\n      if (evt.target === this.viewerContainer) {\n        this.outerContainer.classList.remove(\"sidebarMoving\");\n      }\n    });\n\n    this.toggleButton.addEventListener(\"click\", () => {\n      this.toggle();\n    });\n\n    // Buttons for switching views.\n    this.thumbnailButton.addEventListener(\"click\", () => {\n      this.switchView(SidebarView.THUMBS);\n    });\n\n    this.outlineButton.addEventListener(\"click\", () => {\n      this.switchView(SidebarView.OUTLINE);\n    });\n    this.outlineButton.addEventListener(\"dblclick\", () => {\n      this.eventBus.dispatch(\"toggleoutlinetree\", { source: this });\n    });\n\n    this.attachmentsButton.addEventListener(\"click\", () => {\n      this.switchView(SidebarView.ATTACHMENTS);\n    });\n\n    // Disable/enable views.\n    this.eventBus._on(\"outlineloaded\", evt => {\n      const outlineCount = evt.outlineCount;\n\n      this.outlineButton.disabled = !outlineCount;\n\n      if (outlineCount) {\n        this._showUINotification(SidebarView.OUTLINE);\n      } else if (this.active === SidebarView.OUTLINE) {\n        // If the outline view was opened during document load, switch away\n        // from it if it turns out that the document has no outline.\n        this.switchView(SidebarView.THUMBS);\n      }\n    });\n\n    this.eventBus._on(\"attachmentsloaded\", evt => {\n      if (evt.attachmentsCount) {\n        this.attachmentsButton.disabled = false;\n\n        this._showUINotification(SidebarView.ATTACHMENTS);\n        return;\n      }\n\n      // Attempt to avoid temporarily disabling, and switching away from, the\n      // attachment view for documents that do not contain proper attachments\n      // but *only* FileAttachment annotations. Hence we defer those operations\n      // slightly to allow time for parsing any FileAttachment annotations that\n      // may be present on the *initially* rendered page of the document.\n      Promise.resolve().then(() => {\n        if (this.attachmentsView.hasChildNodes()) {\n          // FileAttachment annotations were appended to the attachment view.\n          return;\n        }\n        this.attachmentsButton.disabled = true;\n\n        if (this.active === SidebarView.ATTACHMENTS) {\n          // If the attachment view was opened during document load, switch away\n          // from it if it turns out that the document has no attachments.\n          this.switchView(SidebarView.THUMBS);\n        }\n      });\n    });\n\n    // Update the thumbnailViewer, if visible, when exiting presentation mode.\n    this.eventBus._on(\"presentationmodechanged\", evt => {\n      if (!evt.active && !evt.switchInProgress && this.isThumbnailViewVisible) {\n        this._updateThumbnailViewer();\n      }\n    });\n  }\n}\n\nexport { SidebarView, PDFSidebar };\n","/* Copyright 2018 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst CharacterType = {\n  SPACE: 0,\n  ALPHA_LETTER: 1,\n  PUNCT: 2,\n  HAN_LETTER: 3,\n  KATAKANA_LETTER: 4,\n  HIRAGANA_LETTER: 5,\n  HALFWIDTH_KATAKANA_LETTER: 6,\n  THAI_LETTER: 7,\n};\n\nfunction isAlphabeticalScript(charCode) {\n  return charCode < 0x2e80;\n}\n\nfunction isAscii(charCode) {\n  return (charCode & 0xff80) === 0;\n}\n\nfunction isAsciiAlpha(charCode) {\n  return (\n    (charCode >= /* a = */ 0x61 && charCode <= /* z = */ 0x7a) ||\n    (charCode >= /* A = */ 0x41 && charCode <= /* Z = */ 0x5a)\n  );\n}\n\nfunction isAsciiDigit(charCode) {\n  return charCode >= /* 0 = */ 0x30 && charCode <= /* 9 = */ 0x39;\n}\n\nfunction isAsciiSpace(charCode) {\n  return (\n    charCode === /* SPACE = */ 0x20 ||\n    charCode === /* TAB = */ 0x09 ||\n    charCode === /* CR = */ 0x0d ||\n    charCode === /* LF = */ 0x0a\n  );\n}\n\nfunction isHan(charCode) {\n  return (\n    (charCode >= 0x3400 && charCode <= 0x9fff) ||\n    (charCode >= 0xf900 && charCode <= 0xfaff)\n  );\n}\n\nfunction isKatakana(charCode) {\n  return charCode >= 0x30a0 && charCode <= 0x30ff;\n}\n\nfunction isHiragana(charCode) {\n  return charCode >= 0x3040 && charCode <= 0x309f;\n}\n\nfunction isHalfwidthKatakana(charCode) {\n  return charCode >= 0xff60 && charCode <= 0xff9f;\n}\n\nfunction isThai(charCode) {\n  return (charCode & 0xff80) === 0x0e00;\n}\n\n/**\n * This function is based on the word-break detection implemented in:\n * https://hg.mozilla.org/mozilla-central/file/tip/intl/lwbrk/WordBreaker.cpp\n */\nfunction getCharacterType(charCode) {\n  if (isAlphabeticalScript(charCode)) {\n    if (isAscii(charCode)) {\n      if (isAsciiSpace(charCode)) {\n        return CharacterType.SPACE;\n      } else if (\n        isAsciiAlpha(charCode) ||\n        isAsciiDigit(charCode) ||\n        charCode === /* UNDERSCORE = */ 0x5f\n      ) {\n        return CharacterType.ALPHA_LETTER;\n      }\n      return CharacterType.PUNCT;\n    } else if (isThai(charCode)) {\n      return CharacterType.THAI_LETTER;\n    } else if (charCode === /* NBSP = */ 0xa0) {\n      return CharacterType.SPACE;\n    }\n    return CharacterType.ALPHA_LETTER;\n  }\n\n  if (isHan(charCode)) {\n    return CharacterType.HAN_LETTER;\n  } else if (isKatakana(charCode)) {\n    return CharacterType.KATAKANA_LETTER;\n  } else if (isHiragana(charCode)) {\n    return CharacterType.HIRAGANA_LETTER;\n  } else if (isHalfwidthKatakana(charCode)) {\n    return CharacterType.HALFWIDTH_KATAKANA_LETTER;\n  }\n  return CharacterType.ALPHA_LETTER;\n}\n\nexport { CharacterType, getCharacterType };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { createPromiseCapability } from \"./pdf\";\nimport { getCharacterType } from \"./pdf_find_utils.js\";\nimport { scrollIntoView } from \"./ui_utils.js\";\n\nconst FindState = {\n  FOUND: 0,\n  NOT_FOUND: 1,\n  WRAPPED: 2,\n  PENDING: 3,\n};\n\nconst FIND_TIMEOUT = 250; // ms\nconst MATCH_SCROLL_OFFSET_TOP = -50; // px\nconst MATCH_SCROLL_OFFSET_LEFT = -400; // px\n\nconst CHARACTERS_TO_NORMALIZE = {\n  \"\\u2018\": \"'\", // Left single quotation mark\n  \"\\u2019\": \"'\", // Right single quotation mark\n  \"\\u201A\": \"'\", // Single low-9 quotation mark\n  \"\\u201B\": \"'\", // Single high-reversed-9 quotation mark\n  \"\\u201C\": '\"', // Left double quotation mark\n  \"\\u201D\": '\"', // Right double quotation mark\n  \"\\u201E\": '\"', // Double low-9 quotation mark\n  \"\\u201F\": '\"', // Double high-reversed-9 quotation mark\n  \"\\u00BC\": \"1/4\", // Vulgar fraction one quarter\n  \"\\u00BD\": \"1/2\", // Vulgar fraction one half\n  \"\\u00BE\": \"3/4\", // Vulgar fraction three quarters\n};\n\nlet normalizationRegex = null;\nfunction normalize(text) {\n  if (!normalizationRegex) {\n    // Compile the regular expression for text normalization once.\n    const replace = Object.keys(CHARACTERS_TO_NORMALIZE).join(\"\");\n    normalizationRegex = new RegExp(`[${replace}]`, \"g\");\n  }\n  return text.replace(normalizationRegex, function (ch) {\n    return CHARACTERS_TO_NORMALIZE[ch];\n  });\n}\n\n/**\n * @typedef {Object} PDFFindControllerOptions\n * @property {IPDFLinkService} linkService - The navigation/linking service.\n * @property {EventBus} eventBus - The application event bus.\n */\n\n/**\n * Provides search functionality to find a given string in a PDF document.\n */\nclass PDFFindController {\n  /**\n   * @param {PDFFindControllerOptions} options\n   */\n  constructor({ linkService, eventBus }) {\n    this._linkService = linkService;\n    this._eventBus = eventBus;\n\n    this._reset();\n    eventBus._on(\"findbarclose\", this._onFindBarClose.bind(this));\n  }\n\n  get highlightMatches() {\n    return this._highlightMatches;\n  }\n\n  get pageMatches() {\n    return this._pageMatches;\n  }\n\n  get pageMatchesLength() {\n    return this._pageMatchesLength;\n  }\n\n  get selected() {\n    return this._selected;\n  }\n\n  get state() {\n    return this._state;\n  }\n\n  /**\n   * Set a reference to the PDF document in order to search it.\n   * Note that searching is not possible if this method is not called.\n   *\n   * @param {PDFDocumentProxy} pdfDocument - The PDF document to search.\n   */\n  setDocument(pdfDocument) {\n    if (this._pdfDocument) {\n      this._reset();\n    }\n    if (!pdfDocument) {\n      return;\n    }\n    this._pdfDocument = pdfDocument;\n    this._firstPageCapability.resolve();\n  }\n\n  executeCommand(cmd, state) {\n    if (!state) {\n      return;\n    }\n    const pdfDocument = this._pdfDocument;\n\n    if (this._state === null || this._shouldDirtyMatch(cmd, state)) {\n      this._dirtyMatch = true;\n    }\n    this._state = state;\n    if (cmd !== \"findhighlightallchange\") {\n      this._updateUIState(FindState.PENDING);\n    }\n\n    this._firstPageCapability.promise.then(() => {\n      // If the document was closed before searching began, or if the search\n      // operation was relevant for a previously opened document, do nothing.\n      if (\n        !this._pdfDocument ||\n        (pdfDocument && this._pdfDocument !== pdfDocument)\n      ) {\n        return;\n      }\n      this._extractText();\n\n      const findbarClosed = !this._highlightMatches;\n      const pendingTimeout = !!this._findTimeout;\n\n      if (this._findTimeout) {\n        clearTimeout(this._findTimeout);\n        this._findTimeout = null;\n      }\n      if (cmd === \"find\") {\n        // Trigger the find action with a small delay to avoid starting the\n        // search when the user is still typing (saving resources).\n        this._findTimeout = setTimeout(() => {\n          this._nextMatch();\n          this._findTimeout = null;\n        }, FIND_TIMEOUT);\n      } else if (this._dirtyMatch) {\n        // Immediately trigger searching for non-'find' operations, when the\n        // current state needs to be reset and matches re-calculated.\n        this._nextMatch();\n      } else if (cmd === \"findagain\") {\n        this._nextMatch();\n\n        // When the findbar was previously closed, and `highlightAll` is set,\n        // ensure that the matches on all active pages are highlighted again.\n        if (findbarClosed && this._state.highlightAll) {\n          this._updateAllPages();\n        }\n      } else if (cmd === \"findhighlightallchange\") {\n        // If there was a pending search operation, synchronously trigger a new\n        // search *first* to ensure that the correct matches are highlighted.\n        if (pendingTimeout) {\n          this._nextMatch();\n        } else {\n          this._highlightMatches = true;\n        }\n        this._updateAllPages(); // Update the highlighting on all active pages.\n      } else {\n        this._nextMatch();\n      }\n    });\n  }\n\n  scrollMatchIntoView({ element = null, pageIndex = -1, matchIndex = -1 }) {\n    if (!this._scrollMatches || !element) {\n      return;\n    } else if (matchIndex === -1 || matchIndex !== this._selected.matchIdx) {\n      return;\n    } else if (pageIndex === -1 || pageIndex !== this._selected.pageIdx) {\n      return;\n    }\n    this._scrollMatches = false; // Ensure that scrolling only happens once.\n\n    const spot = {\n      top: MATCH_SCROLL_OFFSET_TOP,\n      left: MATCH_SCROLL_OFFSET_LEFT,\n    };\n    scrollIntoView(element, spot, /* skipOverflowHiddenElements = */ true);\n  }\n\n  _reset() {\n    this._highlightMatches = false;\n    this._scrollMatches = false;\n    this._pdfDocument = null;\n    this._pageMatches = [];\n    this._pageMatchesLength = [];\n    this._state = null;\n    // Currently selected match.\n    this._selected = {\n      pageIdx: -1,\n      matchIdx: -1,\n    };\n    // Where the find algorithm currently is in the document.\n    this._offset = {\n      pageIdx: null,\n      matchIdx: null,\n      wrapped: false,\n    };\n    this._extractTextPromises = [];\n    this._pageContents = []; // Stores the normalized text for each page.\n    this._matchesCountTotal = 0;\n    this._pagesToSearch = null;\n    this._pendingFindMatches = Object.create(null);\n    this._resumePageIdx = null;\n    this._dirtyMatch = false;\n    clearTimeout(this._findTimeout);\n    this._findTimeout = null;\n\n    this._firstPageCapability = createPromiseCapability();\n  }\n\n  /**\n   * @type {string} The (current) normalized search query.\n   */\n  get _query() {\n    if (this._state.query !== this._rawQuery) {\n      this._rawQuery = this._state.query;\n      this._normalizedQuery = normalize(this._state.query);\n    }\n    return this._normalizedQuery;\n  }\n\n  _shouldDirtyMatch(cmd, state) {\n    // When the search query changes, regardless of the actual search command\n    // used, always re-calculate matches to avoid errors (fixes bug 1030622).\n    if (state.query !== this._state.query) {\n      return true;\n    }\n    switch (cmd) {\n      case \"findagain\":\n        const pageNumber = this._selected.pageIdx + 1;\n        const linkService = this._linkService;\n        // Only treat a 'findagain' event as a new search operation when it's\n        // *absolutely* certain that the currently selected match is no longer\n        // visible, e.g. as a result of the user scrolling in the document.\n        //\n        // NOTE: If only a simple `this._linkService.page` check was used here,\n        // there's a risk that consecutive 'findagain' operations could \"skip\"\n        // over matches at the top/bottom of pages thus making them completely\n        // inaccessible when there's multiple pages visible in the viewer.\n        if (\n          pageNumber >= 1 &&\n          pageNumber <= linkService.pagesCount &&\n          pageNumber !== linkService.page &&\n          !linkService.isPageVisible(pageNumber)\n        ) {\n          return true;\n        }\n        return false;\n      case \"findhighlightallchange\":\n        return false;\n    }\n    return true;\n  }\n\n  /**\n   * Helper for multi-term search that fills the `matchesWithLength` array\n   * and handles cases where one search term includes another search term (for\n   * example, \"tamed tame\" or \"this is\"). It looks for intersecting terms in\n   * the `matches` and keeps elements with a longer match length.\n   */\n  _prepareMatches(matchesWithLength, matches, matchesLength) {\n    function isSubTerm(currentIndex) {\n      const currentElem = matchesWithLength[currentIndex];\n      const nextElem = matchesWithLength[currentIndex + 1];\n\n      // Check for cases like \"TAMEd TAME\".\n      if (\n        currentIndex < matchesWithLength.length - 1 &&\n        currentElem.match === nextElem.match\n      ) {\n        currentElem.skipped = true;\n        return true;\n      }\n\n      // Check for cases like \"thIS IS\".\n      for (let i = currentIndex - 1; i >= 0; i--) {\n        const prevElem = matchesWithLength[i];\n        if (prevElem.skipped) {\n          continue;\n        }\n        if (prevElem.match + prevElem.matchLength < currentElem.match) {\n          break;\n        }\n        if (\n          prevElem.match + prevElem.matchLength >=\n          currentElem.match + currentElem.matchLength\n        ) {\n          currentElem.skipped = true;\n          return true;\n        }\n      }\n      return false;\n    }\n\n    // Sort the array of `{ match: <match>, matchLength: <matchLength> }`\n    // objects on increasing index first and on the length otherwise.\n    matchesWithLength.sort(function (a, b) {\n      return a.match === b.match\n        ? a.matchLength - b.matchLength\n        : a.match - b.match;\n    });\n    for (let i = 0, len = matchesWithLength.length; i < len; i++) {\n      if (isSubTerm(i)) {\n        continue;\n      }\n      matches.push(matchesWithLength[i].match);\n      matchesLength.push(matchesWithLength[i].matchLength);\n    }\n  }\n\n  /**\n   * Determine if the search query constitutes a \"whole word\", by comparing the\n   * first/last character type with the preceding/following character type.\n   */\n  _isEntireWord(content, startIdx, length) {\n    if (startIdx > 0) {\n      const first = content.charCodeAt(startIdx);\n      const limit = content.charCodeAt(startIdx - 1);\n      if (getCharacterType(first) === getCharacterType(limit)) {\n        return false;\n      }\n    }\n    const endIdx = startIdx + length - 1;\n    if (endIdx < content.length - 1) {\n      const last = content.charCodeAt(endIdx);\n      const limit = content.charCodeAt(endIdx + 1);\n      if (getCharacterType(last) === getCharacterType(limit)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  _calculatePhraseMatch(query, pageIndex, pageContent, entireWord) {\n    const matches = [];\n    const queryLen = query.length;\n\n    let matchIdx = -queryLen;\n    while (true) {\n      matchIdx = pageContent.indexOf(query, matchIdx + queryLen);\n      if (matchIdx === -1) {\n        break;\n      }\n      if (entireWord && !this._isEntireWord(pageContent, matchIdx, queryLen)) {\n        continue;\n      }\n      matches.push(matchIdx);\n    }\n    this._pageMatches[pageIndex] = matches;\n  }\n\n  _calculateWordMatch(query, pageIndex, pageContent, entireWord) {\n    const matchesWithLength = [];\n\n    // Divide the query into pieces and search for text in each piece.\n    const queryArray = query.match(/\\S+/g);\n    for (let i = 0, len = queryArray.length; i < len; i++) {\n      const subquery = queryArray[i];\n      const subqueryLen = subquery.length;\n\n      let matchIdx = -subqueryLen;\n      while (true) {\n        matchIdx = pageContent.indexOf(subquery, matchIdx + subqueryLen);\n        if (matchIdx === -1) {\n          break;\n        }\n        if (\n          entireWord &&\n          !this._isEntireWord(pageContent, matchIdx, subqueryLen)\n        ) {\n          continue;\n        }\n        // Other searches do not, so we store the length.\n        matchesWithLength.push({\n          match: matchIdx,\n          matchLength: subqueryLen,\n          skipped: false,\n        });\n      }\n    }\n\n    // Prepare arrays for storing the matches.\n    this._pageMatchesLength[pageIndex] = [];\n    this._pageMatches[pageIndex] = [];\n\n    // Sort `matchesWithLength`, remove intersecting terms and put the result\n    // into the two arrays.\n    this._prepareMatches(\n      matchesWithLength,\n      this._pageMatches[pageIndex],\n      this._pageMatchesLength[pageIndex]\n    );\n  }\n\n  _calculateMatch(pageIndex) {\n    let pageContent = this._pageContents[pageIndex];\n    let query = this._query;\n    const { caseSensitive, entireWord, phraseSearch } = this._state;\n\n    if (query.length === 0) {\n      // Do nothing: the matches should be wiped out already.\n      return;\n    }\n\n    if (!caseSensitive) {\n      pageContent = pageContent.toLowerCase();\n      query = query.toLowerCase();\n    }\n\n    if (phraseSearch) {\n      this._calculatePhraseMatch(query, pageIndex, pageContent, entireWord);\n    } else {\n      this._calculateWordMatch(query, pageIndex, pageContent, entireWord);\n    }\n\n    // When `highlightAll` is set, ensure that the matches on previously\n    // rendered (and still active) pages are correctly highlighted.\n    if (this._state.highlightAll) {\n      this._updatePage(pageIndex);\n    }\n    if (this._resumePageIdx === pageIndex) {\n      this._resumePageIdx = null;\n      this._nextPageMatch();\n    }\n\n    // Update the match count.\n    const pageMatchesCount = this._pageMatches[pageIndex].length;\n    if (pageMatchesCount > 0) {\n      this._matchesCountTotal += pageMatchesCount;\n      this._updateUIResultsCount();\n    }\n  }\n\n  _extractText() {\n    // Perform text extraction once if this method is called multiple times.\n    if (this._extractTextPromises.length > 0) {\n      return;\n    }\n\n    let promise = Promise.resolve();\n    for (let i = 0, ii = this._linkService.pagesCount; i < ii; i++) {\n      const extractTextCapability = createPromiseCapability();\n      this._extractTextPromises[i] = extractTextCapability.promise;\n\n      promise = promise.then(() => {\n        return this._pdfDocument\n          .getPage(i + 1)\n          .then(pdfPage => {\n            return pdfPage.getTextContent({\n              normalizeWhitespace: true,\n            });\n          })\n          .then(\n            textContent => {\n              const textItems = textContent.items;\n              const strBuf = [];\n\n              for (let j = 0, jj = textItems.length; j < jj; j++) {\n                strBuf.push(textItems[j].str);\n              }\n\n              // Store the normalized page content (text items) as one string.\n              this._pageContents[i] = normalize(strBuf.join(\"\"));\n              extractTextCapability.resolve(i);\n            },\n            reason => {\n              console.error(\n                `Unable to get text content for page ${i + 1}`,\n                reason\n              );\n              // Page error -- assuming no text content.\n              this._pageContents[i] = \"\";\n              extractTextCapability.resolve(i);\n            }\n          );\n      });\n    }\n  }\n\n  _updatePage(index) {\n    if (this._scrollMatches && this._selected.pageIdx === index) {\n      // If the page is selected, scroll the page into view, which triggers\n      // rendering the page, which adds the text layer. Once the text layer\n      // is built, it will attempt to scroll the selected match into view.\n      this._linkService.page = index + 1;\n    }\n\n    this._eventBus.dispatch(\"updatetextlayermatches\", {\n      source: this,\n      pageIndex: index,\n    });\n  }\n\n  _updateAllPages() {\n    this._eventBus.dispatch(\"updatetextlayermatches\", {\n      source: this,\n      pageIndex: -1,\n    });\n  }\n\n  _nextMatch() {\n    const previous = this._state.findPrevious;\n    const currentPageIndex = this._linkService.page - 1;\n    const numPages = this._linkService.pagesCount;\n\n    this._highlightMatches = true;\n\n    if (this._dirtyMatch) {\n      // Need to recalculate the matches, reset everything.\n      this._dirtyMatch = false;\n      this._selected.pageIdx = this._selected.matchIdx = -1;\n      this._offset.pageIdx = currentPageIndex;\n      this._offset.matchIdx = null;\n      this._offset.wrapped = false;\n      this._resumePageIdx = null;\n      this._pageMatches.length = 0;\n      this._pageMatchesLength.length = 0;\n      this._matchesCountTotal = 0;\n\n      this._updateAllPages(); // Wipe out any previously highlighted matches.\n\n      for (let i = 0; i < numPages; i++) {\n        // Start finding the matches as soon as the text is extracted.\n        if (this._pendingFindMatches[i] === true) {\n          continue;\n        }\n        this._pendingFindMatches[i] = true;\n        this._extractTextPromises[i].then(pageIdx => {\n          delete this._pendingFindMatches[pageIdx];\n          this._calculateMatch(pageIdx);\n        });\n      }\n    }\n\n    // If there's no query there's no point in searching.\n    if (this._query === \"\") {\n      this._updateUIState(FindState.FOUND);\n      return;\n    }\n    // If we're waiting on a page, we return since we can't do anything else.\n    if (this._resumePageIdx) {\n      return;\n    }\n\n    const offset = this._offset;\n    // Keep track of how many pages we should maximally iterate through.\n    this._pagesToSearch = numPages;\n    // If there's already a `matchIdx` that means we are iterating through a\n    // page's matches.\n    if (offset.matchIdx !== null) {\n      const numPageMatches = this._pageMatches[offset.pageIdx].length;\n      if (\n        (!previous && offset.matchIdx + 1 < numPageMatches) ||\n        (previous && offset.matchIdx > 0)\n      ) {\n        // The simple case; we just have advance the matchIdx to select\n        // the next match on the page.\n        offset.matchIdx = previous ? offset.matchIdx - 1 : offset.matchIdx + 1;\n        this._updateMatch(/* found = */ true);\n        return;\n      }\n      // We went beyond the current page's matches, so we advance to\n      // the next page.\n      this._advanceOffsetPage(previous);\n    }\n    // Start searching through the page.\n    this._nextPageMatch();\n  }\n\n  _matchesReady(matches) {\n    const offset = this._offset;\n    const numMatches = matches.length;\n    const previous = this._state.findPrevious;\n\n    if (numMatches) {\n      // There were matches for the page, so initialize `matchIdx`.\n      offset.matchIdx = previous ? numMatches - 1 : 0;\n      this._updateMatch(/* found = */ true);\n      return true;\n    }\n    // No matches, so attempt to search the next page.\n    this._advanceOffsetPage(previous);\n    if (offset.wrapped) {\n      offset.matchIdx = null;\n      if (this._pagesToSearch < 0) {\n        // No point in wrapping again, there were no matches.\n        this._updateMatch(/* found = */ false);\n        // While matches were not found, searching for a page\n        // with matches should nevertheless halt.\n        return true;\n      }\n    }\n    // Matches were not found (and searching is not done).\n    return false;\n  }\n\n  _nextPageMatch() {\n    if (this._resumePageIdx !== null) {\n      console.error(\"There can only be one pending page.\");\n    }\n\n    let matches = null;\n    do {\n      const pageIdx = this._offset.pageIdx;\n      matches = this._pageMatches[pageIdx];\n      if (!matches) {\n        // The matches don't exist yet for processing by `_matchesReady`,\n        // so set a resume point for when they do exist.\n        this._resumePageIdx = pageIdx;\n        break;\n      }\n    } while (!this._matchesReady(matches));\n  }\n\n  _advanceOffsetPage(previous) {\n    const offset = this._offset;\n    const numPages = this._linkService.pagesCount;\n    offset.pageIdx = previous ? offset.pageIdx - 1 : offset.pageIdx + 1;\n    offset.matchIdx = null;\n\n    this._pagesToSearch--;\n\n    if (offset.pageIdx >= numPages || offset.pageIdx < 0) {\n      offset.pageIdx = previous ? numPages - 1 : 0;\n      offset.wrapped = true;\n    }\n  }\n\n  _updateMatch(found = false) {\n    let state = FindState.NOT_FOUND;\n    const wrapped = this._offset.wrapped;\n    this._offset.wrapped = false;\n\n    if (found) {\n      const previousPage = this._selected.pageIdx;\n      this._selected.pageIdx = this._offset.pageIdx;\n      this._selected.matchIdx = this._offset.matchIdx;\n      state = wrapped ? FindState.WRAPPED : FindState.FOUND;\n\n      // Update the currently selected page to wipe out any selected matches.\n      if (previousPage !== -1 && previousPage !== this._selected.pageIdx) {\n        this._updatePage(previousPage);\n      }\n    }\n\n    this._updateUIState(state, this._state.findPrevious);\n    if (this._selected.pageIdx !== -1) {\n      // Ensure that the match will be scrolled into view.\n      this._scrollMatches = true;\n\n      this._updatePage(this._selected.pageIdx);\n    }\n  }\n\n  _onFindBarClose(evt) {\n    const pdfDocument = this._pdfDocument;\n    // Since searching is asynchronous, ensure that the removal of highlighted\n    // matches (from the UI) is async too such that the 'updatetextlayermatches'\n    // events will always be dispatched in the expected order.\n    this._firstPageCapability.promise.then(() => {\n      // Only update the UI if the document is open, and is the current one.\n      if (\n        !this._pdfDocument ||\n        (pdfDocument && this._pdfDocument !== pdfDocument)\n      ) {\n        return;\n      }\n      // Ensure that a pending, not yet started, search operation is aborted.\n      if (this._findTimeout) {\n        clearTimeout(this._findTimeout);\n        this._findTimeout = null;\n      }\n      // Abort any long running searches, to avoid a match being scrolled into\n      // view *after* the findbar has been closed. In this case `this._offset`\n      // will most likely differ from `this._selected`, hence we also ensure\n      // that any new search operation will always start with a clean slate.\n      if (this._resumePageIdx) {\n        this._resumePageIdx = null;\n        this._dirtyMatch = true;\n      }\n      // Avoid the UI being in a pending state when the findbar is re-opened.\n      this._updateUIState(FindState.FOUND);\n\n      this._highlightMatches = false;\n      this._updateAllPages(); // Wipe out any previously highlighted matches.\n    });\n  }\n\n  _requestMatchesCount() {\n    const { pageIdx, matchIdx } = this._selected;\n    let current = 0,\n      total = this._matchesCountTotal;\n    if (matchIdx !== -1) {\n      for (let i = 0; i < pageIdx; i++) {\n        current += (this._pageMatches[i] && this._pageMatches[i].length) || 0;\n      }\n      current += matchIdx + 1;\n    }\n    // When searching starts, this method may be called before the `pageMatches`\n    // have been counted (in `_calculateMatch`). Ensure that the UI won't show\n    // temporarily broken state when the active find result doesn't make sense.\n    if (current < 1 || current > total) {\n      current = total = 0;\n    }\n    return { current, total };\n  }\n\n  _updateUIResultsCount() {\n    this._eventBus.dispatch(\"updatefindmatchescount\", {\n      source: this,\n      matchesCount: this._requestMatchesCount(),\n    });\n  }\n\n  _updateUIState(state, previous) {\n    this._eventBus.dispatch(\"updatefindcontrolstate\", {\n      source: this,\n      state,\n      previous,\n      matchesCount: this._requestMatchesCount(),\n    });\n  }\n}\n\nexport { FindState, PDFFindController };\n","/* Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  isValidRotation,\n  parseQueryString,\n  waitOnEventOrTimeout,\n} from \"./ui_utils.js\";\n\n// Heuristic value used when force-resetting `this._blockHashChange`.\nconst HASH_CHANGE_TIMEOUT = 1000; // milliseconds\n// Heuristic value used when adding the current position to the browser history.\nconst POSITION_UPDATED_THRESHOLD = 50;\n// Heuristic value used when adding a temporary position to the browser history.\nconst UPDATE_VIEWAREA_TIMEOUT = 1000; // milliseconds\n\n/**\n * @typedef {Object} PDFHistoryOptions\n * @property {IPDFLinkService} linkService - The navigation/linking service.\n * @property {EventBus} eventBus - The application event bus.\n */\n\n/**\n * @typedef {Object} InitializeParameters\n * @property {string} fingerprint - The PDF document's unique fingerprint.\n * @property {boolean} [resetHistory] - Reset the browsing history.\n * @property {boolean} [updateUrl] - Attempt to update the document URL, with\n *   the current hash, when pushing/replacing browser history entries.\n */\n\n/**\n * @typedef {Object} PushParameters\n * @property {string} [namedDest] - The named destination. If absent, a\n *   stringified version of `explicitDest` is used.\n * @property {Array} explicitDest - The explicit destination array.\n * @property {number} pageNumber - The page to which the destination points.\n */\n\nfunction getCurrentHash() {\n  return document.location.hash;\n}\n\nclass PDFHistory {\n  /**\n   * @param {PDFHistoryOptions} options\n   */\n  constructor({ linkService, eventBus }) {\n    this.linkService = linkService;\n    this.eventBus = eventBus;\n\n    this._initialized = false;\n    this._fingerprint = \"\";\n    this.reset();\n\n    this._boundEvents = null;\n    this._isViewerInPresentationMode = false;\n    // Ensure that we don't miss either a 'presentationmodechanged' or a\n    // 'pagesinit' event, by registering the listeners immediately.\n    this.eventBus._on(\"presentationmodechanged\", evt => {\n      this._isViewerInPresentationMode = evt.active || evt.switchInProgress;\n    });\n    this.eventBus._on(\"pagesinit\", () => {\n      this._isPagesLoaded = false;\n\n      const onPagesLoaded = evt => {\n        this.eventBus._off(\"pagesloaded\", onPagesLoaded);\n        this._isPagesLoaded = !!evt.pagesCount;\n      };\n      this.eventBus._on(\"pagesloaded\", onPagesLoaded);\n    });\n  }\n\n  /**\n   * Initialize the history for the PDF document, using either the current\n   * browser history entry or the document hash, whichever is present.\n   * @param {InitializeParameters} params\n   */\n  initialize({ fingerprint, resetHistory = false, updateUrl = false }) {\n    if (!fingerprint || typeof fingerprint !== \"string\") {\n      console.error(\n        'PDFHistory.initialize: The \"fingerprint\" must be a non-empty string.'\n      );\n      return;\n    }\n    // Ensure that any old state is always reset upon initialization.\n    if (this._initialized) {\n      this.reset();\n    }\n    const reInitialized =\n      this._fingerprint !== \"\" && this._fingerprint !== fingerprint;\n    this._fingerprint = fingerprint;\n    this._updateUrl = updateUrl === true;\n\n    this._initialized = true;\n    this._bindEvents();\n    const state = window.history.state;\n\n    this._popStateInProgress = false;\n    this._blockHashChange = 0;\n    this._currentHash = getCurrentHash();\n    this._numPositionUpdates = 0;\n\n    this._uid = this._maxUid = 0;\n    this._destination = null;\n    this._position = null;\n\n    if (!this._isValidState(state, /* checkReload = */ true) || resetHistory) {\n      const { hash, page, rotation } = this._parseCurrentHash();\n\n      if (!hash || reInitialized || resetHistory) {\n        // Ensure that the browser history is reset on PDF document load.\n        this._pushOrReplaceState(null, /* forceReplace = */ true);\n        return;\n      }\n      // Ensure that the browser history is initialized correctly when\n      // the document hash is present on PDF document load.\n      this._pushOrReplaceState(\n        { hash, page, rotation },\n        /* forceReplace = */ true\n      );\n      return;\n    }\n\n    // The browser history contains a valid entry, ensure that the history is\n    // initialized correctly on PDF document load.\n    const destination = state.destination;\n    this._updateInternalState(\n      destination,\n      state.uid,\n      /* removeTemporary = */ true\n    );\n    if (this._uid > this._maxUid) {\n      this._maxUid = this._uid;\n    }\n\n    if (destination.rotation !== undefined) {\n      this._initialRotation = destination.rotation;\n    }\n    if (destination.dest) {\n      this._initialBookmark = JSON.stringify(destination.dest);\n\n      // If the history is updated, e.g. through the user changing the hash,\n      // before the initial destination has become visible, then we do *not*\n      // want to potentially add `this._position` to the browser history.\n      this._destination.page = null;\n    } else if (destination.hash) {\n      this._initialBookmark = destination.hash;\n    } else if (destination.page) {\n      // Fallback case; shouldn't be necessary, but better safe than sorry.\n      this._initialBookmark = `page=${destination.page}`;\n    }\n  }\n\n  /**\n   * Reset the current `PDFHistory` instance, and consequently prevent any\n   * further updates and/or navigation of the browser history.\n   */\n  reset() {\n    if (this._initialized) {\n      this._pageHide(); // Simulate a 'pagehide' event when resetting.\n\n      this._initialized = false;\n      this._unbindEvents();\n    }\n    if (this._updateViewareaTimeout) {\n      clearTimeout(this._updateViewareaTimeout);\n      this._updateViewareaTimeout = null;\n    }\n    this._initialBookmark = null;\n    this._initialRotation = null;\n  }\n\n  /**\n   * Push an internal destination to the browser history.\n   * @param {PushParameters}\n   */\n  push({ namedDest = null, explicitDest, pageNumber }) {\n    if (!this._initialized) {\n      return;\n    }\n    if (namedDest && typeof namedDest !== \"string\") {\n      console.error(\n        \"PDFHistory.push: \" +\n          `\"${namedDest}\" is not a valid namedDest parameter.`\n      );\n      return;\n    } else if (!Array.isArray(explicitDest)) {\n      console.error(\n        \"PDFHistory.push: \" +\n          `\"${explicitDest}\" is not a valid explicitDest parameter.`\n      );\n      return;\n    } else if (\n      !(\n        Number.isInteger(pageNumber) &&\n        pageNumber > 0 &&\n        pageNumber <= this.linkService.pagesCount\n      )\n    ) {\n      // Allow an unset `pageNumber` if and only if the history is still empty;\n      // please refer to the `this._destination.page = null;` comment above.\n      if (pageNumber !== null || this._destination) {\n        console.error(\n          \"PDFHistory.push: \" +\n            `\"${pageNumber}\" is not a valid pageNumber parameter.`\n        );\n        return;\n      }\n    }\n\n    const hash = namedDest || JSON.stringify(explicitDest);\n    if (!hash) {\n      // The hash *should* never be undefined, but if that were to occur,\n      // avoid any possible issues by not updating the browser history.\n      return;\n    }\n\n    let forceReplace = false;\n    if (\n      this._destination &&\n      (isDestHashesEqual(this._destination.hash, hash) ||\n        isDestArraysEqual(this._destination.dest, explicitDest))\n    ) {\n      // When the new destination is identical to `this._destination`, and\n      // its `page` is undefined, replace the current browser history entry.\n      // NOTE: This can only occur if `this._destination` was set either:\n      //  - through the document hash being specified on load.\n      //  - through the user changing the hash of the document.\n      if (this._destination.page) {\n        return;\n      }\n      forceReplace = true;\n    }\n    if (this._popStateInProgress && !forceReplace) {\n      return;\n    }\n\n    this._pushOrReplaceState(\n      {\n        dest: explicitDest,\n        hash,\n        page: pageNumber,\n        rotation: this.linkService.rotation,\n      },\n      forceReplace\n    );\n\n    if (!this._popStateInProgress) {\n      // Prevent the browser history from updating while the new destination is\n      // being scrolled into view, to avoid potentially inconsistent state.\n      this._popStateInProgress = true;\n      // We defer the resetting of `this._popStateInProgress`, to account for\n      // e.g. zooming occuring when the new destination is being navigated to.\n      Promise.resolve().then(() => {\n        this._popStateInProgress = false;\n      });\n    }\n  }\n\n  /**\n   * Push the current position to the browser history.\n   */\n  pushCurrentPosition() {\n    if (!this._initialized || this._popStateInProgress) {\n      return;\n    }\n    this._tryPushCurrentPosition();\n  }\n\n  /**\n   * Go back one step in the browser history.\n   * NOTE: Avoids navigating away from the document, useful for \"named actions\".\n   */\n  back() {\n    if (!this._initialized || this._popStateInProgress) {\n      return;\n    }\n    const state = window.history.state;\n    if (this._isValidState(state) && state.uid > 0) {\n      window.history.back();\n    }\n  }\n\n  /**\n   * Go forward one step in the browser history.\n   * NOTE: Avoids navigating away from the document, useful for \"named actions\".\n   */\n  forward() {\n    if (!this._initialized || this._popStateInProgress) {\n      return;\n    }\n    const state = window.history.state;\n    if (this._isValidState(state) && state.uid < this._maxUid) {\n      window.history.forward();\n    }\n  }\n\n  /**\n   * @type {boolean} Indicating if the user is currently moving through the\n   *   browser history, useful e.g. for skipping the next 'hashchange' event.\n   */\n  get popStateInProgress() {\n    return (\n      this._initialized &&\n      (this._popStateInProgress || this._blockHashChange > 0)\n    );\n  }\n\n  get initialBookmark() {\n    return this._initialized ? this._initialBookmark : null;\n  }\n\n  get initialRotation() {\n    return this._initialized ? this._initialRotation : null;\n  }\n\n  /**\n   * @private\n   */\n  _pushOrReplaceState(destination, forceReplace = false) {\n    const shouldReplace = forceReplace || !this._destination;\n    const newState = {\n      fingerprint: this._fingerprint,\n      uid: shouldReplace ? this._uid : this._uid + 1,\n      destination,\n    };\n\n    if (\n      typeof PDFJSDev !== \"undefined\" &&\n      PDFJSDev.test(\"CHROME\") &&\n      window.history.state &&\n      window.history.state.chromecomState\n    ) {\n      // history.state.chromecomState is managed by chromecom.js.\n      newState.chromecomState = window.history.state.chromecomState;\n    }\n    this._updateInternalState(destination, newState.uid);\n\n    let newUrl;\n    if (this._updateUrl && destination && destination.hash) {\n      const baseUrl = document.location.href.split(\"#\")[0];\n      // Prevent errors in Firefox.\n      if (!baseUrl.startsWith(\"file://\")) {\n        newUrl = `${baseUrl}#${destination.hash}`;\n      }\n    }\n    if (shouldReplace) {\n      window.history.replaceState(newState, \"\", newUrl);\n    } else {\n      this._maxUid = this._uid;\n      window.history.pushState(newState, \"\", newUrl);\n    }\n\n    if (\n      typeof PDFJSDev !== \"undefined\" &&\n      PDFJSDev.test(\"CHROME\") &&\n      top === window\n    ) {\n      // eslint-disable-next-line no-undef\n      chrome.runtime.sendMessage(\"showPageAction\");\n    }\n  }\n\n  /**\n   * @private\n   */\n  _tryPushCurrentPosition(temporary = false) {\n    if (!this._position) {\n      return;\n    }\n    let position = this._position;\n    if (temporary) {\n      position = Object.assign(Object.create(null), this._position);\n      position.temporary = true;\n    }\n\n    if (!this._destination) {\n      this._pushOrReplaceState(position);\n      return;\n    }\n    if (this._destination.temporary) {\n      // Always replace a previous *temporary* position.\n      this._pushOrReplaceState(position, /* forceReplace = */ true);\n      return;\n    }\n    if (this._destination.hash === position.hash) {\n      return; // The current document position has not changed.\n    }\n    if (\n      !this._destination.page &&\n      (POSITION_UPDATED_THRESHOLD <= 0 ||\n        this._numPositionUpdates <= POSITION_UPDATED_THRESHOLD)\n    ) {\n      // `this._destination` was set through the user changing the hash of\n      // the document. Do not add `this._position` to the browser history,\n      // to avoid \"flooding\" it with lots of (nearly) identical entries,\n      // since we cannot ensure that the document position has changed.\n      return;\n    }\n\n    let forceReplace = false;\n    if (\n      this._destination.page >= position.first &&\n      this._destination.page <= position.page\n    ) {\n      // When the `page` of `this._destination` is still visible, do not\n      // update the browsing history when `this._destination` either:\n      //  - contains an internal destination, since in this case we\n      //    cannot ensure that the document position has actually changed.\n      //  - was set through the user changing the hash of the document.\n      if (this._destination.dest || !this._destination.first) {\n        return;\n      }\n      // To avoid \"flooding\" the browser history, replace the current entry.\n      forceReplace = true;\n    }\n    this._pushOrReplaceState(position, forceReplace);\n  }\n\n  /**\n   * @private\n   */\n  _isValidState(state, checkReload = false) {\n    if (!state) {\n      return false;\n    }\n    if (state.fingerprint !== this._fingerprint) {\n      if (checkReload) {\n        // Potentially accept the history entry, even if the fingerprints don't\n        // match, when the viewer was reloaded (see issue 6847).\n        if (\n          typeof state.fingerprint !== \"string\" ||\n          state.fingerprint.length !== this._fingerprint.length\n        ) {\n          return false;\n        }\n        const [perfEntry] = performance.getEntriesByType(\"navigation\");\n        if (!perfEntry || perfEntry.type !== \"reload\") {\n          return false;\n        }\n      } else {\n        // This should only occur in viewers with support for opening more than\n        // one PDF document, e.g. the GENERIC viewer.\n        return false;\n      }\n    }\n    if (!Number.isInteger(state.uid) || state.uid < 0) {\n      return false;\n    }\n    if (state.destination === null || typeof state.destination !== \"object\") {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * @private\n   */\n  _updateInternalState(destination, uid, removeTemporary = false) {\n    if (this._updateViewareaTimeout) {\n      // When updating `this._destination`, make sure that we always wait for\n      // the next 'updateviewarea' event before (potentially) attempting to\n      // push the current position to the browser history.\n      clearTimeout(this._updateViewareaTimeout);\n      this._updateViewareaTimeout = null;\n    }\n    if (removeTemporary && destination && destination.temporary) {\n      // When the `destination` comes from the browser history,\n      // we no longer treat it as a *temporary* position.\n      delete destination.temporary;\n    }\n    this._destination = destination;\n    this._uid = uid;\n    // This should always be reset when `this._destination` is updated.\n    this._numPositionUpdates = 0;\n  }\n\n  /**\n   * @private\n   */\n  _parseCurrentHash() {\n    const hash = unescape(getCurrentHash()).substring(1);\n    let page = parseQueryString(hash).page | 0;\n\n    if (\n      !(\n        Number.isInteger(page) &&\n        page > 0 &&\n        page <= this.linkService.pagesCount\n      )\n    ) {\n      page = null;\n    }\n    return { hash, page, rotation: this.linkService.rotation };\n  }\n\n  /**\n   * @private\n   */\n  _updateViewarea({ location }) {\n    if (this._updateViewareaTimeout) {\n      clearTimeout(this._updateViewareaTimeout);\n      this._updateViewareaTimeout = null;\n    }\n\n    this._position = {\n      hash: this._isViewerInPresentationMode\n        ? `page=${location.pageNumber}`\n        : location.pdfOpenParams.substring(1),\n      page: this.linkService.page,\n      first: location.pageNumber,\n      rotation: location.rotation,\n    };\n\n    if (this._popStateInProgress) {\n      return;\n    }\n\n    if (\n      POSITION_UPDATED_THRESHOLD > 0 &&\n      this._isPagesLoaded &&\n      this._destination &&\n      !this._destination.page\n    ) {\n      // If the current destination was set through the user changing the hash\n      // of the document, we will usually not try to push the current position\n      // to the browser history; see `this._tryPushCurrentPosition()`.\n      //\n      // To prevent `this._tryPushCurrentPosition()` from effectively being\n      // reduced to a no-op in this case, we will assume that the position\n      // *did* in fact change if the 'updateviewarea' event was dispatched\n      // more than `POSITION_UPDATED_THRESHOLD` times.\n      this._numPositionUpdates++;\n    }\n\n    if (UPDATE_VIEWAREA_TIMEOUT > 0) {\n      // When closing the browser, a 'pagehide' event will be dispatched which\n      // *should* allow us to push the current position to the browser history.\n      // In practice, it seems that the event is arriving too late in order for\n      // the session history to be successfully updated.\n      // (For additional details, please refer to the discussion in\n      //  https://bugzilla.mozilla.org/show_bug.cgi?id=1153393.)\n      //\n      // To workaround this we attempt to *temporarily* add the current position\n      // to the browser history only when the viewer is *idle*,\n      // i.e. when scrolling and/or zooming does not occur.\n      //\n      // PLEASE NOTE: It's absolutely imperative that the browser history is\n      // *not* updated too often, since that would render the viewer more or\n      // less unusable. Hence the use of a timeout to delay the update until\n      // the viewer has been idle for `UPDATE_VIEWAREA_TIMEOUT` milliseconds.\n      this._updateViewareaTimeout = setTimeout(() => {\n        if (!this._popStateInProgress) {\n          this._tryPushCurrentPosition(/* temporary = */ true);\n        }\n        this._updateViewareaTimeout = null;\n      }, UPDATE_VIEWAREA_TIMEOUT);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _popState({ state }) {\n    const newHash = getCurrentHash(),\n      hashChanged = this._currentHash !== newHash;\n    this._currentHash = newHash;\n\n    if (\n      (typeof PDFJSDev !== \"undefined\" &&\n        PDFJSDev.test(\"CHROME\") &&\n        state &&\n        state.chromecomState &&\n        !this._isValidState(state)) ||\n      !state\n    ) {\n      // This case corresponds to the user changing the hash of the document.\n      this._uid++;\n\n      const { hash, page, rotation } = this._parseCurrentHash();\n      this._pushOrReplaceState(\n        { hash, page, rotation },\n        /* forceReplace = */ true\n      );\n      return;\n    }\n    if (!this._isValidState(state)) {\n      // This should only occur in viewers with support for opening more than\n      // one PDF document, e.g. the GENERIC viewer.\n      return;\n    }\n\n    // Prevent the browser history from updating until the new destination,\n    // as stored in the browser history, has been scrolled into view.\n    this._popStateInProgress = true;\n\n    if (hashChanged) {\n      // When the hash changed, implying that the 'popstate' event will be\n      // followed by a 'hashchange' event, then we do *not* want to update the\n      // browser history when handling the 'hashchange' event (in web/app.js)\n      // since that would *overwrite* the new destination navigated to below.\n      //\n      // To avoid accidentally disabling all future user-initiated hash changes,\n      // if there's e.g. another 'hashchange' listener that stops the event\n      // propagation, we make sure to always force-reset `this._blockHashChange`\n      // after `HASH_CHANGE_TIMEOUT` milliseconds have passed.\n      this._blockHashChange++;\n      waitOnEventOrTimeout({\n        target: window,\n        name: \"hashchange\",\n        delay: HASH_CHANGE_TIMEOUT,\n      }).then(() => {\n        this._blockHashChange--;\n      });\n    }\n\n    // Navigate to the new destination.\n    const destination = state.destination;\n    this._updateInternalState(\n      destination,\n      state.uid,\n      /* removeTemporary = */ true\n    );\n    if (this._uid > this._maxUid) {\n      this._maxUid = this._uid;\n    }\n\n    if (isValidRotation(destination.rotation)) {\n      this.linkService.rotation = destination.rotation;\n    }\n    if (destination.dest) {\n      this.linkService.navigateTo(destination.dest);\n    } else if (destination.hash) {\n      this.linkService.setHash(destination.hash);\n    } else if (destination.page) {\n      // Fallback case; shouldn't be necessary, but better safe than sorry.\n      this.linkService.page = destination.page;\n    }\n\n    // Since `PDFLinkService.navigateTo` is asynchronous, we thus defer the\n    // resetting of `this._popStateInProgress` slightly.\n    Promise.resolve().then(() => {\n      this._popStateInProgress = false;\n    });\n  }\n\n  /**\n   * @private\n   */\n  _pageHide() {\n    // Attempt to push the `this._position` into the browser history when\n    // navigating away from the document. This is *only* done if the history\n    // is empty/temporary, since otherwise an existing browser history entry\n    // will end up being overwritten (given that new entries cannot be pushed\n    // into the browser history when the 'unload' event has already fired).\n    if (!this._destination || this._destination.temporary) {\n      this._tryPushCurrentPosition();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _bindEvents() {\n    if (this._boundEvents) {\n      return; // The event listeners were already added.\n    }\n    this._boundEvents = {\n      updateViewarea: this._updateViewarea.bind(this),\n      popState: this._popState.bind(this),\n      pageHide: this._pageHide.bind(this),\n    };\n\n    this.eventBus._on(\"updateviewarea\", this._boundEvents.updateViewarea);\n    window.addEventListener(\"popstate\", this._boundEvents.popState);\n    window.addEventListener(\"pagehide\", this._boundEvents.pageHide);\n  }\n\n  /**\n   * @private\n   */\n  _unbindEvents() {\n    if (!this._boundEvents) {\n      return; // The event listeners were already removed.\n    }\n    this.eventBus._off(\"updateviewarea\", this._boundEvents.updateViewarea);\n    window.removeEventListener(\"popstate\", this._boundEvents.popState);\n    window.removeEventListener(\"pagehide\", this._boundEvents.pageHide);\n\n    this._boundEvents = null;\n  }\n}\n\nfunction isDestHashesEqual(destHash, pushHash) {\n  if (typeof destHash !== \"string\" || typeof pushHash !== \"string\") {\n    return false;\n  }\n  if (destHash === pushHash) {\n    return true;\n  }\n  const { nameddest } = parseQueryString(destHash);\n  if (nameddest === pushHash) {\n    return true;\n  }\n  return false;\n}\n\nfunction isDestArraysEqual(firstDest, secondDest) {\n  function isEntryEqual(first, second) {\n    if (typeof first !== typeof second) {\n      return false;\n    }\n    if (Array.isArray(first) || Array.isArray(second)) {\n      return false;\n    }\n    if (first !== null && typeof first === \"object\" && second !== null) {\n      if (Object.keys(first).length !== Object.keys(second).length) {\n        return false;\n      }\n      for (const key in first) {\n        if (!isEntryEqual(first[key], second[key])) {\n          return false;\n        }\n      }\n      return true;\n    }\n    return first === second || (Number.isNaN(first) && Number.isNaN(second));\n  }\n\n  if (!(Array.isArray(firstDest) && Array.isArray(secondDest))) {\n    return false;\n  }\n  if (firstDest.length !== secondDest.length) {\n    return false;\n  }\n  for (let i = 0, ii = firstDest.length; i < ii; i++) {\n    if (!isEntryEqual(firstDest[i], secondDest[i])) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport { PDFHistory, isDestHashesEqual, isDestArraysEqual };\n","/* Copyright 2015 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { parseQueryString } from \"./ui_utils.js\";\n\n/**\n * @typedef {Object} PDFLinkServiceOptions\n * @property {EventBus} eventBus - The application event bus.\n * @property {number} [externalLinkTarget] - Specifies the `target` attribute\n *   for external links. Must use one of the values from {LinkTarget}.\n *   Defaults to using no target.\n * @property {string} [externalLinkRel] - Specifies the `rel` attribute for\n *   external links. Defaults to stripping the referrer.\n * @property {boolean} [ignoreDestinationZoom] - Ignores the zoom argument,\n *   thus preserving the current zoom level in the viewer, when navigating\n *   to internal destinations. The default value is `false`.\n */\n\n/**\n * Performs navigation functions inside PDF, such as opening specified page,\n * or destination.\n * @implements {IPDFLinkService}\n */\nclass PDFLinkService {\n  /**\n   * @param {PDFLinkServiceOptions} options\n   */\n  constructor({\n    eventBus,\n    externalLinkTarget = null,\n    externalLinkRel = null,\n    externalLinkEnabled = true,\n    ignoreDestinationZoom = false,\n  } = {}) {\n    this.eventBus = eventBus;\n    this.externalLinkTarget = externalLinkTarget;\n    this.externalLinkRel = externalLinkRel;\n    this.externalLinkEnabled = externalLinkEnabled;\n    this._ignoreDestinationZoom = ignoreDestinationZoom;\n\n    this.baseUrl = null;\n    this.pdfDocument = null;\n    this.pdfViewer = null;\n    this.pdfHistory = null;\n\n    this._pagesRefCache = null;\n  }\n\n  setDocument(pdfDocument, baseUrl = null) {\n    this.baseUrl = baseUrl;\n    this.pdfDocument = pdfDocument;\n    this._pagesRefCache = Object.create(null);\n  }\n\n  setViewer(pdfViewer) {\n    this.pdfViewer = pdfViewer;\n  }\n\n  setHistory(pdfHistory) {\n    this.pdfHistory = pdfHistory;\n  }\n\n  /**\n   * @type {number}\n   */\n  get pagesCount() {\n    return this.pdfDocument ? this.pdfDocument.numPages : 0;\n  }\n\n  /**\n   * @type {number}\n   */\n  get page() {\n    return this.pdfViewer.currentPageNumber;\n  }\n\n  /**\n   * @param {number} value\n   */\n  set page(value) {\n    this.pdfViewer.currentPageNumber = value;\n  }\n\n  /**\n   * @type {number}\n   */\n  get rotation() {\n    return this.pdfViewer.pagesRotation;\n  }\n\n  /**\n   * @param {number} value\n   */\n  set rotation(value) {\n    this.pdfViewer.pagesRotation = value;\n  }\n\n  /**\n   * @param {string|Array} dest - The named, or explicit, PDF destination.\n   */\n  navigateTo(dest) {\n    const goToDestination = ({ namedDest, explicitDest }) => {\n      // Dest array looks like that: <page-ref> </XYZ|/FitXXX> <args..>\n      const destRef = explicitDest[0];\n      let pageNumber;\n\n      if (destRef instanceof Object) {\n        pageNumber = this._cachedPageNumber(destRef);\n\n        if (pageNumber === null) {\n          // Fetch the page reference if it's not yet available. This could\n          // only occur during loading, before all pages have been resolved.\n          this.pdfDocument\n            .getPageIndex(destRef)\n            .then(pageIndex => {\n              this.cachePageRef(pageIndex + 1, destRef);\n              goToDestination({ namedDest, explicitDest });\n            })\n            .catch(() => {\n              console.error(\n                `PDFLinkService.navigateTo: \"${destRef}\" is not ` +\n                  `a valid page reference, for dest=\"${dest}\".`\n              );\n            });\n          return;\n        }\n      } else if (Number.isInteger(destRef)) {\n        pageNumber = destRef + 1;\n      } else {\n        console.error(\n          `PDFLinkService.navigateTo: \"${destRef}\" is not ` +\n            `a valid destination reference, for dest=\"${dest}\".`\n        );\n        return;\n      }\n      if (!pageNumber || pageNumber < 1 || pageNumber > this.pagesCount) {\n        console.error(\n          `PDFLinkService.navigateTo: \"${pageNumber}\" is not ` +\n            `a valid page number, for dest=\"${dest}\".`\n        );\n        return;\n      }\n\n      if (this.pdfHistory) {\n        // Update the browser history before scrolling the new destination into\n        // view, to be able to accurately capture the current document position.\n        this.pdfHistory.pushCurrentPosition();\n        this.pdfHistory.push({ namedDest, explicitDest, pageNumber });\n      }\n\n      this.pdfViewer.scrollPageIntoView({\n        pageNumber,\n        destArray: explicitDest,\n        ignoreDestinationZoom: this._ignoreDestinationZoom,\n      });\n    };\n\n    new Promise((resolve, reject) => {\n      if (typeof dest === \"string\") {\n        this.pdfDocument.getDestination(dest).then(destArray => {\n          resolve({\n            namedDest: dest,\n            explicitDest: destArray,\n          });\n        });\n        return;\n      }\n      resolve({\n        namedDest: \"\",\n        explicitDest: dest,\n      });\n    }).then(data => {\n      if (!Array.isArray(data.explicitDest)) {\n        console.error(\n          `PDFLinkService.navigateTo: \"${data.explicitDest}\" is` +\n            ` not a valid destination array, for dest=\"${dest}\".`\n        );\n        return;\n      }\n      goToDestination(data);\n    });\n  }\n\n  /**\n   * @param {string|Array} dest - The PDF destination object.\n   * @returns {string} The hyperlink to the PDF object.\n   */\n  getDestinationHash(dest) {\n    if (typeof dest === \"string\") {\n      return this.getAnchorUrl(\"#\" + escape(dest));\n    }\n    if (Array.isArray(dest)) {\n      const str = JSON.stringify(dest);\n      return this.getAnchorUrl(\"#\" + escape(str));\n    }\n    return this.getAnchorUrl(\"\");\n  }\n\n  /**\n   * Prefix the full url on anchor links to make sure that links are resolved\n   * relative to the current URL instead of the one defined in <base href>.\n   * @param {string} anchor The anchor hash, including the #.\n   * @returns {string} The hyperlink to the PDF object.\n   */\n  getAnchorUrl(anchor) {\n    return (this.baseUrl || \"\") + anchor;\n  }\n\n  /**\n   * @param {string} hash\n   */\n  setHash(hash) {\n    let pageNumber, dest;\n    if (hash.includes(\"=\")) {\n      const params = parseQueryString(hash);\n      if (\"search\" in params) {\n        this.eventBus.dispatch(\"findfromurlhash\", {\n          source: this,\n          query: params.search.replace(/\"/g, \"\"),\n          phraseSearch: params.phrase === \"true\",\n        });\n      }\n      // borrowing syntax from \"Parameters for Opening PDF Files\"\n      if (\"nameddest\" in params) {\n        this.navigateTo(params.nameddest);\n        return;\n      }\n      if (\"page\" in params) {\n        pageNumber = params.page | 0 || 1;\n      }\n      if (\"zoom\" in params) {\n        // Build the destination array.\n        const zoomArgs = params.zoom.split(\",\"); // scale,left,top\n        const zoomArg = zoomArgs[0];\n        const zoomArgNumber = parseFloat(zoomArg);\n\n        if (!zoomArg.includes(\"Fit\")) {\n          // If the zoomArg is a number, it has to get divided by 100. If it's\n          // a string, it should stay as it is.\n          dest = [\n            null,\n            { name: \"XYZ\" },\n            zoomArgs.length > 1 ? zoomArgs[1] | 0 : null,\n            zoomArgs.length > 2 ? zoomArgs[2] | 0 : null,\n            zoomArgNumber ? zoomArgNumber / 100 : zoomArg,\n          ];\n        } else {\n          if (zoomArg === \"Fit\" || zoomArg === \"FitB\") {\n            dest = [null, { name: zoomArg }];\n          } else if (\n            zoomArg === \"FitH\" ||\n            zoomArg === \"FitBH\" ||\n            zoomArg === \"FitV\" ||\n            zoomArg === \"FitBV\"\n          ) {\n            dest = [\n              null,\n              { name: zoomArg },\n              zoomArgs.length > 1 ? zoomArgs[1] | 0 : null,\n            ];\n          } else if (zoomArg === \"FitR\") {\n            if (zoomArgs.length !== 5) {\n              console.error(\n                'PDFLinkService.setHash: Not enough parameters for \"FitR\".'\n              );\n            } else {\n              dest = [\n                null,\n                { name: zoomArg },\n                zoomArgs[1] | 0,\n                zoomArgs[2] | 0,\n                zoomArgs[3] | 0,\n                zoomArgs[4] | 0,\n              ];\n            }\n          } else {\n            console.error(\n              `PDFLinkService.setHash: \"${zoomArg}\" is not ` +\n                \"a valid zoom value.\"\n            );\n          }\n        }\n      }\n      if (dest) {\n        this.pdfViewer.scrollPageIntoView({\n          pageNumber: pageNumber || this.page,\n          destArray: dest,\n          allowNegativeOffset: true,\n        });\n      } else if (pageNumber) {\n        this.page = pageNumber; // simple page\n      }\n      if (\"pagemode\" in params) {\n        this.eventBus.dispatch(\"pagemode\", {\n          source: this,\n          mode: params.pagemode,\n        });\n      }\n    } else {\n      // Named (or explicit) destination.\n      dest = unescape(hash);\n      try {\n        dest = JSON.parse(dest);\n\n        if (!Array.isArray(dest)) {\n          // Avoid incorrectly rejecting a valid named destination, such as\n          // e.g. \"4.3\" or \"true\", because `JSON.parse` converted its type.\n          dest = dest.toString();\n        }\n      } catch (ex) {}\n\n      if (typeof dest === \"string\" || isValidExplicitDestination(dest)) {\n        this.navigateTo(dest);\n        return;\n      }\n      console.error(\n        `PDFLinkService.setHash: \"${unescape(hash)}\" is not ` +\n          \"a valid destination.\"\n      );\n    }\n  }\n\n  /**\n   * @param {string} action\n   */\n  executeNamedAction(action) {\n    // See PDF reference, table 8.45 - Named action\n    switch (action) {\n      case \"GoBack\":\n        if (this.pdfHistory) {\n          this.pdfHistory.back();\n        }\n        break;\n\n      case \"GoForward\":\n        if (this.pdfHistory) {\n          this.pdfHistory.forward();\n        }\n        break;\n\n      case \"NextPage\":\n        if (this.page < this.pagesCount) {\n          this.page++;\n        }\n        break;\n\n      case \"PrevPage\":\n        if (this.page > 1) {\n          this.page--;\n        }\n        break;\n\n      case \"LastPage\":\n        this.page = this.pagesCount;\n        break;\n\n      case \"FirstPage\":\n        this.page = 1;\n        break;\n\n      default:\n        break; // No action according to spec\n    }\n\n    this.eventBus.dispatch(\"namedaction\", {\n      source: this,\n      action,\n    });\n  }\n\n  /**\n   * @param {number} pageNum - page number.\n   * @param {Object} pageRef - reference to the page.\n   */\n  cachePageRef(pageNum, pageRef) {\n    if (!pageRef) {\n      return;\n    }\n    const refStr =\n      pageRef.gen === 0 ? `${pageRef.num}R` : `${pageRef.num}R${pageRef.gen}`;\n    this._pagesRefCache[refStr] = pageNum;\n  }\n\n  _cachedPageNumber(pageRef) {\n    const refStr =\n      pageRef.gen === 0 ? `${pageRef.num}R` : `${pageRef.num}R${pageRef.gen}`;\n    return (this._pagesRefCache && this._pagesRefCache[refStr]) || null;\n  }\n\n  /**\n   * @param {number} pageNumber\n   */\n  isPageVisible(pageNumber) {\n    return this.pdfViewer.isPageVisible(pageNumber);\n  }\n}\n\nfunction isValidExplicitDestination(dest) {\n  if (!Array.isArray(dest)) {\n    return false;\n  }\n  const destLength = dest.length;\n  if (destLength < 2) {\n    return false;\n  }\n  const page = dest[0];\n  if (\n    !(\n      typeof page === \"object\" &&\n      Number.isInteger(page.num) &&\n      Number.isInteger(page.gen)\n    ) &&\n    !(Number.isInteger(page) && page >= 0)\n  ) {\n    return false;\n  }\n  const zoom = dest[1];\n  if (!(typeof zoom === \"object\" && typeof zoom.name === \"string\")) {\n    return false;\n  }\n  let allowNull = true;\n  switch (zoom.name) {\n    case \"XYZ\":\n      if (destLength !== 5) {\n        return false;\n      }\n      break;\n    case \"Fit\":\n    case \"FitB\":\n      return destLength === 2;\n    case \"FitH\":\n    case \"FitBH\":\n    case \"FitV\":\n    case \"FitBV\":\n      if (destLength !== 3) {\n        return false;\n      }\n      break;\n    case \"FitR\":\n      if (destLength !== 6) {\n        return false;\n      }\n      allowNull = false;\n      break;\n    default:\n      return false;\n  }\n  for (let i = 2; i < destLength; i++) {\n    const param = dest[i];\n    if (!(typeof param === \"number\" || (allowNull && param === null))) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @implements {IPDFLinkService}\n */\nclass SimpleLinkService {\n  constructor() {\n    this.externalLinkTarget = null;\n    this.externalLinkRel = null;\n    this.externalLinkEnabled = true;\n    this._ignoreDestinationZoom = false;\n  }\n\n  /**\n   * @type {number}\n   */\n  get pagesCount() {\n    return 0;\n  }\n\n  /**\n   * @type {number}\n   */\n  get page() {\n    return 0;\n  }\n\n  /**\n   * @param {number} value\n   */\n  set page(value) {}\n\n  /**\n   * @type {number}\n   */\n  get rotation() {\n    return 0;\n  }\n\n  /**\n   * @param {number} value\n   */\n  set rotation(value) {}\n\n  /**\n   * @param dest - The PDF destination object.\n   */\n  navigateTo(dest) {}\n\n  /**\n   * @param dest - The PDF destination object.\n   * @returns {string} The hyperlink to the PDF object.\n   */\n  getDestinationHash(dest) {\n    return \"#\";\n  }\n\n  /**\n   * @param hash - The PDF parameters/hash.\n   * @returns {string} The hyperlink to the PDF object.\n   */\n  getAnchorUrl(hash) {\n    return \"#\";\n  }\n\n  /**\n   * @param {string} hash\n   */\n  setHash(hash) {}\n\n  /**\n   * @param {string} action\n   */\n  executeNamedAction(action) {}\n\n  /**\n   * @param {number} pageNum - page number.\n   * @param {Object} pageRef - reference to the page.\n   */\n  cachePageRef(pageNum, pageRef) {}\n\n  /**\n   * @param {number} pageNumber\n   */\n  isPageVisible(pageNumber) {\n    return true;\n  }\n}\n\nexport { PDFLinkService, SimpleLinkService };\n","/* Copyright 2014 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AnnotationLayer } from \"./pdf\";\nimport { NullL10n } from \"./ui_utils.js\";\nimport { SimpleLinkService } from \"./pdf_link_service.js\";\n\n/**\n * @typedef {Object} AnnotationLayerBuilderOptions\n * @property {HTMLDivElement} pageDiv\n * @property {PDFPage} pdfPage\n * @property {string} [imageResourcesPath] - Path for image resources, mainly\n *   for annotation icons. Include trailing slash.\n * @property {boolean} renderInteractiveForms\n * @property {IPDFLinkService} linkService\n * @property {DownloadManager} downloadManager\n * @property {IL10n} l10n - Localization service.\n */\n\nclass AnnotationLayerBuilder {\n  /**\n   * @param {AnnotationLayerBuilderOptions} options\n   */\n  constructor({\n    pageDiv,\n    pdfPage,\n    linkService,\n    downloadManager,\n    imageResourcesPath = \"\",\n    renderInteractiveForms = false,\n    l10n = NullL10n,\n  }) {\n    this.pageDiv = pageDiv;\n    this.pdfPage = pdfPage;\n    this.linkService = linkService;\n    this.downloadManager = downloadManager;\n    this.imageResourcesPath = imageResourcesPath;\n    this.renderInteractiveForms = renderInteractiveForms;\n    this.l10n = l10n;\n\n    this.div = null;\n    this._cancelled = false;\n  }\n\n  /**\n   * @param {PageViewport} viewport\n   * @param {string} intent (default value is 'display')\n   */\n  render(viewport, intent = \"display\") {\n    this.pdfPage.getAnnotations({ intent }).then(annotations => {\n      if (this._cancelled) {\n        return;\n      }\n\n      const parameters = {\n        viewport: viewport.clone({ dontFlip: true }),\n        div: this.div,\n        annotations,\n        page: this.pdfPage,\n        imageResourcesPath: this.imageResourcesPath,\n        renderInteractiveForms: this.renderInteractiveForms,\n        linkService: this.linkService,\n        downloadManager: this.downloadManager,\n      };\n\n      if (this.div) {\n        // If an annotationLayer already exists, refresh its children's\n        // transformation matrices.\n        AnnotationLayer.update(parameters);\n      } else {\n        // Create an annotation layer div and render the annotations\n        // if there is at least one annotation.\n        if (annotations.length === 0) {\n          return;\n        }\n        this.div = document.createElement(\"div\");\n        this.div.className = \"annotationLayer\";\n        this.pageDiv.appendChild(this.div);\n        parameters.div = this.div;\n\n        AnnotationLayer.render(parameters);\n        this.l10n.translate(this.div);\n      }\n    });\n  }\n\n  cancel() {\n    this._cancelled = true;\n  }\n\n  hide() {\n    if (!this.div) {\n      return;\n    }\n    this.div.setAttribute(\"hidden\", \"true\");\n  }\n}\n\n/**\n * @implements IPDFAnnotationLayerFactory\n */\nclass DefaultAnnotationLayerFactory {\n  /**\n   * @param {HTMLDivElement} pageDiv\n   * @param {PDFPage} pdfPage\n   * @param {string} [imageResourcesPath] - Path for image resources, mainly\n   *   for annotation icons. Include trailing slash.\n   * @param {boolean} renderInteractiveForms\n   * @param {IL10n} l10n\n   * @returns {AnnotationLayerBuilder}\n   */\n  createAnnotationLayerBuilder(\n    pageDiv,\n    pdfPage,\n    imageResourcesPath = \"\",\n    renderInteractiveForms = false,\n    l10n = NullL10n\n  ) {\n    return new AnnotationLayerBuilder({\n      pageDiv,\n      pdfPage,\n      imageResourcesPath,\n      renderInteractiveForms,\n      linkService: new SimpleLinkService(),\n      l10n,\n    });\n  }\n}\n\nexport { AnnotationLayerBuilder, DefaultAnnotationLayerFactory };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  approximateFraction,\n  CSS_UNITS,\n  DEFAULT_SCALE,\n  getOutputScale,\n  NullL10n,\n  RendererType,\n  roundToDivide,\n  TextLayerMode,\n} from \"./ui_utils.js\";\nimport {\n  createPromiseCapability,\n  RenderingCancelledException,\n  SVGGraphics,\n} from \"./pdf\";\nimport { RenderingStates } from \"./pdf_rendering_queue.js\";\nimport { viewerCompatibilityParams } from \"./viewer_compatibility.js\";\n\n/**\n * @typedef {Object} PDFPageViewOptions\n * @property {HTMLDivElement} container - The viewer element.\n * @property {EventBus} eventBus - The application event bus.\n * @property {number} id - The page unique ID (normally its number).\n * @property {number} scale - The page scale display.\n * @property {PageViewport} defaultViewport - The page viewport.\n * @property {PDFRenderingQueue} renderingQueue - The rendering queue object.\n * @property {IPDFTextLayerFactory} textLayerFactory\n * @property {number} [textLayerMode] - Controls if the text layer used for\n *   selection and searching is created, and if the improved text selection\n *   behaviour is enabled. The constants from {TextLayerMode} should be used.\n *   The default value is `TextLayerMode.ENABLE`.\n * @property {IPDFAnnotationLayerFactory} annotationLayerFactory\n * @property {string} [imageResourcesPath] - Path for image resources, mainly\n *   for annotation icons. Include trailing slash.\n * @property {boolean} renderInteractiveForms - Turns on rendering of\n *   interactive form elements. The default is `false`.\n * @property {string} renderer - 'canvas' or 'svg'. The default is 'canvas'.\n * @property {boolean} [enableWebGL] - Enables WebGL accelerated rendering for\n *   some operations. The default value is `false`.\n * @property {boolean} [useOnlyCssZoom] - Enables CSS only zooming. The default\n *   value is `false`.\n * @property {number} [maxCanvasPixels] - The maximum supported canvas size in\n *   total pixels, i.e. width * height. Use -1 for no limit. The default value\n *   is 4096 * 4096 (16 mega-pixels).\n * @property {IL10n} l10n - Localization service.\n */\n\nconst MAX_CANVAS_PIXELS = viewerCompatibilityParams.maxCanvasPixels || 16777216;\n\n/**\n * @implements {IRenderableView}\n */\nclass PDFPageView {\n  /**\n   * @param {PDFPageViewOptions} options\n   */\n  constructor(options) {\n    const container = options.container;\n    const defaultViewport = options.defaultViewport;\n\n    this.id = options.id;\n    this.renderingId = \"page\" + this.id;\n\n    this.pdfPage = null;\n    this.pageLabel = null;\n    this.rotation = 0;\n    this.scale = options.scale || DEFAULT_SCALE;\n    this.viewport = defaultViewport;\n    this.pdfPageRotate = defaultViewport.rotation;\n    this.hasRestrictedScaling = false;\n    this.textLayerMode = Number.isInteger(options.textLayerMode)\n      ? options.textLayerMode\n      : TextLayerMode.ENABLE;\n    this.imageResourcesPath = options.imageResourcesPath || \"\";\n    this.renderInteractiveForms = options.renderInteractiveForms || false;\n    this.useOnlyCssZoom = options.useOnlyCssZoom || false;\n    this.maxCanvasPixels = options.maxCanvasPixels || MAX_CANVAS_PIXELS;\n\n    this.eventBus = options.eventBus;\n    this.renderingQueue = options.renderingQueue;\n    this.textLayerFactory = options.textLayerFactory;\n    this.annotationLayerFactory = options.annotationLayerFactory;\n    this.renderer = options.renderer || RendererType.CANVAS;\n    this.enableWebGL = options.enableWebGL || false;\n    this.l10n = options.l10n || NullL10n;\n\n    this.paintTask = null;\n    this.paintedViewportMap = new WeakMap();\n    this.renderingState = RenderingStates.INITIAL;\n    this.resume = null;\n    this.error = null;\n\n    this.annotationLayer = null;\n    this.textLayer = null;\n    this.zoomLayer = null;\n\n    const div = document.createElement(\"div\");\n    div.className = \"page\";\n    div.style.width = Math.floor(this.viewport.width) + \"px\";\n    div.style.height = Math.floor(this.viewport.height) + \"px\";\n    div.setAttribute(\"data-page-number\", this.id);\n    this.div = div;\n\n    container.appendChild(div);\n  }\n\n  setPdfPage(pdfPage) {\n    this.pdfPage = pdfPage;\n    this.pdfPageRotate = pdfPage.rotate;\n\n    const totalRotation = (this.rotation + this.pdfPageRotate) % 360;\n    this.viewport = pdfPage.getViewport({\n      scale: this.scale * CSS_UNITS,\n      rotation: totalRotation,\n    });\n    this.stats = pdfPage.stats;\n    this.reset();\n  }\n\n  destroy() {\n    this.reset();\n    if (this.pdfPage) {\n      this.pdfPage.cleanup();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _resetZoomLayer(removeFromDOM = false) {\n    if (!this.zoomLayer) {\n      return;\n    }\n    const zoomLayerCanvas = this.zoomLayer.firstChild;\n    this.paintedViewportMap.delete(zoomLayerCanvas);\n    // Zeroing the width and height causes Firefox to release graphics\n    // resources immediately, which can greatly reduce memory consumption.\n    zoomLayerCanvas.width = 0;\n    zoomLayerCanvas.height = 0;\n\n    if (removeFromDOM) {\n      // Note: `ChildNode.remove` doesn't throw if the parent node is undefined.\n      this.zoomLayer.remove();\n    }\n    this.zoomLayer = null;\n  }\n\n  reset(keepZoomLayer = false, keepAnnotations = false) {\n    this.cancelRendering(keepAnnotations);\n    this.renderingState = RenderingStates.INITIAL;\n\n    const div = this.div;\n    div.style.width = Math.floor(this.viewport.width) + \"px\";\n    div.style.height = Math.floor(this.viewport.height) + \"px\";\n\n    const childNodes = div.childNodes;\n    const currentZoomLayerNode = (keepZoomLayer && this.zoomLayer) || null;\n    const currentAnnotationNode =\n      (keepAnnotations && this.annotationLayer && this.annotationLayer.div) ||\n      null;\n    for (let i = childNodes.length - 1; i >= 0; i--) {\n      const node = childNodes[i];\n      if (currentZoomLayerNode === node || currentAnnotationNode === node) {\n        continue;\n      }\n      div.removeChild(node);\n    }\n    div.removeAttribute(\"data-loaded\");\n\n    if (currentAnnotationNode) {\n      // Hide the annotation layer until all elements are resized\n      // so they are not displayed on the already resized page.\n      this.annotationLayer.hide();\n    } else if (this.annotationLayer) {\n      this.annotationLayer.cancel();\n      this.annotationLayer = null;\n    }\n\n    if (!currentZoomLayerNode) {\n      if (this.canvas) {\n        this.paintedViewportMap.delete(this.canvas);\n        // Zeroing the width and height causes Firefox to release graphics\n        // resources immediately, which can greatly reduce memory consumption.\n        this.canvas.width = 0;\n        this.canvas.height = 0;\n        delete this.canvas;\n      }\n      this._resetZoomLayer();\n    }\n    if (this.svg) {\n      this.paintedViewportMap.delete(this.svg);\n      delete this.svg;\n    }\n\n    this.loadingIconDiv = document.createElement(\"div\");\n    this.loadingIconDiv.className = \"loadingIcon\";\n    div.appendChild(this.loadingIconDiv);\n  }\n\n  update(scale, rotation) {\n    this.scale = scale || this.scale;\n    // The rotation may be zero.\n    if (typeof rotation !== \"undefined\") {\n      this.rotation = rotation;\n    }\n\n    const totalRotation = (this.rotation + this.pdfPageRotate) % 360;\n    this.viewport = this.viewport.clone({\n      scale: this.scale * CSS_UNITS,\n      rotation: totalRotation,\n    });\n\n    if (this.svg) {\n      this.cssTransform(this.svg, true);\n\n      this.eventBus.dispatch(\"pagerendered\", {\n        source: this,\n        pageNumber: this.id,\n        cssTransform: true,\n        timestamp: performance.now(),\n      });\n      return;\n    }\n\n    let isScalingRestricted = false;\n    if (this.canvas && this.maxCanvasPixels > 0) {\n      const outputScale = this.outputScale;\n      if (\n        ((Math.floor(this.viewport.width) * outputScale.sx) | 0) *\n          ((Math.floor(this.viewport.height) * outputScale.sy) | 0) >\n        this.maxCanvasPixels\n      ) {\n        isScalingRestricted = true;\n      }\n    }\n\n    if (this.canvas) {\n      if (\n        this.useOnlyCssZoom ||\n        (this.hasRestrictedScaling && isScalingRestricted)\n      ) {\n        this.cssTransform(this.canvas, true);\n\n        this.eventBus.dispatch(\"pagerendered\", {\n          source: this,\n          pageNumber: this.id,\n          cssTransform: true,\n          timestamp: performance.now(),\n        });\n        return;\n      }\n      if (!this.zoomLayer && !this.canvas.hasAttribute(\"hidden\")) {\n        this.zoomLayer = this.canvas.parentNode;\n        this.zoomLayer.style.position = \"absolute\";\n      }\n    }\n    if (this.zoomLayer) {\n      this.cssTransform(this.zoomLayer.firstChild);\n    }\n    this.reset(/* keepZoomLayer = */ true, /* keepAnnotations = */ true);\n  }\n\n  /**\n   * PLEASE NOTE: Most likely you want to use the `this.reset()` method,\n   *              rather than calling this one directly.\n   */\n  cancelRendering(keepAnnotations = false) {\n    if (this.paintTask) {\n      this.paintTask.cancel();\n      this.paintTask = null;\n    }\n    this.resume = null;\n\n    if (this.textLayer) {\n      this.textLayer.cancel();\n      this.textLayer = null;\n    }\n    if (!keepAnnotations && this.annotationLayer) {\n      this.annotationLayer.cancel();\n      this.annotationLayer = null;\n    }\n  }\n\n  cssTransform(target, redrawAnnotations = false) {\n    // Scale target (canvas or svg), its wrapper and page container.\n    const width = this.viewport.width;\n    const height = this.viewport.height;\n    const div = this.div;\n    target.style.width = target.parentNode.style.width = div.style.width =\n      Math.floor(width) + \"px\";\n    target.style.height = target.parentNode.style.height = div.style.height =\n      Math.floor(height) + \"px\";\n    // The canvas may have been originally rotated; rotate relative to that.\n    const relativeRotation =\n      this.viewport.rotation - this.paintedViewportMap.get(target).rotation;\n    const absRotation = Math.abs(relativeRotation);\n    let scaleX = 1,\n      scaleY = 1;\n    if (absRotation === 90 || absRotation === 270) {\n      // Scale x and y because of the rotation.\n      scaleX = height / width;\n      scaleY = width / height;\n    }\n    const cssTransform =\n      \"rotate(\" +\n      relativeRotation +\n      \"deg) \" +\n      \"scale(\" +\n      scaleX +\n      \",\" +\n      scaleY +\n      \")\";\n    target.style.transform = cssTransform;\n\n    if (this.textLayer) {\n      // Rotating the text layer is more complicated since the divs inside the\n      // the text layer are rotated.\n      // TODO: This could probably be simplified by drawing the text layer in\n      // one orientation and then rotating overall.\n      const textLayerViewport = this.textLayer.viewport;\n      const textRelativeRotation =\n        this.viewport.rotation - textLayerViewport.rotation;\n      const textAbsRotation = Math.abs(textRelativeRotation);\n      let scale = width / textLayerViewport.width;\n      if (textAbsRotation === 90 || textAbsRotation === 270) {\n        scale = width / textLayerViewport.height;\n      }\n      const textLayerDiv = this.textLayer.textLayerDiv;\n      let transX, transY;\n      switch (textAbsRotation) {\n        case 0:\n          transX = transY = 0;\n          break;\n        case 90:\n          transX = 0;\n          transY = \"-\" + textLayerDiv.style.height;\n          break;\n        case 180:\n          transX = \"-\" + textLayerDiv.style.width;\n          transY = \"-\" + textLayerDiv.style.height;\n          break;\n        case 270:\n          transX = \"-\" + textLayerDiv.style.width;\n          transY = 0;\n          break;\n        default:\n          console.error(\"Bad rotation value.\");\n          break;\n      }\n\n      textLayerDiv.style.transform =\n        \"rotate(\" +\n        textAbsRotation +\n        \"deg) \" +\n        \"scale(\" +\n        scale +\n        \", \" +\n        scale +\n        \") \" +\n        \"translate(\" +\n        transX +\n        \", \" +\n        transY +\n        \")\";\n      textLayerDiv.style.transformOrigin = \"0% 0%\";\n    }\n\n    if (redrawAnnotations && this.annotationLayer) {\n      this.annotationLayer.render(this.viewport, \"display\");\n    }\n  }\n\n  get width() {\n    return this.viewport.width;\n  }\n\n  get height() {\n    return this.viewport.height;\n  }\n\n  getPagePoint(x, y) {\n    return this.viewport.convertToPdfPoint(x, y);\n  }\n\n  draw() {\n    if (this.renderingState !== RenderingStates.INITIAL) {\n      console.error(\"Must be in new state before drawing\");\n      this.reset(); // Ensure that we reset all state to prevent issues.\n    }\n    const { div, pdfPage } = this;\n\n    if (!pdfPage) {\n      this.renderingState = RenderingStates.FINISHED;\n\n      if (this.loadingIconDiv) {\n        div.removeChild(this.loadingIconDiv);\n        delete this.loadingIconDiv;\n      }\n      return Promise.reject(new Error(\"pdfPage is not loaded\"));\n    }\n\n    this.renderingState = RenderingStates.RUNNING;\n\n    // Wrap the canvas so that if it has a CSS transform for high DPI the\n    // overflow will be hidden in Firefox.\n    const canvasWrapper = document.createElement(\"div\");\n    canvasWrapper.style.width = div.style.width;\n    canvasWrapper.style.height = div.style.height;\n    canvasWrapper.classList.add(\"canvasWrapper\");\n\n    if (this.annotationLayer && this.annotationLayer.div) {\n      // The annotation layer needs to stay on top.\n      div.insertBefore(canvasWrapper, this.annotationLayer.div);\n    } else {\n      div.appendChild(canvasWrapper);\n    }\n\n    let textLayer = null;\n    if (this.textLayerMode !== TextLayerMode.DISABLE && this.textLayerFactory) {\n      const textLayerDiv = document.createElement(\"div\");\n      textLayerDiv.className = \"textLayer\";\n      textLayerDiv.style.width = canvasWrapper.style.width;\n      textLayerDiv.style.height = canvasWrapper.style.height;\n      if (this.annotationLayer && this.annotationLayer.div) {\n        // The annotation layer needs to stay on top.\n        div.insertBefore(textLayerDiv, this.annotationLayer.div);\n      } else {\n        div.appendChild(textLayerDiv);\n      }\n\n      textLayer = this.textLayerFactory.createTextLayerBuilder(\n        textLayerDiv,\n        this.id - 1,\n        this.viewport,\n        this.textLayerMode === TextLayerMode.ENABLE_ENHANCE,\n        this.eventBus\n      );\n    }\n    this.textLayer = textLayer;\n\n    let renderContinueCallback = null;\n    if (this.renderingQueue) {\n      renderContinueCallback = cont => {\n        if (!this.renderingQueue.isHighestPriority(this)) {\n          this.renderingState = RenderingStates.PAUSED;\n          this.resume = () => {\n            this.renderingState = RenderingStates.RUNNING;\n            cont();\n          };\n          return;\n        }\n        cont();\n      };\n    }\n\n    const finishPaintTask = async error => {\n      // The paintTask may have been replaced by a new one, so only remove\n      // the reference to the paintTask if it matches the one that is\n      // triggering this callback.\n      if (paintTask === this.paintTask) {\n        this.paintTask = null;\n      }\n\n      if (error instanceof RenderingCancelledException) {\n        this.error = null;\n        return;\n      }\n\n      this.renderingState = RenderingStates.FINISHED;\n\n      if (this.loadingIconDiv) {\n        div.removeChild(this.loadingIconDiv);\n        delete this.loadingIconDiv;\n      }\n      this._resetZoomLayer(/* removeFromDOM = */ true);\n\n      this.error = error;\n      this.stats = pdfPage.stats;\n\n      this.eventBus.dispatch(\"pagerendered\", {\n        source: this,\n        pageNumber: this.id,\n        cssTransform: false,\n        timestamp: performance.now(),\n      });\n\n      if (error) {\n        throw error;\n      }\n    };\n\n    const paintTask =\n      this.renderer === RendererType.SVG\n        ? this.paintOnSvg(canvasWrapper)\n        : this.paintOnCanvas(canvasWrapper);\n    paintTask.onRenderContinue = renderContinueCallback;\n    this.paintTask = paintTask;\n\n    const resultPromise = paintTask.promise.then(\n      function () {\n        return finishPaintTask(null).then(function () {\n          if (textLayer) {\n            const readableStream = pdfPage.streamTextContent({\n              normalizeWhitespace: true,\n            });\n            textLayer.setTextContentStream(readableStream);\n            textLayer.render();\n          }\n        });\n      },\n      function (reason) {\n        return finishPaintTask(reason);\n      }\n    );\n\n    if (this.annotationLayerFactory) {\n      if (!this.annotationLayer) {\n        this.annotationLayer = this.annotationLayerFactory.createAnnotationLayerBuilder(\n          div,\n          pdfPage,\n          this.imageResourcesPath,\n          this.renderInteractiveForms,\n          this.l10n\n        );\n      }\n      this.annotationLayer.render(this.viewport, \"display\");\n    }\n    div.setAttribute(\"data-loaded\", true);\n\n    this.eventBus.dispatch(\"pagerender\", {\n      source: this,\n      pageNumber: this.id,\n    });\n    return resultPromise;\n  }\n\n  paintOnCanvas(canvasWrapper) {\n    const renderCapability = createPromiseCapability();\n    const result = {\n      promise: renderCapability.promise,\n      onRenderContinue(cont) {\n        cont();\n      },\n      cancel() {\n        renderTask.cancel();\n      },\n    };\n\n    const viewport = this.viewport;\n    const canvas = document.createElement(\"canvas\");\n    this.l10n\n      .get(\"page_canvas\", { page: this.id }, \"Page {{page}}\")\n      .then(msg => {\n        canvas.setAttribute(\"aria-label\", msg);\n      });\n\n    // Keep the canvas hidden until the first draw callback, or until drawing\n    // is complete when `!this.renderingQueue`, to prevent black flickering.\n    canvas.setAttribute(\"hidden\", \"hidden\");\n    let isCanvasHidden = true;\n    const showCanvas = function () {\n      if (isCanvasHidden) {\n        canvas.removeAttribute(\"hidden\");\n        isCanvasHidden = false;\n      }\n    };\n\n    canvasWrapper.appendChild(canvas);\n    this.canvas = canvas;\n\n    if (\n      typeof PDFJSDev === \"undefined\" ||\n      PDFJSDev.test(\"MOZCENTRAL || GENERIC\")\n    ) {\n      canvas.mozOpaque = true;\n    }\n\n    const ctx = canvas.getContext(\"2d\", { alpha: false });\n    const outputScale = getOutputScale(ctx);\n    this.outputScale = outputScale;\n\n    if (this.useOnlyCssZoom) {\n      const actualSizeViewport = viewport.clone({ scale: CSS_UNITS });\n      // Use a scale that makes the canvas have the originally intended size\n      // of the page.\n      outputScale.sx *= actualSizeViewport.width / viewport.width;\n      outputScale.sy *= actualSizeViewport.height / viewport.height;\n      outputScale.scaled = true;\n    }\n\n    if (this.maxCanvasPixels > 0) {\n      const pixelsInViewport = viewport.width * viewport.height;\n      const maxScale = Math.sqrt(this.maxCanvasPixels / pixelsInViewport);\n      if (outputScale.sx > maxScale || outputScale.sy > maxScale) {\n        outputScale.sx = maxScale;\n        outputScale.sy = maxScale;\n        outputScale.scaled = true;\n        this.hasRestrictedScaling = true;\n      } else {\n        this.hasRestrictedScaling = false;\n      }\n    }\n\n    const sfx = approximateFraction(outputScale.sx);\n    const sfy = approximateFraction(outputScale.sy);\n    canvas.width = roundToDivide(viewport.width * outputScale.sx, sfx[0]);\n    canvas.height = roundToDivide(viewport.height * outputScale.sy, sfy[0]);\n    canvas.style.width = roundToDivide(viewport.width, sfx[1]) + \"px\";\n    canvas.style.height = roundToDivide(viewport.height, sfy[1]) + \"px\";\n    // Add the viewport so it's known what it was originally drawn with.\n    this.paintedViewportMap.set(canvas, viewport);\n\n    // Rendering area\n    const transform = !outputScale.scaled\n      ? null\n      : [outputScale.sx, 0, 0, outputScale.sy, 0, 0];\n    const renderContext = {\n      canvasContext: ctx,\n      transform,\n      viewport: this.viewport,\n      enableWebGL: this.enableWebGL,\n      renderInteractiveForms: this.renderInteractiveForms,\n    };\n    const renderTask = this.pdfPage.render(renderContext);\n    renderTask.onContinue = function (cont) {\n      showCanvas();\n      if (result.onRenderContinue) {\n        result.onRenderContinue(cont);\n      } else {\n        cont();\n      }\n    };\n\n    renderTask.promise.then(\n      function () {\n        showCanvas();\n        renderCapability.resolve(undefined);\n      },\n      function (error) {\n        showCanvas();\n        renderCapability.reject(error);\n      }\n    );\n    return result;\n  }\n\n  paintOnSvg(wrapper) {\n    if (\n      typeof PDFJSDev !== \"undefined\" &&\n      PDFJSDev.test(\"MOZCENTRAL || CHROME\")\n    ) {\n      // Return a mock object, to prevent errors such as e.g.\n      // \"TypeError: paintTask.promise is undefined\".\n      return {\n        promise: Promise.reject(new Error(\"SVG rendering is not supported.\")),\n        onRenderContinue(cont) {},\n        cancel() {},\n      };\n    }\n\n    let cancelled = false;\n    const ensureNotCancelled = () => {\n      if (cancelled) {\n        throw new RenderingCancelledException(\n          `Rendering cancelled, page ${this.id}`,\n          \"svg\"\n        );\n      }\n    };\n\n    const pdfPage = this.pdfPage;\n    const actualSizeViewport = this.viewport.clone({ scale: CSS_UNITS });\n    const promise = pdfPage.getOperatorList().then(opList => {\n      ensureNotCancelled();\n      const svgGfx = new SVGGraphics(pdfPage.commonObjs, pdfPage.objs);\n      return svgGfx.getSVG(opList, actualSizeViewport).then(svg => {\n        ensureNotCancelled();\n        this.svg = svg;\n        this.paintedViewportMap.set(svg, actualSizeViewport);\n\n        svg.style.width = wrapper.style.width;\n        svg.style.height = wrapper.style.height;\n        this.renderingState = RenderingStates.FINISHED;\n        wrapper.appendChild(svg);\n      });\n    });\n\n    return {\n      promise,\n      onRenderContinue(cont) {\n        cont();\n      },\n      cancel() {\n        cancelled = true;\n      },\n    };\n  }\n\n  /**\n   * @param {string|null} label\n   */\n  setPageLabel(label) {\n    this.pageLabel = typeof label === \"string\" ? label : null;\n\n    if (this.pageLabel !== null) {\n      this.div.setAttribute(\"data-page-label\", this.pageLabel);\n    } else {\n      this.div.removeAttribute(\"data-page-label\");\n    }\n  }\n}\n\nexport { PDFPageView };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { renderTextLayer } from \"./pdf\";\n\nconst EXPAND_DIVS_TIMEOUT = 300; // ms\n\n/**\n * @typedef {Object} TextLayerBuilderOptions\n * @property {HTMLDivElement} textLayerDiv - The text layer container.\n * @property {EventBus} eventBus - The application event bus.\n * @property {number} pageIndex - The page index.\n * @property {PageViewport} viewport - The viewport of the text layer.\n * @property {PDFFindController} findController\n * @property {boolean} enhanceTextSelection - Option to turn on improved\n *   text selection.\n */\n\n/**\n * The text layer builder provides text selection functionality for the PDF.\n * It does this by creating overlay divs over the PDF's text. These divs\n * contain text that matches the PDF text they are overlaying. This object\n * also provides a way to highlight text that is being searched for.\n */\nclass TextLayerBuilder {\n  constructor({\n    textLayerDiv,\n    eventBus,\n    pageIndex,\n    viewport,\n    findController = null,\n    enhanceTextSelection = false,\n  }) {\n    this.textLayerDiv = textLayerDiv;\n    this.eventBus = eventBus;\n    this.textContent = null;\n    this.textContentItemsStr = [];\n    this.textContentStream = null;\n    this.renderingDone = false;\n    this.pageIdx = pageIndex;\n    this.pageNumber = this.pageIdx + 1;\n    this.matches = [];\n    this.viewport = viewport;\n    this.textDivs = [];\n    this.findController = findController;\n    this.textLayerRenderTask = null;\n    this.enhanceTextSelection = enhanceTextSelection;\n\n    this._onUpdateTextLayerMatches = null;\n    this._bindMouse();\n  }\n\n  /**\n   * @private\n   */\n  _finishRendering() {\n    this.renderingDone = true;\n\n    if (!this.enhanceTextSelection) {\n      const endOfContent = document.createElement(\"div\");\n      endOfContent.className = \"endOfContent\";\n      this.textLayerDiv.appendChild(endOfContent);\n    }\n\n    this.eventBus.dispatch(\"textlayerrendered\", {\n      source: this,\n      pageNumber: this.pageNumber,\n      numTextDivs: this.textDivs.length,\n    });\n  }\n\n  /**\n   * Renders the text layer.\n   *\n   * @param {number} [timeout] - Wait for a specified amount of milliseconds\n   *                             before rendering.\n   */\n  render(timeout = 0) {\n    if (!(this.textContent || this.textContentStream) || this.renderingDone) {\n      return;\n    }\n    this.cancel();\n\n    this.textDivs = [];\n    const textLayerFrag = document.createDocumentFragment();\n    this.textLayerRenderTask = renderTextLayer({\n      textContent: this.textContent,\n      textContentStream: this.textContentStream,\n      container: textLayerFrag,\n      viewport: this.viewport,\n      textDivs: this.textDivs,\n      textContentItemsStr: this.textContentItemsStr,\n      timeout,\n      enhanceTextSelection: this.enhanceTextSelection,\n    });\n    this.textLayerRenderTask.promise.then(\n      () => {\n        this.textLayerDiv.appendChild(textLayerFrag);\n        this._finishRendering();\n        this._updateMatches();\n      },\n      function (reason) {\n        // Cancelled or failed to render text layer; skipping errors.\n      }\n    );\n\n    if (!this._onUpdateTextLayerMatches) {\n      this._onUpdateTextLayerMatches = evt => {\n        if (evt.pageIndex === this.pageIdx || evt.pageIndex === -1) {\n          this._updateMatches();\n        }\n      };\n      this.eventBus._on(\n        \"updatetextlayermatches\",\n        this._onUpdateTextLayerMatches\n      );\n    }\n  }\n\n  /**\n   * Cancel rendering of the text layer.\n   */\n  cancel() {\n    if (this.textLayerRenderTask) {\n      this.textLayerRenderTask.cancel();\n      this.textLayerRenderTask = null;\n    }\n    if (this._onUpdateTextLayerMatches) {\n      this.eventBus._off(\n        \"updatetextlayermatches\",\n        this._onUpdateTextLayerMatches\n      );\n      this._onUpdateTextLayerMatches = null;\n    }\n  }\n\n  setTextContentStream(readableStream) {\n    this.cancel();\n    this.textContentStream = readableStream;\n  }\n\n  setTextContent(textContent) {\n    this.cancel();\n    this.textContent = textContent;\n  }\n\n  _convertMatches(matches, matchesLength) {\n    // Early exit if there is nothing to convert.\n    if (!matches) {\n      return [];\n    }\n    const { findController, textContentItemsStr } = this;\n\n    let i = 0,\n      iIndex = 0;\n    const end = textContentItemsStr.length - 1;\n    const queryLen = findController.state.query.length;\n    const result = [];\n\n    for (let m = 0, mm = matches.length; m < mm; m++) {\n      // Calculate the start position.\n      let matchIdx = matches[m];\n\n      // Loop over the divIdxs.\n      while (i !== end && matchIdx >= iIndex + textContentItemsStr[i].length) {\n        iIndex += textContentItemsStr[i].length;\n        i++;\n      }\n\n      if (i === textContentItemsStr.length) {\n        console.error(\"Could not find a matching mapping\");\n      }\n\n      const match = {\n        begin: {\n          divIdx: i,\n          offset: matchIdx - iIndex,\n        },\n      };\n\n      // Calculate the end position.\n      if (matchesLength) {\n        // Multiterm search.\n        matchIdx += matchesLength[m];\n      } else {\n        // Phrase search.\n        matchIdx += queryLen;\n      }\n\n      // Somewhat the same array as above, but use > instead of >= to get\n      // the end position right.\n      while (i !== end && matchIdx > iIndex + textContentItemsStr[i].length) {\n        iIndex += textContentItemsStr[i].length;\n        i++;\n      }\n\n      match.end = {\n        divIdx: i,\n        offset: matchIdx - iIndex,\n      };\n      result.push(match);\n    }\n    return result;\n  }\n\n  _renderMatches(matches) {\n    // Early exit if there is nothing to render.\n    if (matches.length === 0) {\n      return;\n    }\n    const { findController, pageIdx, textContentItemsStr, textDivs } = this;\n\n    const isSelectedPage = pageIdx === findController.selected.pageIdx;\n    const selectedMatchIdx = findController.selected.matchIdx;\n    const highlightAll = findController.state.highlightAll;\n    let prevEnd = null;\n    const infinity = {\n      divIdx: -1,\n      offset: undefined,\n    };\n\n    function beginText(begin, className) {\n      const divIdx = begin.divIdx;\n      textDivs[divIdx].textContent = \"\";\n      appendTextToDiv(divIdx, 0, begin.offset, className);\n    }\n\n    function appendTextToDiv(divIdx, fromOffset, toOffset, className) {\n      const div = textDivs[divIdx];\n      const content = textContentItemsStr[divIdx].substring(\n        fromOffset,\n        toOffset\n      );\n      const node = document.createTextNode(content);\n      if (className) {\n        const span = document.createElement(\"span\");\n        span.className = className;\n        span.appendChild(node);\n        div.appendChild(span);\n        return;\n      }\n      div.appendChild(node);\n    }\n\n    let i0 = selectedMatchIdx,\n      i1 = i0 + 1;\n    if (highlightAll) {\n      i0 = 0;\n      i1 = matches.length;\n    } else if (!isSelectedPage) {\n      // Not highlighting all and this isn't the selected page, so do nothing.\n      return;\n    }\n\n    for (let i = i0; i < i1; i++) {\n      const match = matches[i];\n      const begin = match.begin;\n      const end = match.end;\n      const isSelected = isSelectedPage && i === selectedMatchIdx;\n      const highlightSuffix = isSelected ? \" selected\" : \"\";\n\n      if (isSelected) {\n        // Attempt to scroll the selected match into view.\n        findController.scrollMatchIntoView({\n          element: textDivs[begin.divIdx],\n          pageIndex: pageIdx,\n          matchIndex: selectedMatchIdx,\n        });\n      }\n\n      // Match inside new div.\n      if (!prevEnd || begin.divIdx !== prevEnd.divIdx) {\n        // If there was a previous div, then add the text at the end.\n        if (prevEnd !== null) {\n          appendTextToDiv(prevEnd.divIdx, prevEnd.offset, infinity.offset);\n        }\n        // Clear the divs and set the content until the starting point.\n        beginText(begin);\n      } else {\n        appendTextToDiv(prevEnd.divIdx, prevEnd.offset, begin.offset);\n      }\n\n      if (begin.divIdx === end.divIdx) {\n        appendTextToDiv(\n          begin.divIdx,\n          begin.offset,\n          end.offset,\n          \"highlight\" + highlightSuffix\n        );\n      } else {\n        appendTextToDiv(\n          begin.divIdx,\n          begin.offset,\n          infinity.offset,\n          \"highlight begin\" + highlightSuffix\n        );\n        for (let n0 = begin.divIdx + 1, n1 = end.divIdx; n0 < n1; n0++) {\n          textDivs[n0].className = \"highlight middle\" + highlightSuffix;\n        }\n        beginText(end, \"highlight end\" + highlightSuffix);\n      }\n      prevEnd = end;\n    }\n\n    if (prevEnd) {\n      appendTextToDiv(prevEnd.divIdx, prevEnd.offset, infinity.offset);\n    }\n  }\n\n  _updateMatches() {\n    // Only show matches when all rendering is done.\n    if (!this.renderingDone) {\n      return;\n    }\n    const {\n      findController,\n      matches,\n      pageIdx,\n      textContentItemsStr,\n      textDivs,\n    } = this;\n    let clearedUntilDivIdx = -1;\n\n    // Clear all current matches.\n    for (let i = 0, ii = matches.length; i < ii; i++) {\n      const match = matches[i];\n      const begin = Math.max(clearedUntilDivIdx, match.begin.divIdx);\n      for (let n = begin, end = match.end.divIdx; n <= end; n++) {\n        const div = textDivs[n];\n        div.textContent = textContentItemsStr[n];\n        div.className = \"\";\n      }\n      clearedUntilDivIdx = match.end.divIdx + 1;\n    }\n\n    if (!findController || !findController.highlightMatches) {\n      return;\n    }\n    // Convert the matches on the `findController` into the match format\n    // used for the textLayer.\n    const pageMatches = findController.pageMatches[pageIdx] || null;\n    const pageMatchesLength = findController.pageMatchesLength[pageIdx] || null;\n\n    this.matches = this._convertMatches(pageMatches, pageMatchesLength);\n    this._renderMatches(this.matches);\n  }\n\n  /**\n   * Improves text selection by adding an additional div where the mouse was\n   * clicked. This reduces flickering of the content if the mouse is slowly\n   * dragged up or down.\n   *\n   * @private\n   */\n  _bindMouse() {\n    const div = this.textLayerDiv;\n    let expandDivsTimer = null;\n\n    div.addEventListener(\"mousedown\", evt => {\n      if (this.enhanceTextSelection && this.textLayerRenderTask) {\n        this.textLayerRenderTask.expandTextDivs(true);\n        if (\n          (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"MOZCENTRAL\")) &&\n          expandDivsTimer\n        ) {\n          clearTimeout(expandDivsTimer);\n          expandDivsTimer = null;\n        }\n        return;\n      }\n\n      const end = div.querySelector(\".endOfContent\");\n      if (!end) {\n        return;\n      }\n      if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"MOZCENTRAL\")) {\n        // On non-Firefox browsers, the selection will feel better if the height\n        // of the `endOfContent` div is adjusted to start at mouse click\n        // location. This avoids flickering when the selection moves up.\n        // However it does not work when selection is started on empty space.\n        let adjustTop = evt.target !== div;\n        if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) {\n          adjustTop =\n            adjustTop &&\n            window\n              .getComputedStyle(end)\n              .getPropertyValue(\"-moz-user-select\") !== \"none\";\n        }\n        if (adjustTop) {\n          const divBounds = div.getBoundingClientRect();\n          const r = Math.max(0, (evt.pageY - divBounds.top) / divBounds.height);\n          end.style.top = (r * 100).toFixed(2) + \"%\";\n        }\n      }\n      end.classList.add(\"active\");\n    });\n\n    div.addEventListener(\"mouseup\", () => {\n      if (this.enhanceTextSelection && this.textLayerRenderTask) {\n        if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"MOZCENTRAL\")) {\n          expandDivsTimer = setTimeout(() => {\n            if (this.textLayerRenderTask) {\n              this.textLayerRenderTask.expandTextDivs(false);\n            }\n            expandDivsTimer = null;\n          }, EXPAND_DIVS_TIMEOUT);\n        } else {\n          this.textLayerRenderTask.expandTextDivs(false);\n        }\n        return;\n      }\n\n      const end = div.querySelector(\".endOfContent\");\n      if (!end) {\n        return;\n      }\n      if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"MOZCENTRAL\")) {\n        end.style.top = \"\";\n      }\n      end.classList.remove(\"active\");\n    });\n  }\n}\n\n/**\n * @implements IPDFTextLayerFactory\n */\nclass DefaultTextLayerFactory {\n  /**\n   * @param {HTMLDivElement} textLayerDiv\n   * @param {number} pageIndex\n   * @param {PageViewport} viewport\n   * @param {boolean} enhanceTextSelection\n   * @param {EventBus} eventBus\n   * @returns {TextLayerBuilder}\n   */\n  createTextLayerBuilder(\n    textLayerDiv,\n    pageIndex,\n    viewport,\n    enhanceTextSelection = false,\n    eventBus\n  ) {\n    return new TextLayerBuilder({\n      textLayerDiv,\n      pageIndex,\n      viewport,\n      enhanceTextSelection,\n      eventBus,\n    });\n  }\n}\n\nexport { TextLayerBuilder, DefaultTextLayerFactory };\n","/* Copyright 2014 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  CSS_UNITS,\n  DEFAULT_SCALE,\n  DEFAULT_SCALE_VALUE,\n  getVisibleElements,\n  isPortraitOrientation,\n  isValidRotation,\n  isValidScrollMode,\n  isValidSpreadMode,\n  MAX_AUTO_SCALE,\n  moveToEndOfArray,\n  NullL10n,\n  PresentationModeState,\n  RendererType,\n  SCROLLBAR_PADDING,\n  scrollIntoView,\n  ScrollMode,\n  SpreadMode,\n  TextLayerMode,\n  UNKNOWN_SCALE,\n  VERTICAL_PADDING,\n  watchScroll,\n} from \"./ui_utils.js\";\nimport { PDFRenderingQueue, RenderingStates } from \"./pdf_rendering_queue.js\";\nimport { AnnotationLayerBuilder } from \"./annotation_layer_builder.js\";\nimport { createPromiseCapability } from \"./pdf\";\nimport { PDFPageView } from \"./pdf_page_view.js\";\nimport { SimpleLinkService } from \"./pdf_link_service.js\";\nimport { TextLayerBuilder } from \"./text_layer_builder.js\";\n\nconst DEFAULT_CACHE_SIZE = 10;\n\n/**\n * @typedef {Object} PDFViewerOptions\n * @property {HTMLDivElement} container - The container for the viewer element.\n * @property {HTMLDivElement} [viewer] - The viewer element.\n * @property {EventBus} eventBus - The application event bus.\n * @property {IPDFLinkService} linkService - The navigation/linking service.\n * @property {DownloadManager} [downloadManager] - The download manager\n *   component.\n * @property {PDFFindController} [findController] - The find controller\n *   component.\n * @property {PDFRenderingQueue} [renderingQueue] - The rendering queue object.\n * @property {boolean} [removePageBorders] - Removes the border shadow around\n *   the pages. The default value is `false`.\n * @property {number} [textLayerMode] - Controls if the text layer used for\n *   selection and searching is created, and if the improved text selection\n *   behaviour is enabled. The constants from {TextLayerMode} should be used.\n *   The default value is `TextLayerMode.ENABLE`.\n * @property {string} [imageResourcesPath] - Path for image resources, mainly\n *   mainly for annotation icons. Include trailing slash.\n * @property {boolean} [renderInteractiveForms] - Enables rendering of\n *   interactive form elements. The default is `false`.\n * @property {boolean} [enablePrintAutoRotate] - Enables automatic rotation of\n *   pages whose orientation differ from the first page upon printing. The\n *   default is `false`.\n * @property {string} renderer - 'canvas' or 'svg'. The default is 'canvas'.\n * @property {boolean} [enableWebGL] - Enables WebGL accelerated rendering for\n *   some operations. The default value is `false`.\n * @property {boolean} [useOnlyCssZoom] - Enables CSS only zooming. The default\n *   value is `false`.\n * @property {number} [maxCanvasPixels] - The maximum supported canvas size in\n *   total pixels, i.e. width * height. Use -1 for no limit. The default value\n *   is 4096 * 4096 (16 mega-pixels).\n * @property {IL10n} l10n - Localization service.\n */\n\nfunction PDFPageViewBuffer(size) {\n  const data = [];\n  this.push = function (view) {\n    const i = data.indexOf(view);\n    if (i >= 0) {\n      data.splice(i, 1);\n    }\n    data.push(view);\n    if (data.length > size) {\n      data.shift().destroy();\n    }\n  };\n  /**\n   * After calling resize, the size of the buffer will be newSize. The optional\n   * parameter pagesToKeep is, if present, an array of pages to push to the back\n   * of the buffer, delaying their destruction. The size of pagesToKeep has no\n   * impact on the final size of the buffer; if pagesToKeep has length larger\n   * than newSize, some of those pages will be destroyed anyway.\n   */\n  this.resize = function (newSize, pagesToKeep) {\n    size = newSize;\n    if (pagesToKeep) {\n      const pageIdsToKeep = new Set();\n      for (let i = 0, iMax = pagesToKeep.length; i < iMax; ++i) {\n        pageIdsToKeep.add(pagesToKeep[i].id);\n      }\n      moveToEndOfArray(data, function (page) {\n        return pageIdsToKeep.has(page.id);\n      });\n    }\n    while (data.length > size) {\n      data.shift().destroy();\n    }\n  };\n}\n\nfunction isSameScale(oldScale, newScale) {\n  if (newScale === oldScale) {\n    return true;\n  }\n  if (Math.abs(newScale - oldScale) < 1e-15) {\n    // Prevent unnecessary re-rendering of all pages when the scale\n    // changes only because of limited numerical precision.\n    return true;\n  }\n  return false;\n}\n\n/**\n * Simple viewer control to display PDF content/pages.\n * @implements {IRenderableView}\n */\nclass BaseViewer {\n  /**\n   * @param {PDFViewerOptions} options\n   */\n  constructor(options) {\n    if (this.constructor === BaseViewer) {\n      throw new Error(\"Cannot initialize BaseViewer.\");\n    }\n    this._name = this.constructor.name;\n\n    this.container = options.container;\n    this.viewer = options.viewer || options.container.firstElementChild;\n    this.eventBus = options.eventBus;\n    this.linkService = options.linkService || new SimpleLinkService();\n    this.downloadManager = options.downloadManager || null;\n    this.findController = options.findController || null;\n    this.removePageBorders = options.removePageBorders || false;\n    this.textLayerMode = Number.isInteger(options.textLayerMode)\n      ? options.textLayerMode\n      : TextLayerMode.ENABLE;\n    this.imageResourcesPath = options.imageResourcesPath || \"\";\n    this.renderInteractiveForms = options.renderInteractiveForms || false;\n    this.enablePrintAutoRotate = options.enablePrintAutoRotate || false;\n    this.renderer = options.renderer || RendererType.CANVAS;\n    this.enableWebGL = options.enableWebGL || false;\n    this.useOnlyCssZoom = options.useOnlyCssZoom || false;\n    this.maxCanvasPixels = options.maxCanvasPixels;\n    this.l10n = options.l10n || NullL10n;\n\n    this.defaultRenderingQueue = !options.renderingQueue;\n    if (this.defaultRenderingQueue) {\n      // Custom rendering queue is not specified, using default one\n      this.renderingQueue = new PDFRenderingQueue();\n      this.renderingQueue.setViewer(this);\n    } else {\n      this.renderingQueue = options.renderingQueue;\n    }\n\n    this.scroll = watchScroll(this.container, this._scrollUpdate.bind(this));\n    this.presentationModeState = PresentationModeState.UNKNOWN;\n    this._onBeforeDraw = this._onAfterDraw = null;\n    this._resetView();\n\n    if (this.removePageBorders) {\n      this.viewer.classList.add(\"removePageBorders\");\n    }\n    // Defer the dispatching of this event, to give other viewer components\n    // time to initialize *and* register 'baseviewerinit' event listeners.\n    Promise.resolve().then(() => {\n      this.eventBus.dispatch(\"baseviewerinit\", { source: this });\n    });\n  }\n\n  get pagesCount() {\n    return this._pages.length;\n  }\n\n  getPageView(index) {\n    return this._pages[index];\n  }\n\n  /**\n   * @type {boolean} - True if all {PDFPageView} objects are initialized.\n   */\n  get pageViewsReady() {\n    if (!this._pagesCapability.settled) {\n      return false;\n    }\n    // Prevent printing errors when 'disableAutoFetch' is set, by ensuring\n    // that *all* pages have in fact been completely loaded.\n    return this._pages.every(function (pageView) {\n      return pageView && pageView.pdfPage;\n    });\n  }\n\n  /**\n   * @type {number}\n   */\n  get currentPageNumber() {\n    return this._currentPageNumber;\n  }\n\n  /**\n   * @param {number} val - The page number.\n   */\n  set currentPageNumber(val) {\n    if (!Number.isInteger(val)) {\n      throw new Error(\"Invalid page number.\");\n    }\n    if (!this.pdfDocument) {\n      return;\n    }\n    // The intent can be to just reset a scroll position and/or scale.\n    if (!this._setCurrentPageNumber(val, /* resetCurrentPageView = */ true)) {\n      console.error(\n        `${this._name}.currentPageNumber: \"${val}\" is not a valid page.`\n      );\n    }\n  }\n\n  /**\n   * @returns {boolean} Whether the pageNumber is valid (within bounds).\n   * @private\n   */\n  _setCurrentPageNumber(val, resetCurrentPageView = false) {\n    if (this._currentPageNumber === val) {\n      if (resetCurrentPageView) {\n        this._resetCurrentPageView();\n      }\n      return true;\n    }\n\n    if (!(0 < val && val <= this.pagesCount)) {\n      return false;\n    }\n    this._currentPageNumber = val;\n\n    this.eventBus.dispatch(\"pagechanging\", {\n      source: this,\n      pageNumber: val,\n      pageLabel: this._pageLabels && this._pageLabels[val - 1],\n    });\n\n    if (resetCurrentPageView) {\n      this._resetCurrentPageView();\n    }\n    return true;\n  }\n\n  /**\n   * @type {string|null} Returns the current page label, or `null` if no page\n   *   labels exist.\n   */\n  get currentPageLabel() {\n    return this._pageLabels && this._pageLabels[this._currentPageNumber - 1];\n  }\n\n  /**\n   * @param {string} val - The page label.\n   */\n  set currentPageLabel(val) {\n    if (!this.pdfDocument) {\n      return;\n    }\n    let page = val | 0; // Fallback page number.\n    if (this._pageLabels) {\n      const i = this._pageLabels.indexOf(val);\n      if (i >= 0) {\n        page = i + 1;\n      }\n    }\n    // The intent can be to just reset a scroll position and/or scale.\n    if (!this._setCurrentPageNumber(page, /* resetCurrentPageView = */ true)) {\n      console.error(\n        `${this._name}.currentPageLabel: \"${val}\" is not a valid page.`\n      );\n    }\n  }\n\n  /**\n   * @type {number}\n   */\n  get currentScale() {\n    return this._currentScale !== UNKNOWN_SCALE\n      ? this._currentScale\n      : DEFAULT_SCALE;\n  }\n\n  /**\n   * @param {number} val - Scale of the pages in percents.\n   */\n  set currentScale(val) {\n    if (isNaN(val)) {\n      throw new Error(\"Invalid numeric scale.\");\n    }\n    if (!this.pdfDocument) {\n      return;\n    }\n    this._setScale(val, false);\n  }\n\n  /**\n   * @type {string}\n   */\n  get currentScaleValue() {\n    return this._currentScaleValue;\n  }\n\n  /**\n   * @param val - The scale of the pages (in percent or predefined value).\n   */\n  set currentScaleValue(val) {\n    if (!this.pdfDocument) {\n      return;\n    }\n    this._setScale(val, false);\n  }\n\n  /**\n   * @type {number}\n   */\n  get pagesRotation() {\n    return this._pagesRotation;\n  }\n\n  /**\n   * @param {number} rotation - The rotation of the pages (0, 90, 180, 270).\n   */\n  set pagesRotation(rotation) {\n    if (!isValidRotation(rotation)) {\n      throw new Error(\"Invalid pages rotation angle.\");\n    }\n    if (!this.pdfDocument) {\n      return;\n    }\n    if (this._pagesRotation === rotation) {\n      return; // The rotation didn't change.\n    }\n    this._pagesRotation = rotation;\n\n    const pageNumber = this._currentPageNumber;\n\n    for (let i = 0, ii = this._pages.length; i < ii; i++) {\n      const pageView = this._pages[i];\n      pageView.update(pageView.scale, rotation);\n    }\n    // Prevent errors in case the rotation changes *before* the scale has been\n    // set to a non-default value.\n    if (this._currentScaleValue) {\n      this._setScale(this._currentScaleValue, true);\n    }\n\n    this.eventBus.dispatch(\"rotationchanging\", {\n      source: this,\n      pagesRotation: rotation,\n      pageNumber,\n    });\n\n    if (this.defaultRenderingQueue) {\n      this.update();\n    }\n  }\n\n  get firstPagePromise() {\n    return this.pdfDocument ? this._firstPageCapability.promise : null;\n  }\n\n  get onePageRendered() {\n    return this.pdfDocument ? this._onePageRenderedCapability.promise : null;\n  }\n\n  get pagesPromise() {\n    return this.pdfDocument ? this._pagesCapability.promise : null;\n  }\n\n  /**\n   * @private\n   */\n  get _viewerElement() {\n    // In most viewers, e.g. `PDFViewer`, this should return `this.viewer`.\n    throw new Error(\"Not implemented: _viewerElement\");\n  }\n\n  /**\n   * @private\n   */\n  _onePageRenderedOrForceFetch() {\n    // Unless the viewer *and* its pages are visible, rendering won't start and\n    // `this._onePageRenderedCapability` thus won't be resolved.\n    // To ensure that automatic printing, on document load, still works even in\n    // those cases we force-allow fetching of all pages when:\n    //  - The viewer is hidden in the DOM, e.g. in a `display: none` <iframe>\n    //    element; fixes bug 1618621.\n    //  - The viewer is visible, but none of the pages are (e.g. if the\n    //    viewer is very small); fixes bug 1618955.\n    if (\n      !this.container.offsetParent ||\n      this._getVisiblePages().views.length === 0\n    ) {\n      return Promise.resolve();\n    }\n    return this._onePageRenderedCapability.promise;\n  }\n\n  /**\n   * @param pdfDocument {PDFDocument}\n   */\n  setDocument(pdfDocument) {\n    if (this.pdfDocument) {\n      this._cancelRendering();\n      this._resetView();\n\n      if (this.findController) {\n        this.findController.setDocument(null);\n      }\n    }\n\n    this.pdfDocument = pdfDocument;\n    if (!pdfDocument) {\n      return;\n    }\n    const pagesCount = pdfDocument.numPages;\n    const firstPagePromise = pdfDocument.getPage(1);\n\n    this._pagesCapability.promise.then(() => {\n      this.eventBus.dispatch(\"pagesloaded\", {\n        source: this,\n        pagesCount,\n      });\n    });\n\n    this._onBeforeDraw = evt => {\n      const pageView = this._pages[evt.pageNumber - 1];\n      if (!pageView) {\n        return;\n      }\n      // Add the page to the buffer at the start of drawing. That way it can be\n      // evicted from the buffer and destroyed even if we pause its rendering.\n      this._buffer.push(pageView);\n    };\n    this.eventBus._on(\"pagerender\", this._onBeforeDraw);\n\n    this._onAfterDraw = evt => {\n      if (evt.cssTransform || this._onePageRenderedCapability.settled) {\n        return;\n      }\n      this._onePageRenderedCapability.resolve();\n\n      this.eventBus._off(\"pagerendered\", this._onAfterDraw);\n      this._onAfterDraw = null;\n    };\n    this.eventBus._on(\"pagerendered\", this._onAfterDraw);\n\n    // Fetch a single page so we can get a viewport that will be the default\n    // viewport for all pages\n    firstPagePromise\n      .then(firstPdfPage => {\n        this._firstPageCapability.resolve(firstPdfPage);\n\n        const scale = this.currentScale;\n        const viewport = firstPdfPage.getViewport({ scale: scale * CSS_UNITS });\n        const textLayerFactory =\n          this.textLayerMode !== TextLayerMode.DISABLE ? this : null;\n\n        for (let pageNum = 1; pageNum <= pagesCount; ++pageNum) {\n          const pageView = new PDFPageView({\n            container: this._viewerElement,\n            eventBus: this.eventBus,\n            id: pageNum,\n            scale,\n            defaultViewport: viewport.clone(),\n            renderingQueue: this.renderingQueue,\n            textLayerFactory,\n            textLayerMode: this.textLayerMode,\n            annotationLayerFactory: this,\n            imageResourcesPath: this.imageResourcesPath,\n            renderInteractiveForms: this.renderInteractiveForms,\n            renderer: this.renderer,\n            enableWebGL: this.enableWebGL,\n            useOnlyCssZoom: this.useOnlyCssZoom,\n            maxCanvasPixels: this.maxCanvasPixels,\n            l10n: this.l10n,\n          });\n          this._pages.push(pageView);\n        }\n        // Set the first `pdfPage` immediately, since it's already loaded,\n        // rather than having to repeat the `PDFDocumentProxy.getPage` call in\n        // the `this._ensurePdfPageLoaded` method before rendering can start.\n        const firstPageView = this._pages[0];\n        if (firstPageView) {\n          firstPageView.setPdfPage(firstPdfPage);\n          this.linkService.cachePageRef(1, firstPdfPage.ref);\n        }\n        if (this._spreadMode !== SpreadMode.NONE) {\n          this._updateSpreadMode();\n        }\n\n        // Fetch all the pages since the viewport is needed before printing\n        // starts to create the correct size canvas. Wait until one page is\n        // rendered so we don't tie up too many resources early on.\n        this._onePageRenderedOrForceFetch().then(() => {\n          if (this.findController) {\n            this.findController.setDocument(pdfDocument); // Enable searching.\n          }\n\n          // In addition to 'disableAutoFetch' being set, also attempt to reduce\n          // resource usage when loading *very* long/large documents.\n          if (pdfDocument.loadingParams.disableAutoFetch || pagesCount > 7500) {\n            // XXX: Printing is semi-broken with auto fetch disabled.\n            this._pagesCapability.resolve();\n            return;\n          }\n          let getPagesLeft = pagesCount - 1; // The first page was already loaded.\n\n          if (getPagesLeft <= 0) {\n            this._pagesCapability.resolve();\n            return;\n          }\n          for (let pageNum = 2; pageNum <= pagesCount; ++pageNum) {\n            pdfDocument.getPage(pageNum).then(\n              pdfPage => {\n                const pageView = this._pages[pageNum - 1];\n                if (!pageView.pdfPage) {\n                  pageView.setPdfPage(pdfPage);\n                }\n                this.linkService.cachePageRef(pageNum, pdfPage.ref);\n                if (--getPagesLeft === 0) {\n                  this._pagesCapability.resolve();\n                }\n              },\n              reason => {\n                console.error(\n                  `Unable to get page ${pageNum} to initialize viewer`,\n                  reason\n                );\n                if (--getPagesLeft === 0) {\n                  this._pagesCapability.resolve();\n                }\n              }\n            );\n          }\n        });\n\n        this.eventBus.dispatch(\"pagesinit\", { source: this });\n\n        if (this.defaultRenderingQueue) {\n          this.update();\n        }\n      })\n      .catch(reason => {\n        console.error(\"Unable to initialize viewer\", reason);\n      });\n  }\n\n  /**\n   * @param {Array|null} labels\n   */\n  setPageLabels(labels) {\n    if (!this.pdfDocument) {\n      return;\n    }\n    if (!labels) {\n      this._pageLabels = null;\n    } else if (\n      !(Array.isArray(labels) && this.pdfDocument.numPages === labels.length)\n    ) {\n      this._pageLabels = null;\n      console.error(`${this._name}.setPageLabels: Invalid page labels.`);\n    } else {\n      this._pageLabels = labels;\n    }\n    // Update all the `PDFPageView` instances.\n    for (let i = 0, ii = this._pages.length; i < ii; i++) {\n      const pageView = this._pages[i];\n      const label = this._pageLabels && this._pageLabels[i];\n      pageView.setPageLabel(label);\n    }\n  }\n\n  _resetView() {\n    this._pages = [];\n    this._currentPageNumber = 1;\n    this._currentScale = UNKNOWN_SCALE;\n    this._currentScaleValue = null;\n    this._pageLabels = null;\n    this._buffer = new PDFPageViewBuffer(DEFAULT_CACHE_SIZE);\n    this._location = null;\n    this._pagesRotation = 0;\n    this._pagesRequests = new WeakMap();\n    this._firstPageCapability = createPromiseCapability();\n    this._onePageRenderedCapability = createPromiseCapability();\n    this._pagesCapability = createPromiseCapability();\n    this._scrollMode = ScrollMode.VERTICAL;\n    this._spreadMode = SpreadMode.NONE;\n\n    if (this._onBeforeDraw) {\n      this.eventBus._off(\"pagerender\", this._onBeforeDraw);\n      this._onBeforeDraw = null;\n    }\n    if (this._onAfterDraw) {\n      this.eventBus._off(\"pagerendered\", this._onAfterDraw);\n      this._onAfterDraw = null;\n    }\n    // Remove the pages from the DOM...\n    this.viewer.textContent = \"\";\n    // ... and reset the Scroll mode CSS class(es) afterwards.\n    this._updateScrollMode();\n  }\n\n  _scrollUpdate() {\n    if (this.pagesCount === 0) {\n      return;\n    }\n    this.update();\n  }\n\n  _scrollIntoView({ pageDiv, pageSpot = null, pageNumber = null }) {\n    scrollIntoView(pageDiv, pageSpot);\n  }\n\n  _setScaleUpdatePages(newScale, newValue, noScroll = false, preset = false) {\n    this._currentScaleValue = newValue.toString();\n\n    if (isSameScale(this._currentScale, newScale)) {\n      if (preset) {\n        this.eventBus.dispatch(\"scalechanging\", {\n          source: this,\n          scale: newScale,\n          presetValue: newValue,\n        });\n      }\n      return;\n    }\n\n    for (let i = 0, ii = this._pages.length; i < ii; i++) {\n      this._pages[i].update(newScale);\n    }\n    this._currentScale = newScale;\n\n    if (!noScroll) {\n      let page = this._currentPageNumber,\n        dest;\n      if (\n        this._location &&\n        !(this.isInPresentationMode || this.isChangingPresentationMode)\n      ) {\n        page = this._location.pageNumber;\n        dest = [\n          null,\n          { name: \"XYZ\" },\n          this._location.left,\n          this._location.top,\n          null,\n        ];\n      }\n      this.scrollPageIntoView({\n        pageNumber: page,\n        destArray: dest,\n        allowNegativeOffset: true,\n      });\n    }\n\n    this.eventBus.dispatch(\"scalechanging\", {\n      source: this,\n      scale: newScale,\n      presetValue: preset ? newValue : undefined,\n    });\n\n    if (this.defaultRenderingQueue) {\n      this.update();\n    }\n  }\n\n  _setScale(value, noScroll = false) {\n    let scale = parseFloat(value);\n\n    if (scale > 0) {\n      this._setScaleUpdatePages(scale, value, noScroll, /* preset = */ false);\n    } else {\n      const currentPage = this._pages[this._currentPageNumber - 1];\n      if (!currentPage) {\n        return;\n      }\n      const noPadding = this.isInPresentationMode || this.removePageBorders;\n      let hPadding = noPadding ? 0 : SCROLLBAR_PADDING;\n      let vPadding = noPadding ? 0 : VERTICAL_PADDING;\n\n      if (!noPadding && this._isScrollModeHorizontal) {\n        [hPadding, vPadding] = [vPadding, hPadding]; // Swap the padding values.\n      }\n      const pageWidthScale =\n        ((this.container.clientWidth - hPadding) / currentPage.width) *\n        currentPage.scale;\n      const pageHeightScale =\n        ((this.container.clientHeight - vPadding) / currentPage.height) *\n        currentPage.scale;\n      switch (value) {\n        case \"page-actual\":\n          scale = 1;\n          break;\n        case \"page-width\":\n          scale = pageWidthScale;\n          break;\n        case \"page-height\":\n          scale = pageHeightScale;\n          break;\n        case \"page-fit\":\n          scale = Math.min(pageWidthScale, pageHeightScale);\n          break;\n        case \"auto\":\n          // For pages in landscape mode, fit the page height to the viewer\n          // *unless* the page would thus become too wide to fit horizontally.\n          const horizontalScale = isPortraitOrientation(currentPage)\n            ? pageWidthScale\n            : Math.min(pageHeightScale, pageWidthScale);\n          scale = Math.min(MAX_AUTO_SCALE, horizontalScale);\n          break;\n        default:\n          console.error(\n            `${this._name}._setScale: \"${value}\" is an unknown zoom value.`\n          );\n          return;\n      }\n      this._setScaleUpdatePages(scale, value, noScroll, /* preset = */ true);\n    }\n  }\n\n  /**\n   * Refreshes page view: scrolls to the current page and updates the scale.\n   * @private\n   */\n  _resetCurrentPageView() {\n    if (this.isInPresentationMode) {\n      // Fixes the case when PDF has different page sizes.\n      this._setScale(this._currentScaleValue, true);\n    }\n    const pageView = this._pages[this._currentPageNumber - 1];\n    this._scrollIntoView({ pageDiv: pageView.div });\n  }\n\n  /**\n   * @typedef ScrollPageIntoViewParameters\n   * @property {number} pageNumber - The page number.\n   * @property {Array} [destArray] - The original PDF destination array, in the\n   *   format: <page-ref> </XYZ|/FitXXX> <args..>\n   * @property {boolean} [allowNegativeOffset] - Allow negative page offsets.\n   *   The default value is `false`.\n   * @property {boolean} [ignoreDestinationZoom] - Ignore the zoom argument in\n   *   the destination array. The default value is `false`.\n   */\n\n  /**\n   * Scrolls page into view.\n   * @param {ScrollPageIntoViewParameters} params\n   */\n  scrollPageIntoView({\n    pageNumber,\n    destArray = null,\n    allowNegativeOffset = false,\n    ignoreDestinationZoom = false,\n  }) {\n    if (!this.pdfDocument) {\n      return;\n    }\n    const pageView =\n      Number.isInteger(pageNumber) && this._pages[pageNumber - 1];\n    if (!pageView) {\n      console.error(\n        `${this._name}.scrollPageIntoView: ` +\n          `\"${pageNumber}\" is not a valid pageNumber parameter.`\n      );\n      return;\n    }\n\n    if (this.isInPresentationMode || !destArray) {\n      this._setCurrentPageNumber(pageNumber, /* resetCurrentPageView = */ true);\n      return;\n    }\n    let x = 0,\n      y = 0;\n    let width = 0,\n      height = 0,\n      widthScale,\n      heightScale;\n    const changeOrientation = pageView.rotation % 180 !== 0;\n    const pageWidth =\n      (changeOrientation ? pageView.height : pageView.width) /\n      pageView.scale /\n      CSS_UNITS;\n    const pageHeight =\n      (changeOrientation ? pageView.width : pageView.height) /\n      pageView.scale /\n      CSS_UNITS;\n    let scale = 0;\n    switch (destArray[1].name) {\n      case \"XYZ\":\n        x = destArray[2];\n        y = destArray[3];\n        scale = destArray[4];\n        // If x and/or y coordinates are not supplied, default to\n        // _top_ left of the page (not the obvious bottom left,\n        // since aligning the bottom of the intended page with the\n        // top of the window is rarely helpful).\n        x = x !== null ? x : 0;\n        y = y !== null ? y : pageHeight;\n        break;\n      case \"Fit\":\n      case \"FitB\":\n        scale = \"page-fit\";\n        break;\n      case \"FitH\":\n      case \"FitBH\":\n        y = destArray[2];\n        scale = \"page-width\";\n        // According to the PDF spec, section 12.3.2.2, a `null` value in the\n        // parameter should maintain the position relative to the new page.\n        if (y === null && this._location) {\n          x = this._location.left;\n          y = this._location.top;\n        }\n        break;\n      case \"FitV\":\n      case \"FitBV\":\n        x = destArray[2];\n        width = pageWidth;\n        height = pageHeight;\n        scale = \"page-height\";\n        break;\n      case \"FitR\":\n        x = destArray[2];\n        y = destArray[3];\n        width = destArray[4] - x;\n        height = destArray[5] - y;\n        const hPadding = this.removePageBorders ? 0 : SCROLLBAR_PADDING;\n        const vPadding = this.removePageBorders ? 0 : VERTICAL_PADDING;\n\n        widthScale =\n          (this.container.clientWidth - hPadding) / width / CSS_UNITS;\n        heightScale =\n          (this.container.clientHeight - vPadding) / height / CSS_UNITS;\n        scale = Math.min(Math.abs(widthScale), Math.abs(heightScale));\n        break;\n      default:\n        console.error(\n          `${this._name}.scrollPageIntoView: ` +\n            `\"${destArray[1].name}\" is not a valid destination type.`\n        );\n        return;\n    }\n\n    if (!ignoreDestinationZoom) {\n      if (scale && scale !== this._currentScale) {\n        this.currentScaleValue = scale;\n      } else if (this._currentScale === UNKNOWN_SCALE) {\n        this.currentScaleValue = DEFAULT_SCALE_VALUE;\n      }\n    }\n\n    if (scale === \"page-fit\" && !destArray[4]) {\n      this._scrollIntoView({\n        pageDiv: pageView.div,\n        pageNumber,\n      });\n      return;\n    }\n\n    const boundingRect = [\n      pageView.viewport.convertToViewportPoint(x, y),\n      pageView.viewport.convertToViewportPoint(x + width, y + height),\n    ];\n    let left = Math.min(boundingRect[0][0], boundingRect[1][0]);\n    let top = Math.min(boundingRect[0][1], boundingRect[1][1]);\n\n    if (!allowNegativeOffset) {\n      // Some bad PDF generators will create destinations with e.g. top values\n      // that exceeds the page height. Ensure that offsets are not negative,\n      // to prevent a previous page from becoming visible (fixes bug 874482).\n      left = Math.max(left, 0);\n      top = Math.max(top, 0);\n    }\n    this._scrollIntoView({\n      pageDiv: pageView.div,\n      pageSpot: { left, top },\n      pageNumber,\n    });\n  }\n\n  _updateLocation(firstPage) {\n    const currentScale = this._currentScale;\n    const currentScaleValue = this._currentScaleValue;\n    const normalizedScaleValue =\n      parseFloat(currentScaleValue) === currentScale\n        ? Math.round(currentScale * 10000) / 100\n        : currentScaleValue;\n\n    const pageNumber = firstPage.id;\n    let pdfOpenParams = \"#page=\" + pageNumber;\n    pdfOpenParams += \"&zoom=\" + normalizedScaleValue;\n    const currentPageView = this._pages[pageNumber - 1];\n    const container = this.container;\n    const topLeft = currentPageView.getPagePoint(\n      container.scrollLeft - firstPage.x,\n      container.scrollTop - firstPage.y\n    );\n    const intLeft = Math.round(topLeft[0]);\n    const intTop = Math.round(topLeft[1]);\n    pdfOpenParams += \",\" + intLeft + \",\" + intTop;\n\n    this._location = {\n      pageNumber,\n      scale: normalizedScaleValue,\n      top: intTop,\n      left: intLeft,\n      rotation: this._pagesRotation,\n      pdfOpenParams,\n    };\n  }\n\n  _updateHelper(visiblePages) {\n    throw new Error(\"Not implemented: _updateHelper\");\n  }\n\n  update() {\n    const visible = this._getVisiblePages();\n    const visiblePages = visible.views,\n      numVisiblePages = visiblePages.length;\n\n    if (numVisiblePages === 0) {\n      return;\n    }\n    const newCacheSize = Math.max(DEFAULT_CACHE_SIZE, 2 * numVisiblePages + 1);\n    this._buffer.resize(newCacheSize, visiblePages);\n\n    this.renderingQueue.renderHighestPriority(visible);\n\n    this._updateHelper(visiblePages); // Run any class-specific update code.\n\n    this._updateLocation(visible.first);\n    this.eventBus.dispatch(\"updateviewarea\", {\n      source: this,\n      location: this._location,\n    });\n  }\n\n  containsElement(element) {\n    return this.container.contains(element);\n  }\n\n  focus() {\n    this.container.focus();\n  }\n\n  get _isScrollModeHorizontal() {\n    // Used to ensure that pre-rendering of the next/previous page works\n    // correctly, since Scroll/Spread modes are ignored in Presentation Mode.\n    return this.isInPresentationMode\n      ? false\n      : this._scrollMode === ScrollMode.HORIZONTAL;\n  }\n\n  get isInPresentationMode() {\n    return this.presentationModeState === PresentationModeState.FULLSCREEN;\n  }\n\n  get isChangingPresentationMode() {\n    return this.presentationModeState === PresentationModeState.CHANGING;\n  }\n\n  get isHorizontalScrollbarEnabled() {\n    return this.isInPresentationMode\n      ? false\n      : this.container.scrollWidth > this.container.clientWidth;\n  }\n\n  get isVerticalScrollbarEnabled() {\n    return this.isInPresentationMode\n      ? false\n      : this.container.scrollHeight > this.container.clientHeight;\n  }\n\n  /**\n   * Helper method for `this._getVisiblePages`. Should only ever be used when\n   * the viewer can only display a single page at a time, for example in:\n   *  - `PDFSinglePageViewer`.\n   *  - `PDFViewer` with Presentation Mode active.\n   */\n  _getCurrentVisiblePage() {\n    if (!this.pagesCount) {\n      return { views: [] };\n    }\n    const pageView = this._pages[this._currentPageNumber - 1];\n    // NOTE: Compute the `x` and `y` properties of the current view,\n    // since `this._updateLocation` depends of them being available.\n    const element = pageView.div;\n\n    const view = {\n      id: pageView.id,\n      x: element.offsetLeft + element.clientLeft,\n      y: element.offsetTop + element.clientTop,\n      view: pageView,\n    };\n    return { first: view, last: view, views: [view] };\n  }\n\n  _getVisiblePages() {\n    return getVisibleElements(\n      this.container,\n      this._pages,\n      true,\n      this._isScrollModeHorizontal\n    );\n  }\n\n  /**\n   * @param {number} pageNumber\n   */\n  isPageVisible(pageNumber) {\n    if (!this.pdfDocument) {\n      return false;\n    }\n    if (pageNumber < 1 || pageNumber > this.pagesCount) {\n      console.error(\n        `${this._name}.isPageVisible: \"${pageNumber}\" is out of bounds.`\n      );\n      return false;\n    }\n    return this._getVisiblePages().views.some(function (view) {\n      return view.id === pageNumber;\n    });\n  }\n\n  cleanup() {\n    for (let i = 0, ii = this._pages.length; i < ii; i++) {\n      if (\n        this._pages[i] &&\n        this._pages[i].renderingState !== RenderingStates.FINISHED\n      ) {\n        this._pages[i].reset();\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  _cancelRendering() {\n    for (let i = 0, ii = this._pages.length; i < ii; i++) {\n      if (this._pages[i]) {\n        this._pages[i].cancelRendering();\n      }\n    }\n  }\n\n  /**\n   * @param {PDFPageView} pageView\n   * @returns {Promise} Returns a promise containing a {PDFPageProxy} object.\n   * @private\n   */\n  _ensurePdfPageLoaded(pageView) {\n    if (pageView.pdfPage) {\n      return Promise.resolve(pageView.pdfPage);\n    }\n    if (this._pagesRequests.has(pageView)) {\n      return this._pagesRequests.get(pageView);\n    }\n    const promise = this.pdfDocument\n      .getPage(pageView.id)\n      .then(pdfPage => {\n        if (!pageView.pdfPage) {\n          pageView.setPdfPage(pdfPage);\n        }\n        this._pagesRequests.delete(pageView);\n        return pdfPage;\n      })\n      .catch(reason => {\n        console.error(\"Unable to get page for page view\", reason);\n        // Page error -- there is nothing that can be done.\n        this._pagesRequests.delete(pageView);\n      });\n    this._pagesRequests.set(pageView, promise);\n    return promise;\n  }\n\n  forceRendering(currentlyVisiblePages) {\n    const visiblePages = currentlyVisiblePages || this._getVisiblePages();\n    const scrollAhead = this._isScrollModeHorizontal\n      ? this.scroll.right\n      : this.scroll.down;\n    const pageView = this.renderingQueue.getHighestPriority(\n      visiblePages,\n      this._pages,\n      scrollAhead\n    );\n    if (pageView) {\n      this._ensurePdfPageLoaded(pageView).then(() => {\n        this.renderingQueue.renderView(pageView);\n      });\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @param {HTMLDivElement} textLayerDiv\n   * @param {number} pageIndex\n   * @param {PageViewport} viewport\n   * @param {boolean} enhanceTextSelection\n   * @param {EventBus} eventBus\n   * @returns {TextLayerBuilder}\n   */\n  createTextLayerBuilder(\n    textLayerDiv,\n    pageIndex,\n    viewport,\n    enhanceTextSelection = false,\n    eventBus\n  ) {\n    return new TextLayerBuilder({\n      textLayerDiv,\n      eventBus,\n      pageIndex,\n      viewport,\n      findController: this.isInPresentationMode ? null : this.findController,\n      enhanceTextSelection: this.isInPresentationMode\n        ? false\n        : enhanceTextSelection,\n    });\n  }\n\n  /**\n   * @param {HTMLDivElement} pageDiv\n   * @param {PDFPage} pdfPage\n   * @param {string} [imageResourcesPath] - Path for image resources, mainly\n   *   for annotation icons. Include trailing slash.\n   * @param {boolean} renderInteractiveForms\n   * @param {IL10n} l10n\n   * @returns {AnnotationLayerBuilder}\n   */\n  createAnnotationLayerBuilder(\n    pageDiv,\n    pdfPage,\n    imageResourcesPath = \"\",\n    renderInteractiveForms = false,\n    l10n = NullL10n\n  ) {\n    return new AnnotationLayerBuilder({\n      pageDiv,\n      pdfPage,\n      imageResourcesPath,\n      renderInteractiveForms,\n      linkService: this.linkService,\n      downloadManager: this.downloadManager,\n      l10n,\n    });\n  }\n\n  /**\n   * @type {boolean} Whether all pages of the PDF document have identical\n   *   widths and heights.\n   */\n  get hasEqualPageSizes() {\n    const firstPageView = this._pages[0];\n    for (let i = 1, ii = this._pages.length; i < ii; ++i) {\n      const pageView = this._pages[i];\n      if (\n        pageView.width !== firstPageView.width ||\n        pageView.height !== firstPageView.height\n      ) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Returns sizes of the pages.\n   * @returns {Array} Array of objects with width/height/rotation fields.\n   */\n  getPagesOverview() {\n    const pagesOverview = this._pages.map(function (pageView) {\n      const viewport = pageView.pdfPage.getViewport({ scale: 1 });\n      return {\n        width: viewport.width,\n        height: viewport.height,\n        rotation: viewport.rotation,\n      };\n    });\n    if (!this.enablePrintAutoRotate) {\n      return pagesOverview;\n    }\n    const isFirstPagePortrait = isPortraitOrientation(pagesOverview[0]);\n    return pagesOverview.map(function (size) {\n      if (isFirstPagePortrait === isPortraitOrientation(size)) {\n        return size;\n      }\n      return {\n        width: size.height,\n        height: size.width,\n        rotation: (size.rotation + 90) % 360,\n      };\n    });\n  }\n\n  /**\n   * @type {number} One of the values in {ScrollMode}.\n   */\n  get scrollMode() {\n    return this._scrollMode;\n  }\n\n  /**\n   * @param {number} mode - The direction in which the document pages should be\n   *   laid out within the scrolling container.\n   *   The constants from {ScrollMode} should be used.\n   */\n  set scrollMode(mode) {\n    if (this._scrollMode === mode) {\n      return; // The Scroll mode didn't change.\n    }\n    if (!isValidScrollMode(mode)) {\n      throw new Error(`Invalid scroll mode: ${mode}`);\n    }\n    this._scrollMode = mode;\n    this.eventBus.dispatch(\"scrollmodechanged\", { source: this, mode });\n\n    this._updateScrollMode(/* pageNumber = */ this._currentPageNumber);\n  }\n\n  _updateScrollMode(pageNumber = null) {\n    const scrollMode = this._scrollMode,\n      viewer = this.viewer;\n\n    viewer.classList.toggle(\n      \"scrollHorizontal\",\n      scrollMode === ScrollMode.HORIZONTAL\n    );\n    viewer.classList.toggle(\"scrollWrapped\", scrollMode === ScrollMode.WRAPPED);\n\n    if (!this.pdfDocument || !pageNumber) {\n      return;\n    }\n    // Non-numeric scale values can be sensitive to the scroll orientation.\n    // Call this before re-scrolling to the current page, to ensure that any\n    // changes in scale don't move the current page.\n    if (this._currentScaleValue && isNaN(this._currentScaleValue)) {\n      this._setScale(this._currentScaleValue, true);\n    }\n    this._setCurrentPageNumber(pageNumber, /* resetCurrentPageView = */ true);\n    this.update();\n  }\n\n  /**\n   * @type {number} One of the values in {SpreadMode}.\n   */\n  get spreadMode() {\n    return this._spreadMode;\n  }\n\n  /**\n   * @param {number} mode - Group the pages in spreads, starting with odd- or\n   *   even-number pages (unless `SpreadMode.NONE` is used).\n   *   The constants from {SpreadMode} should be used.\n   */\n  set spreadMode(mode) {\n    if (this._spreadMode === mode) {\n      return; // The Spread mode didn't change.\n    }\n    if (!isValidSpreadMode(mode)) {\n      throw new Error(`Invalid spread mode: ${mode}`);\n    }\n    this._spreadMode = mode;\n    this.eventBus.dispatch(\"spreadmodechanged\", { source: this, mode });\n\n    this._updateSpreadMode(/* pageNumber = */ this._currentPageNumber);\n  }\n\n  _updateSpreadMode(pageNumber = null) {\n    if (!this.pdfDocument) {\n      return;\n    }\n    const viewer = this.viewer,\n      pages = this._pages;\n    // Temporarily remove all the pages from the DOM.\n    viewer.textContent = \"\";\n\n    if (this._spreadMode === SpreadMode.NONE) {\n      for (let i = 0, iMax = pages.length; i < iMax; ++i) {\n        viewer.appendChild(pages[i].div);\n      }\n    } else {\n      const parity = this._spreadMode - 1;\n      let spread = null;\n      for (let i = 0, iMax = pages.length; i < iMax; ++i) {\n        if (spread === null) {\n          spread = document.createElement(\"div\");\n          spread.className = \"spread\";\n          viewer.appendChild(spread);\n        } else if (i % 2 === parity) {\n          spread = spread.cloneNode(false);\n          viewer.appendChild(spread);\n        }\n        spread.appendChild(pages[i].div);\n      }\n    }\n\n    if (!pageNumber) {\n      return;\n    }\n    this._setCurrentPageNumber(pageNumber, /* resetCurrentPageView = */ true);\n    this.update();\n  }\n}\n\nexport { BaseViewer };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* globals PDFBug, Stats */\n\nimport {\n  animationStarted,\n  AutoPrintRegExp,\n  DEFAULT_SCALE_VALUE,\n  EventBus,\n  getPDFFileNameFromURL,\n  isValidRotation,\n  isValidScrollMode,\n  isValidSpreadMode,\n  MAX_SCALE,\n  MIN_SCALE,\n  noContextMenuHandler,\n  normalizeWheelEventDelta,\n  parseQueryString,\n  PresentationModeState,\n  ProgressBar,\n  RendererType,\n  ScrollMode,\n  SpreadMode,\n  TextLayerMode,\n} from \"./ui_utils.js\";\nimport { AppOptions, OptionKind } from \"./app_options.js\";\nimport {\n  build,\n  createPromiseCapability,\n  getDocument,\n  getFilenameFromUrl,\n  GlobalWorkerOptions,\n  InvalidPDFException,\n  LinkTarget,\n  loadScript,\n  MissingPDFException,\n  OPS,\n  PDFWorker,\n  PermissionFlag,\n  shadow,\n  UnexpectedResponseException,\n  UNSUPPORTED_FEATURES,\n  version,\n} from \"./pdf\";\nimport { CursorTool, PDFCursorTools } from \"./pdf_cursor_tools.js\";\nimport { PDFRenderingQueue, RenderingStates } from \"./pdf_rendering_queue.js\";\nimport { SidebarView } from \"./pdf_sidebar.js\";\nimport { PDFAttachmentViewer } from \"./pdf_attachment_viewer.js\";\nimport { PDFFindBar } from \"./pdf_find_bar.js\";\nimport { PDFFindController } from \"./pdf_find_controller.js\";\nimport { PDFHistory } from \"./pdf_history.js\";\nimport { PDFLinkService } from \"./pdf_link_service.js\";\nimport { PDFViewer } from \"./pdf_viewer.js\";\nimport { ViewHistory } from \"./view_history.js\";\nimport { store } from \"../store\";\n\nconst DEFAULT_SCALE_DELTA = 1.1;\nconst DISABLE_AUTO_FETCH_LOADING_BAR_TIMEOUT = 5000; // ms\nconst FORCE_PAGES_LOADED_TIMEOUT = 10000; // ms\nconst WHEEL_ZOOM_DISABLED_TIMEOUT = 1000; // ms\nconst ENABLE_PERMISSIONS_CLASS = \"enablePermissions\";\n\nconst ViewOnLoad = {\n  UNKNOWN: -1,\n  PREVIOUS: 0, // Default value.\n  INITIAL: 1,\n};\n\nclass DefaultExternalServices {\n  constructor() {\n    throw new Error(\"Cannot initialize DefaultExternalServices.\");\n  }\n\n  static updateFindControlState(data) {}\n\n  static updateFindMatchesCount(data) {}\n\n  static initPassiveLoading(callbacks) {}\n\n  static fallback(data, callback) {}\n\n  static reportTelemetry(data) {}\n\n  static createDownloadManager(options) {\n    throw new Error(\"Not implemented: createDownloadManager\");\n  }\n\n  static createPreferences() {\n    throw new Error(\"Not implemented: createPreferences\");\n  }\n\n  static createL10n(options) {\n    throw new Error(\"Not implemented: createL10n\");\n  }\n\n  static get supportsIntegratedFind() {\n    return shadow(this, \"supportsIntegratedFind\", false);\n  }\n\n  static get supportsDocumentFonts() {\n    return shadow(this, \"supportsDocumentFonts\", true);\n  }\n\n  static get supportedMouseWheelZoomModifierKeys() {\n    return shadow(this, \"supportedMouseWheelZoomModifierKeys\", {\n      ctrlKey: true,\n      metaKey: true,\n    });\n  }\n\n  static get isInAutomation() {\n    return shadow(this, \"isInAutomation\", false);\n  }\n}\n\nconst PDFViewerApplication = {\n  initialBookmark: document.location.hash.substring(1),\n  _initializedCapability: createPromiseCapability(),\n  fellback: false,\n  appConfig: null,\n  pdfDocument: null,\n  pdfLoadingTask: null,\n  printService: null,\n  /** @type {PDFViewer} */\n  pdfViewer: null,\n  /** @type {PDFThumbnailViewer} */\n  // pdfThumbnailViewer: null,\n  /** @type {PDFRenderingQueue} */\n  pdfRenderingQueue: null,\n  /** @type {PDFPresentationMode} */\n  // pdfPresentationMode: null,\n  /** @type {PDFDocumentProperties} */\n  // pdfDocumentProperties: null,\n  /** @type {PDFLinkService} */\n  pdfLinkService: null,\n  /** @type {PDFHistory} */\n  pdfHistory: null,\n  /** @type {PDFSidebar} */\n  // pdfSidebar: null,\n  /** @type {PDFSidebarResizer} */\n  // pdfSidebarResizer: null,\n  /** @type {PDFOutlineViewer} */\n  // pdfOutlineViewer: null,\n  /** @type {PDFAttachmentViewer} */\n  pdfAttachmentViewer: null,\n  /** @type {PDFCursorTools} */\n  pdfCursorTools: null,\n  /** @type {ViewHistory} */\n  store: null,\n  /** @type {DownloadManager} */\n  downloadManager: null,\n  /** @type {OverlayManager} */\n  // overlayManager: null,\n  /** @type {Preferences} */\n  preferences: null,\n  /** @type {Toolbar} */\n  // toolbar: null,\n  /** @type {SecondaryToolbar} */\n  // secondaryToolbar: null,\n  /** @type {EventBus} */\n  eventBus: null,\n  /** @type {IL10n} */\n  l10n: null,\n  isInitialViewSet: false,\n  downloadComplete: false,\n  isViewerEmbedded: window.parent !== window,\n  url: \"\",\n  baseUrl: \"\",\n  externalServices: DefaultExternalServices,\n  _boundEvents: {},\n  contentDispositionFilename: null,\n\n  // Called once when the document is loaded.\n  async initialize(appConfig) {\n    this.preferences = this.externalServices.createPreferences();\n    this.appConfig = appConfig;\n\n    await this._readPreferences();\n    await this._parseHashParameters();\n    await this._initializeL10n();\n    \n    if (\n      this.isViewerEmbedded &&\n      AppOptions.get(\"externalLinkTarget\") === LinkTarget.NONE\n    ) {\n      // Prevent external links from \"replacing\" the viewer,\n      // when it's embedded in e.g. an <iframe> or an <object>.\n      AppOptions.set(\"externalLinkTarget\", LinkTarget.TOP);\n    }\n    await this._initializeViewerComponents();\n\n    // Bind the various event handlers *after* the viewer has been\n    // initialized, to prevent errors if an event arrives too soon.\n    this.bindEvents();\n    this.bindWindowEvents();\n\n    // We can start UI localization now.\n    const appContainer = appConfig.appContainer || document.documentElement;\n    this.l10n.translate(appContainer).then(() => {\n      // Dispatch the 'localized' event on the `eventBus` once the viewer\n      // has been fully initialized and translated.\n      this.eventBus.dispatch(\"localized\", { source: this });\n    });\n\n    this._initializedCapability.resolve();\n  },\n\n  /**\n   * @private\n   */\n  async _readPreferences() {\n    if (\n      (typeof PDFJSDev === \"undefined\" ||\n        PDFJSDev.test(\"!PRODUCTION || GENERIC\")) &&\n      AppOptions.get(\"disablePreferences\")\n    ) {\n      // Give custom implementations of the default viewer a simpler way to\n      // opt-out of having the `Preferences` override existing `AppOptions`.\n      return;\n    }\n    try {\n      const prefs = await this.preferences.getAll();\n      for (const name in prefs) {\n        AppOptions.set(name, prefs[name]);\n      }\n    } catch (reason) {\n      console.error(`_readPreferences: \"${reason.message}\".`);\n    }\n  },\n\n  /**\n   * Potentially parse special debugging flags in the hash section of the URL.\n   * @private\n   */\n  async _parseHashParameters() {\n    if (\n      typeof PDFJSDev !== \"undefined\" &&\n      PDFJSDev.test(\"PRODUCTION\") &&\n      !AppOptions.get(\"pdfBugEnabled\")\n    ) {\n      return undefined;\n    }\n    const hash = document.location.hash.substring(1);\n    if (!hash) {\n      return undefined;\n    }\n    const hashParams = parseQueryString(hash),\n      waitOn = [];\n\n    if (\"disableworker\" in hashParams && hashParams.disableworker === \"true\") {\n      waitOn.push(loadFakeWorker());\n    }\n    if (\"disablerange\" in hashParams) {\n      AppOptions.set(\"disableRange\", hashParams.disablerange === \"true\");\n    }\n    if (\"disablestream\" in hashParams) {\n      AppOptions.set(\"disableStream\", hashParams.disablestream === \"true\");\n    }\n    if (\"disableautofetch\" in hashParams) {\n      AppOptions.set(\n        \"disableAutoFetch\",\n        hashParams.disableautofetch === \"true\"\n      );\n    }\n    if (\"disablefontface\" in hashParams) {\n      AppOptions.set(\"disableFontFace\", hashParams.disablefontface === \"true\");\n    }\n    if (\"disablehistory\" in hashParams) {\n      AppOptions.set(\"disableHistory\", hashParams.disablehistory === \"true\");\n    }\n    if (\"webgl\" in hashParams) {\n      AppOptions.set(\"enableWebGL\", hashParams.webgl === \"true\");\n    }\n    if (\"verbosity\" in hashParams) {\n      AppOptions.set(\"verbosity\", hashParams.verbosity | 0);\n    }\n    if (\"textlayer\" in hashParams) {\n      switch (hashParams.textlayer) {\n        case \"off\":\n          AppOptions.set(\"textLayerMode\", TextLayerMode.DISABLE);\n          break;\n        case \"visible\":\n        case \"shadow\":\n        case \"hover\":\n          const viewer = this.appConfig.viewerContainer;\n          viewer.classList.add(\"textLayer-\" + hashParams.textlayer);\n          break;\n      }\n    }\n    if (\"pdfbug\" in hashParams) {\n      AppOptions.set(\"pdfBug\", true);\n      AppOptions.set(\"fontExtraProperties\", true);\n\n      const enabled = hashParams.pdfbug.split(\",\");\n      waitOn.push(loadAndEnablePDFBug(enabled));\n    }\n    // It is not possible to change locale for the (various) extension builds.\n    if (\n      (typeof PDFJSDev === \"undefined\" ||\n        PDFJSDev.test(\"!PRODUCTION || GENERIC\")) &&\n      \"locale\" in hashParams\n    ) {\n      AppOptions.set(\"locale\", hashParams.locale);\n    }\n\n    return Promise.all(waitOn).catch(reason => {\n      console.error(`_parseHashParameters: \"${reason.message}\".`);\n    });\n  },\n\n  /**\n   * @private\n   */\n  async _initializeL10n() {\n    this.l10n = this.externalServices.createL10n(\n      typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"!PRODUCTION || GENERIC\")\n        ? { locale: AppOptions.get(\"locale\") }\n        : null\n    );\n  },\n\n  /**\n   * @private\n   */\n  async _initializeViewerComponents() {\n    const appConfig = this.appConfig;\n\n    const eventBus =\n      appConfig.eventBus ||\n      new EventBus({ isInAutomation: this.externalServices.isInAutomation });\n    this.eventBus = eventBus;\n\n    // this.overlayManager = new OverlayManager();\n\n    const pdfRenderingQueue = new PDFRenderingQueue();\n    pdfRenderingQueue.onIdle = this.cleanup.bind(this);\n    this.pdfRenderingQueue = pdfRenderingQueue;\n\n    const pdfLinkService = new PDFLinkService({\n      eventBus,\n      externalLinkTarget: AppOptions.get(\"externalLinkTarget\"),\n      externalLinkRel: AppOptions.get(\"externalLinkRel\"),\n      ignoreDestinationZoom: AppOptions.get(\"ignoreDestinationZoom\"),\n    });\n    this.pdfLinkService = pdfLinkService;\n\n    const downloadManager = this.externalServices.createDownloadManager({\n      disableCreateObjectURL: AppOptions.get(\"disableCreateObjectURL\"),\n    });\n    this.downloadManager = downloadManager;\n\n    const findController = new PDFFindController({\n      linkService: pdfLinkService,\n      eventBus,\n    });\n    this.findController = findController;\n\n    const container = appConfig.mainContainer;\n    const viewer = appConfig.viewerContainer;\n    this.pdfViewer = new PDFViewer({\n      container,\n      viewer,\n      eventBus,\n      renderingQueue: pdfRenderingQueue,\n      linkService: pdfLinkService,\n      downloadManager,\n      findController,\n      renderer: AppOptions.get(\"renderer\"),\n      enableWebGL: AppOptions.get(\"enableWebGL\"),\n      l10n: this.l10n,\n      textLayerMode: AppOptions.get(\"textLayerMode\"),\n      imageResourcesPath: AppOptions.get(\"imageResourcesPath\"),\n      renderInteractiveForms: AppOptions.get(\"renderInteractiveForms\"),\n      enablePrintAutoRotate: AppOptions.get(\"enablePrintAutoRotate\"),\n      useOnlyCssZoom: AppOptions.get(\"useOnlyCssZoom\"),\n      maxCanvasPixels: AppOptions.get(\"maxCanvasPixels\"),\n    });\n    pdfRenderingQueue.setViewer(this.pdfViewer);\n    pdfLinkService.setViewer(this.pdfViewer);\n\n    // this.pdfThumbnailViewer = new PDFThumbnailViewer({\n    //   container: appConfig.sidebar.thumbnailView,\n    //   renderingQueue: pdfRenderingQueue,\n    //   linkService: pdfLinkService,\n    //   l10n: this.l10n,\n    // });\n    // pdfRenderingQueue.setThumbnailViewer(this.pdfThumbnailViewer);\n\n    this.pdfHistory = new PDFHistory({\n      linkService: pdfLinkService,\n      eventBus,\n    });\n    pdfLinkService.setHistory(this.pdfHistory);\n\n    if (!this.supportsIntegratedFind) {\n      // this.findBar = new PDFFindBar(appConfig.findBar, eventBus, this.l10n);\n    }\n\n    // this.pdfDocumentProperties = new PDFDocumentProperties(\n    //   appConfig.documentProperties,\n    //   this.overlayManager,\n    //   eventBus,\n    //   this.l10n\n    // );\n\n    this.pdfCursorTools = new PDFCursorTools({\n      container,\n      eventBus,\n      cursorToolOnLoad: AppOptions.get(\"cursorToolOnLoad\"),\n    });\n\n    // this.toolbar = new Toolbar(appConfig.toolbar, eventBus, this.l10n);\n\n    // this.secondaryToolbar = new SecondaryToolbar(\n    //   appConfig.secondaryToolbar,\n    //   container,\n    //   eventBus\n    // );\n\n    // if (this.supportsFullscreen) {\n    //   this.pdfPresentationMode = new PDFPresentationMode({\n    //     container,\n    //     pdfViewer: this.pdfViewer,\n    //     eventBus,\n    //     contextMenuItems: appConfig.fullscreen,\n    //   });\n    // }\n\n    // this.passwordPrompt = new PasswordPrompt(\n    //   appConfig.passwordOverlay,\n    //   this.overlayManager,\n    //   this.l10n\n    // );\n\n    // this.pdfOutlineViewer = new PDFOutlineViewer({\n    //   container: appConfig.sidebar.outlineView,\n    //   eventBus,\n    //   linkService: pdfLinkService,\n    // });\n\n    // this.pdfAttachmentViewer = new PDFAttachmentViewer({\n    //   container: appConfig.sidebar.attachmentsView,\n    //   eventBus,\n    //   downloadManager,\n    // });\n\n    // this.pdfSidebar = new PDFSidebar({\n    //   elements: appConfig.sidebar,\n    //   pdfViewer: this.pdfViewer,\n    //   pdfThumbnailViewer: this.pdfThumbnailViewer,\n    //   eventBus,\n    //   l10n: this.l10n,\n    // });\n    // this.pdfSidebar.onToggled = this.forceRendering.bind(this);\n\n    // this.pdfSidebarResizer = new PDFSidebarResizer(\n    //   appConfig.sidebarResizer,\n    //   eventBus,\n    //   this.l10n\n    // );\n  },\n\n  run(config) {\n    this.initialize(config).then(webViewerInitialized);\n  },\n\n  get initialized() {\n    return this._initializedCapability.settled;\n  },\n\n  get initializedPromise() {\n    return this._initializedCapability.promise;\n  },\n\n  zoomIn(ticks) {\n    if (this.pdfViewer.isInPresentationMode) {\n      return;\n    }\n    let newScale = this.pdfViewer.currentScale;\n    do {\n      newScale = (newScale * DEFAULT_SCALE_DELTA).toFixed(2);\n      newScale = Math.ceil(newScale * 10) / 10;\n      newScale = Math.min(MAX_SCALE, newScale);\n    } while (--ticks > 0 && newScale < MAX_SCALE);\n    this.pdfViewer.currentScaleValue = newScale;\n  },\n\n  zoomOut(ticks) {\n    if (this.pdfViewer.isInPresentationMode) {\n      return;\n    }\n    let newScale = this.pdfViewer.currentScale;\n    do {\n      newScale = (newScale / DEFAULT_SCALE_DELTA).toFixed(2);\n      newScale = Math.floor(newScale * 10) / 10;\n      newScale = Math.max(MIN_SCALE, newScale);\n    } while (--ticks > 0 && newScale > MIN_SCALE);\n    this.pdfViewer.currentScaleValue = newScale;\n  },\n\n  zoomReset() {\n    if (this.pdfViewer.isInPresentationMode) {\n      return;\n    }\n    this.pdfViewer.currentScaleValue = DEFAULT_SCALE_VALUE;\n  },\n\n  get pagesCount() {\n    return this.pdfDocument ? this.pdfDocument.numPages : 0;\n  },\n\n  get page() {\n    return this.pdfViewer.currentPageNumber;\n  },\n\n  set page(val) {\n    this.pdfViewer.currentPageNumber = val;\n  },\n\n  get printing() {\n    return !!this.printService;\n  },\n\n  get supportsPrinting() {\n    return PDFPrintServiceFactory.instance.supportsPrinting;\n  },\n\n  get supportsFullscreen() {\n    let support;\n    if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n      support =\n        document.fullscreenEnabled === true ||\n        document.mozFullScreenEnabled === true;\n    } else {\n      const doc = document.documentElement;\n      support = !!(\n        doc.requestFullscreen ||\n        doc.mozRequestFullScreen ||\n        doc.webkitRequestFullScreen ||\n        doc.msRequestFullscreen\n      );\n\n      if (\n        document.fullscreenEnabled === false ||\n        document.mozFullScreenEnabled === false ||\n        document.webkitFullscreenEnabled === false ||\n        document.msFullscreenEnabled === false\n      ) {\n        support = false;\n      }\n    }\n    return shadow(this, \"supportsFullscreen\", support);\n  },\n\n  get supportsIntegratedFind() {\n    return this.externalServices.supportsIntegratedFind;\n  },\n\n  get supportsDocumentFonts() {\n    return this.externalServices.supportsDocumentFonts;\n  },\n\n  get loadingBar() {\n    const bar = new ProgressBar(\"#loadingBar\");\n    return shadow(this, \"loadingBar\", bar);\n  },\n\n  get supportedMouseWheelZoomModifierKeys() {\n    return this.externalServices.supportedMouseWheelZoomModifierKeys;\n  },\n\n  initPassiveLoading() {\n    if (\n      typeof PDFJSDev === \"undefined\" ||\n      !PDFJSDev.test(\"MOZCENTRAL || CHROME\")\n    ) {\n      throw new Error(\"Not implemented: initPassiveLoading\");\n    }\n    this.externalServices.initPassiveLoading({\n      onOpenWithTransport(url, length, transport) {\n        PDFViewerApplication.open(url, { length, range: transport });\n      },\n      onOpenWithData(data) {\n        PDFViewerApplication.open(data);\n      },\n      onOpenWithURL(url, length, originalUrl) {\n        let file = url,\n          args = null;\n        if (length !== undefined) {\n          args = { length };\n        }\n        if (originalUrl !== undefined) {\n          file = { url, originalUrl };\n        }\n        PDFViewerApplication.open(file, args);\n      },\n      onError(err) {\n        PDFViewerApplication.l10n\n          .get(\n            \"loading_error\",\n            null,\n            \"An error occurred while loading the PDF.\"\n          )\n          .then(msg => {\n            PDFViewerApplication.error(msg, err);\n          });\n      },\n      onProgress(loaded, total) {\n        // PDFViewerApplication.progress(loaded / total);\n      },\n    });\n  },\n\n  setTitleUsingUrl(url = \"\") {\n    this.url = url;\n    this.baseUrl = url.split(\"#\")[0];\n    let title = getPDFFileNameFromURL(url, \"\");\n    if (!title) {\n      try {\n        title = decodeURIComponent(getFilenameFromUrl(url)) || url;\n      } catch (ex) {\n        // decodeURIComponent may throw URIError,\n        // fall back to using the unprocessed url in that case\n        title = url;\n      }\n    }\n    this.setTitle(title);\n  },\n\n  setTitle(title) {\n    if (this.isViewerEmbedded) {\n      // Embedded PDF viewers should not be changing their parent page's title.\n      return;\n    }\n    document.title = title;\n  },\n\n  /**\n   * Closes opened PDF document.\n   * @returns {Promise} - Returns the promise, which is resolved when all\n   *                      destruction is completed.\n   */\n  async close() {\n    const errorWrapper = this.appConfig.errorWrapper.container;\n    errorWrapper.setAttribute(\"hidden\", \"true\");\n\n    if (!this.pdfLoadingTask) {\n      return undefined;\n    }\n\n    const promise = this.pdfLoadingTask.destroy();\n    this.pdfLoadingTask = null;\n\n    if (this.pdfDocument) {\n      this.pdfDocument = null;\n\n      // this.pdfThumbnailViewer.setDocument(null);\n      this.pdfViewer.setDocument(null);\n      this.pdfLinkService.setDocument(null);\n      // this.pdfDocumentProperties.setDocument(null);\n    }\n    webViewerResetPermissions();\n    this.store = null;\n    this.isInitialViewSet = false;\n    this.downloadComplete = false;\n    this.url = \"\";\n    this.baseUrl = \"\";\n    this.contentDispositionFilename = null;\n\n    // this.pdfSidebar.reset();\n    // this.pdfOutlineViewer.reset();\n    // this.pdfAttachmentViewer.reset();\n\n    if (this.pdfHistory) {\n      this.pdfHistory.reset();\n    }\n    // if (this.findBar) {\n    //   this.findBar.reset();\n    // }\n    // this.toolbar.reset();\n    // this.secondaryToolbar.reset();\n\n    if (typeof PDFBug !== \"undefined\") {\n      PDFBug.cleanup();\n    }\n    return promise;\n  },\n\n  /**\n   * Opens PDF document specified by URL or array with additional arguments.\n   * @param {string|TypedArray|ArrayBuffer} file - PDF location or binary data.\n   * @param {Object} [args] - Additional arguments for the getDocument call,\n   *                          e.g. HTTP headers ('httpHeaders') or alternative\n   *                          data transport ('range').\n   * @returns {Promise} - Returns the promise, which is resolved when document\n   *                      is opened.\n   */\n  async open(file, args) {\n    if (this.pdfLoadingTask) {\n      // We need to destroy already opened document.\n      await this.close();\n    }\n    // Set the necessary global worker parameters, using the available options.\n    const workerParameters = AppOptions.getAll(OptionKind.WORKER);\n    for (const key in workerParameters) {\n      GlobalWorkerOptions[key] = workerParameters[key];\n    }\n\n    const parameters = Object.create(null);\n    if (typeof file === \"string\") {\n      // URL\n      this.setTitleUsingUrl(file);\n      parameters.url = file;\n    } else if (file && \"byteLength\" in file) {\n      // ArrayBuffer\n      parameters.data = file;\n    } else if (file.url && file.originalUrl) {\n      this.setTitleUsingUrl(file.originalUrl);\n      parameters.url = file.url;\n    }\n    // Set the necessary API parameters, using the available options.\n    const apiParameters = AppOptions.getAll(OptionKind.API);\n    for (const key in apiParameters) {\n      let value = apiParameters[key];\n\n      if (key === \"docBaseUrl\" && !value) {\n        if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"PRODUCTION\")) {\n          value = document.URL.split(\"#\")[0];\n        } else if (PDFJSDev.test(\"MOZCENTRAL || CHROME\")) {\n          value = this.baseUrl;\n        }\n      }\n      parameters[key] = value;\n    }\n\n    if (args) {\n      for (const key in args) {\n        const value = args[key];\n\n        if (key === \"length\") {\n          // this.pdfDocumentProperties.setFileSize(value);\n        }\n        parameters[key] = value;\n      }\n    }\n\n    const loadingTask = getDocument(parameters);\n    this.pdfLoadingTask = loadingTask;\n\n    loadingTask.onPassword = (updateCallback, reason) => {\n      this.pdfLinkService.externalLinkEnabled = false;\n      // this.passwordPrompt.setUpdateCallback(updateCallback, reason);\n      // this.passwordPrompt.open();\n    };\n\n    // loadingTask.onProgress = ({ loaded, total }) => {\n    //   this.progress(loaded / total);\n    // };\n\n    // Listen for unsupported features to trigger the fallback UI.\n    loadingTask.onUnsupportedFeature = this.fallback.bind(this);\n\n    return loadingTask.promise.then(\n      pdfDocument => {\n        this.load(pdfDocument);\n      },\n      exception => {\n        if (loadingTask !== this.pdfLoadingTask) {\n          return undefined; // Ignore errors for previously opened PDF files.\n        }\n\n        const message = exception && exception.message;\n        let loadingErrorMessage;\n        if (exception instanceof InvalidPDFException) {\n          // change error message also for other builds\n          loadingErrorMessage = this.l10n.get(\n            \"invalid_file_error\",\n            null,\n            \"Invalid or corrupted PDF file.\"\n          );\n        } else if (exception instanceof MissingPDFException) {\n          // special message for missing PDF's\n          loadingErrorMessage = this.l10n.get(\n            \"missing_file_error\",\n            null,\n            \"Missing PDF file.\"\n          );\n        } else if (exception instanceof UnexpectedResponseException) {\n          loadingErrorMessage = this.l10n.get(\n            \"unexpected_response_error\",\n            null,\n            \"Unexpected server response.\"\n          );\n        } else {\n          loadingErrorMessage = this.l10n.get(\n            \"loading_error\",\n            null,\n            \"An error occurred while loading the PDF.\"\n          );\n        }\n\n        return loadingErrorMessage.then(msg => {\n          this.error(msg, { message });\n          throw exception;\n        });\n      }\n    );\n  },\n\n  download() {\n    function downloadByUrl() {\n      downloadManager.downloadUrl(url, filename);\n    }\n\n    const url = this.baseUrl;\n    // Use this.url instead of this.baseUrl to perform filename detection based\n    // on the reference fragment as ultimate fallback if needed.\n    const filename =\n      this.contentDispositionFilename || getPDFFileNameFromURL(this.url);\n    const downloadManager = this.downloadManager;\n    downloadManager.onerror = err => {\n      // This error won't really be helpful because it's likely the\n      // fallback won't work either (or is already open).\n      this.error(`PDF failed to download: ${err}`);\n    };\n\n    // When the PDF document isn't ready, or the PDF file is still downloading,\n    // simply download using the URL.\n    if (!this.pdfDocument || !this.downloadComplete) {\n      downloadByUrl();\n      return;\n    }\n\n    this.pdfDocument\n      .getData()\n      .then(function (data) {\n        const blob = new Blob([data], { type: \"application/pdf\" });\n        downloadManager.download(blob, url, filename);\n      })\n      .catch(downloadByUrl); // Error occurred, try downloading with the URL.\n  },\n\n  fallback(featureId) {\n    if (\n      typeof PDFJSDev === \"undefined\" ||\n      PDFJSDev.test(\"MOZCENTRAL || GENERIC\")\n    ) {\n      // Only trigger the fallback once so we don't spam the user with messages\n      // for one PDF.\n      if (this.fellback) {\n        return;\n      }\n      this.fellback = true;\n      this.externalServices.fallback(\n        {\n          featureId,\n          url: this.baseUrl,\n        },\n        function response(download) {\n          if (!download) {\n            return;\n          }\n          PDFViewerApplication.download();\n        }\n      );\n    }\n  },\n\n  /**\n   * Show the error box.\n   * @param {string} message - A message that is human readable.\n   * @param {Object} [moreInfo] - Further information about the error that is\n   *                              more technical.  Should have a 'message' and\n   *                              optionally a 'stack' property.\n   */\n  error(message, moreInfo) {\n    const moreInfoText = [\n      this.l10n.get(\n        \"error_version_info\",\n        { version: version || \"?\", build: build || \"?\" },\n        \"PDF.js v{{version}} (build: {{build}})\"\n      ),\n    ];\n    if (moreInfo) {\n      moreInfoText.push(\n        this.l10n.get(\n          \"error_message\",\n          { message: moreInfo.message },\n          \"Message: {{message}}\"\n        )\n      );\n      if (moreInfo.stack) {\n        moreInfoText.push(\n          this.l10n.get(\n            \"error_stack\",\n            { stack: moreInfo.stack },\n            \"Stack: {{stack}}\"\n          )\n        );\n      } else {\n        if (moreInfo.filename) {\n          moreInfoText.push(\n            this.l10n.get(\n              \"error_file\",\n              { file: moreInfo.filename },\n              \"File: {{file}}\"\n            )\n          );\n        }\n        if (moreInfo.lineNumber) {\n          moreInfoText.push(\n            this.l10n.get(\n              \"error_line\",\n              { line: moreInfo.lineNumber },\n              \"Line: {{line}}\"\n            )\n          );\n        }\n      }\n    }\n\n    if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"MOZCENTRAL\")) {\n      const errorWrapperConfig = this.appConfig.errorWrapper;\n      const errorWrapper = errorWrapperConfig.container;\n      errorWrapper.removeAttribute(\"hidden\");\n\n      const errorMessage = errorWrapperConfig.errorMessage;\n      errorMessage.textContent = message;\n\n      const closeButton = errorWrapperConfig.closeButton;\n      closeButton.onclick = function () {\n        errorWrapper.setAttribute(\"hidden\", \"true\");\n      };\n\n      const errorMoreInfo = errorWrapperConfig.errorMoreInfo;\n      const moreInfoButton = errorWrapperConfig.moreInfoButton;\n      const lessInfoButton = errorWrapperConfig.lessInfoButton;\n      moreInfoButton.onclick = function () {\n        errorMoreInfo.removeAttribute(\"hidden\");\n        moreInfoButton.setAttribute(\"hidden\", \"true\");\n        lessInfoButton.removeAttribute(\"hidden\");\n        errorMoreInfo.style.height = errorMoreInfo.scrollHeight + \"px\";\n      };\n      lessInfoButton.onclick = function () {\n        errorMoreInfo.setAttribute(\"hidden\", \"true\");\n        moreInfoButton.removeAttribute(\"hidden\");\n        lessInfoButton.setAttribute(\"hidden\", \"true\");\n      };\n      moreInfoButton.oncontextmenu = noContextMenuHandler;\n      lessInfoButton.oncontextmenu = noContextMenuHandler;\n      closeButton.oncontextmenu = noContextMenuHandler;\n      moreInfoButton.removeAttribute(\"hidden\");\n      lessInfoButton.setAttribute(\"hidden\", \"true\");\n      Promise.all(moreInfoText).then(parts => {\n        errorMoreInfo.value = parts.join(\"\\n\");\n      });\n    } else {\n      Promise.all(moreInfoText).then(parts => {\n        console.error(message + \"\\n\" + parts.join(\"\\n\"));\n      });\n      this.fallback();\n    }\n  },\n\n  progress(level) {\n    if (this.downloadComplete) {\n      // Don't accidentally show the loading bar again when the entire file has\n      // already been fetched (only an issue when disableAutoFetch is enabled).\n      return;\n    }\n    const percent = Math.round(level * 100);\n    // When we transition from full request to range requests, it's possible\n    // that we discard some of the loaded data. This can cause the loading\n    // bar to move backwards. So prevent this by only updating the bar if it\n    // increases.\n    if (percent > this.loadingBar.percent || isNaN(percent)) {\n      this.loadingBar.percent = percent;\n\n      // When disableAutoFetch is enabled, it's not uncommon for the entire file\n      // to never be fetched (depends on e.g. the file structure). In this case\n      // the loading bar will not be completely filled, nor will it be hidden.\n      // To prevent displaying a partially filled loading bar permanently, we\n      // hide it when no data has been loaded during a certain amount of time.\n      const disableAutoFetch = this.pdfDocument\n        ? this.pdfDocument.loadingParams.disableAutoFetch\n        : AppOptions.get(\"disableAutoFetch\");\n\n      if (disableAutoFetch && percent) {\n        if (this.disableAutoFetchLoadingBarTimeout) {\n          clearTimeout(this.disableAutoFetchLoadingBarTimeout);\n          this.disableAutoFetchLoadingBarTimeout = null;\n        }\n        this.loadingBar.show();\n\n        this.disableAutoFetchLoadingBarTimeout = setTimeout(() => {\n          this.loadingBar.hide();\n          this.disableAutoFetchLoadingBarTimeout = null;\n        }, DISABLE_AUTO_FETCH_LOADING_BAR_TIMEOUT);\n      }\n    }\n  },\n\n  load(pdfDocument) {\n    this.pdfDocument = pdfDocument;\n    pdfDocument.getDownloadInfo().then(() => {\n      this.downloadComplete = true;\n      // this.loadingBar.hide();\n\n      firstPagePromise.then(() => {\n        this.eventBus.dispatch(\"documentloaded\", { source: this });\n      });\n    });\n\n    // Since the `setInitialView` call below depends on this being resolved,\n    // fetch it early to avoid delaying initial rendering of the PDF document.\n    const pageLayoutPromise = pdfDocument.getPageLayout().catch(function () {\n      /* Avoid breaking initial rendering; ignoring errors. */\n    });\n    const pageModePromise = pdfDocument.getPageMode().catch(function () {\n      /* Avoid breaking initial rendering; ignoring errors. */\n    });\n    const openActionPromise = pdfDocument.getOpenAction().catch(function () {\n      /* Avoid breaking initial rendering; ignoring errors. */\n    });\n\n    store.commit(\"updateNumPages\", pdfDocument.numPages);\n    // this.secondaryToolbar.setPagesCount(pdfDocument.numPages);\n\n    let baseDocumentUrl;\n    if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) {\n      baseDocumentUrl = null;\n    } else if (PDFJSDev.test(\"MOZCENTRAL\")) {\n      baseDocumentUrl = this.baseUrl;\n    } else if (PDFJSDev.test(\"CHROME\")) {\n      baseDocumentUrl = location.href.split(\"#\")[0];\n    }\n    this.pdfLinkService.setDocument(pdfDocument, baseDocumentUrl);\n    // this.pdfDocumentProperties.setDocument(pdfDocument, this.url);\n\n    const pdfViewer = this.pdfViewer;\n    pdfViewer.setDocument(pdfDocument);\n    const { firstPagePromise, onePageRendered, pagesPromise } = pdfViewer;\n\n    // const pdfThumbnailViewer = this.pdfThumbnailViewer;\n    // pdfThumbnailViewer.setDocument(pdfDocument);\n\n    const storedPromise = (this.store = new ViewHistory(\n      pdfDocument.fingerprint\n    ))\n      .getMultiple({\n        page: null,\n        zoom: DEFAULT_SCALE_VALUE,\n        scrollLeft: \"0\",\n        scrollTop: \"0\",\n        rotation: null,\n        sidebarView: SidebarView.UNKNOWN,\n        scrollMode: ScrollMode.UNKNOWN,\n        spreadMode: SpreadMode.UNKNOWN,\n      })\n      .catch(() => {\n        /* Unable to read from storage; ignoring errors. */\n        return Object.create(null);\n      });\n\n    firstPagePromise.then(pdfPage => {\n      // this.loadingBar.setWidth(this.appConfig.viewerContainer);\n\n      Promise.all([\n        animationStarted,\n        storedPromise,\n        pageLayoutPromise,\n        pageModePromise,\n        openActionPromise,\n      ])\n        .then(async ([timeStamp, stored, pageLayout, pageMode, openAction]) => {\n          const viewOnLoad = AppOptions.get(\"viewOnLoad\");\n\n          this._initializePdfHistory({\n            fingerprint: pdfDocument.fingerprint,\n            viewOnLoad,\n            initialDest: openAction && openAction.dest,\n          });\n          const initialBookmark = this.initialBookmark;\n\n          // Initialize the default values, from user preferences.\n          const zoom = AppOptions.get(\"defaultZoomValue\");\n          let hash = zoom ? `zoom=${zoom}` : null;\n\n          let rotation = null;\n          let sidebarView = AppOptions.get(\"sidebarViewOnLoad\");\n          let scrollMode = AppOptions.get(\"scrollModeOnLoad\");\n          let spreadMode = AppOptions.get(\"spreadModeOnLoad\");\n\n          if (stored.page && viewOnLoad !== ViewOnLoad.INITIAL) {\n            hash =\n              `page=${stored.page}&zoom=${zoom || stored.zoom},` +\n              `${stored.scrollLeft},${stored.scrollTop}`;\n\n            rotation = parseInt(stored.rotation, 10);\n            // Always let user preference take precedence over the view history.\n            if (sidebarView === SidebarView.UNKNOWN) {\n              sidebarView = stored.sidebarView | 0;\n            }\n            if (scrollMode === ScrollMode.UNKNOWN) {\n              scrollMode = stored.scrollMode | 0;\n            }\n            if (spreadMode === SpreadMode.UNKNOWN) {\n              spreadMode = stored.spreadMode | 0;\n            }\n          }\n          // Always let the user preference/view history take precedence.\n          if (pageMode && sidebarView === SidebarView.UNKNOWN) {\n            sidebarView = apiPageModeToSidebarView(pageMode);\n          }\n          if (pageLayout && spreadMode === SpreadMode.UNKNOWN) {\n            spreadMode = apiPageLayoutToSpreadMode(pageLayout);\n          }\n\n          this.setInitialView(hash, {\n            rotation,\n            sidebarView,\n            scrollMode,\n            spreadMode,\n          });\n          this.eventBus.dispatch(\"documentinit\", { source: this });\n          // Make all navigation keys work on document load,\n          // unless the viewer is embedded in a web page.\n          if (!this.isViewerEmbedded) {\n            pdfViewer.focus();\n          }\n\n          // Currently only the \"copy\"-permission is supported, hence we delay\n          // the `getPermissions` API call until *after* rendering has started.\n          this._initializePermissions(pdfDocument);\n\n          // For documents with different page sizes, once all pages are\n          // resolved, ensure that the correct location becomes visible on load.\n          // (To reduce the risk, in very large and/or slow loading documents,\n          //  that the location changes *after* the user has started interacting\n          //  with the viewer, wait for either `pagesPromise` or a timeout.)\n          await Promise.race([\n            pagesPromise,\n            new Promise(resolve => {\n              setTimeout(resolve, FORCE_PAGES_LOADED_TIMEOUT);\n            }),\n          ]);\n          if (!initialBookmark && !hash) {\n            return;\n          }\n          if (pdfViewer.hasEqualPageSizes) {\n            return;\n          }\n          this.initialBookmark = initialBookmark;\n\n          // eslint-disable-next-line no-self-assign\n          pdfViewer.currentScaleValue = pdfViewer.currentScaleValue;\n          // Re-apply the initial document location.\n          this.setInitialView(hash);\n        })\n        .catch(() => {\n          // Ensure that the document is always completely initialized,\n          // even if there are any errors thrown above.\n          this.setInitialView();\n        })\n        .then(function () {\n          // At this point, rendering of the initial page(s) should always have\n          // started (and may even have completed).\n          // To prevent any future issues, e.g. the document being completely\n          // blank on load, always trigger rendering here.\n          pdfViewer.update();\n        });\n    });\n\n    pagesPromise.then(() => {\n      this._initializeAutoPrint(pdfDocument, openActionPromise);\n    });\n\n    onePageRendered.then(() => {\n      // pdfDocument.getOutline().then(outline => {\n      //   this.pdfOutlineViewer.render({ outline });\n      // });\n      // pdfDocument.getAttachments().then(attachments => {\n      //   this.pdfAttachmentViewer.render({ attachments });\n      // });\n    });\n\n    this._initializePageLabels(pdfDocument);\n    this._initializeMetadata(pdfDocument);\n  },\n\n  /**\n   * @private\n   */\n  async _initializeAutoPrint(pdfDocument, openActionPromise) {\n    const [openAction, javaScript] = await Promise.all([\n      openActionPromise,\n      pdfDocument.getJavaScript(),\n    ]);\n\n    if (pdfDocument !== this.pdfDocument) {\n      return; // The document was closed while the auto print data resolved.\n    }\n    let triggerAutoPrint = false;\n\n    if (openAction && openAction.action === \"Print\") {\n      triggerAutoPrint = true;\n    }\n    if (javaScript) {\n      javaScript.some(js => {\n        if (!js) {\n          // Don't warn/fallback for empty JavaScript actions.\n          return false;\n        }\n        console.warn(\"Warning: JavaScript is not supported\");\n        this.fallback(UNSUPPORTED_FEATURES.javaScript);\n        return true;\n      });\n\n      if (!triggerAutoPrint) {\n        // Hack to support auto printing.\n        for (const js of javaScript) {\n          if (js && AutoPrintRegExp.test(js)) {\n            triggerAutoPrint = true;\n            break;\n          }\n        }\n      }\n    }\n\n    if (!this.supportsPrinting) {\n      return;\n    }\n    if (triggerAutoPrint) {\n      setTimeout(function () {\n        window.print();\n      });\n    }\n  },\n\n  /**\n   * @private\n   */\n  async _initializeMetadata(pdfDocument) {\n    const {\n      info,\n      metadata,\n      contentDispositionFilename,\n    } = await pdfDocument.getMetadata();\n\n    if (pdfDocument !== this.pdfDocument) {\n      return; // The document was closed while the metadata resolved.\n    }\n    this.documentInfo = info;\n    this.metadata = metadata;\n    this.contentDispositionFilename = contentDispositionFilename;\n\n    // Provides some basic debug information\n    console.log(\n      `PDF ${pdfDocument.fingerprint} [${info.PDFFormatVersion} ` +\n        `${(info.Producer || \"-\").trim()} / ${(info.Creator || \"-\").trim()}] ` +\n        `(PDF.js: ${version || \"-\"}` +\n        `${this.pdfViewer.enableWebGL ? \" [WebGL]\" : \"\"})`\n    );\n\n    let pdfTitle;\n\n    const infoTitle = info && info.Title;\n    if (infoTitle) {\n      pdfTitle = infoTitle;\n    }\n    const metadataTitle = metadata && metadata.get(\"dc:title\");\n    if (metadataTitle) {\n      // Ghostscript can produce invalid 'dc:title' Metadata entries:\n      //  - The title may be \"Untitled\" (fixes bug 1031612).\n      //  - The title may contain incorrectly encoded characters, which thus\n      //    looks broken, hence we ignore the Metadata entry when it\n      //    contains characters from the Specials Unicode block\n      //    (fixes bug 1605526).\n      if (\n        metadataTitle !== \"Untitled\" &&\n        !/[\\uFFF0-\\uFFFF]/g.test(metadataTitle)\n      ) {\n        pdfTitle = metadataTitle;\n      }\n    }\n\n    if (pdfTitle) {\n      this.setTitle(\n        `${pdfTitle} - ${contentDispositionFilename || document.title}`\n      );\n    } else if (contentDispositionFilename) {\n      this.setTitle(contentDispositionFilename);\n    }\n\n    if (info.IsAcroFormPresent) {\n      console.warn(\"Warning: AcroForm/XFA is not supported\");\n      this.fallback(UNSUPPORTED_FEATURES.forms);\n    }\n\n    if (\n      typeof PDFJSDev === \"undefined\" ||\n      PDFJSDev.test(\"MOZCENTRAL || GENERIC\")\n    ) {\n      // Telemetry labels must be C++ variable friendly.\n      let versionId = \"other\";\n      // Keep these in sync with mozilla central's Histograms.json.\n      const KNOWN_VERSIONS = [\n        \"1.0\",\n        \"1.1\",\n        \"1.2\",\n        \"1.3\",\n        \"1.4\",\n        \"1.5\",\n        \"1.6\",\n        \"1.7\",\n        \"1.8\",\n        \"1.9\",\n        \"2.0\",\n        \"2.1\",\n        \"2.2\",\n        \"2.3\",\n      ];\n      if (KNOWN_VERSIONS.includes(info.PDFFormatVersion)) {\n        versionId = `v${info.PDFFormatVersion.replace(\".\", \"_\")}`;\n      }\n\n      let generatorId = \"other\";\n      // Keep these in sync with mozilla central's Histograms.json.\n      const KNOWN_GENERATORS = [\n        \"acrobat distiller\",\n        \"acrobat pdfwriter\",\n        \"adobe livecycle\",\n        \"adobe pdf library\",\n        \"adobe photoshop\",\n        \"ghostscript\",\n        \"tcpdf\",\n        \"cairo\",\n        \"dvipdfm\",\n        \"dvips\",\n        \"pdftex\",\n        \"pdfkit\",\n        \"itext\",\n        \"prince\",\n        \"quarkxpress\",\n        \"mac os x\",\n        \"microsoft\",\n        \"openoffice\",\n        \"oracle\",\n        \"luradocument\",\n        \"pdf-xchange\",\n        \"antenna house\",\n        \"aspose.cells\",\n        \"fpdf\",\n      ];\n      if (info.Producer) {\n        const producer = info.Producer.toLowerCase();\n        KNOWN_GENERATORS.some(function (generator) {\n          if (!producer.includes(generator)) {\n            return false;\n          }\n          generatorId = generator.replace(/[ .\\-]/g, \"_\");\n          return true;\n        });\n      }\n\n      let formType = null;\n      if (info.IsAcroFormPresent) {\n        formType = info.IsXFAPresent ? \"xfa\" : \"acroform\";\n      }\n      this.externalServices.reportTelemetry({\n        type: \"documentInfo\",\n        version: versionId,\n        generator: generatorId,\n        formType,\n      });\n    }\n  },\n\n  /**\n   * @private\n   */\n  async _initializePageLabels(pdfDocument) {\n    const labels = await pdfDocument.getPageLabels();\n\n    if (pdfDocument !== this.pdfDocument) {\n      return; // The document was closed while the page labels resolved.\n    }\n    if (!labels || AppOptions.get(\"disablePageLabels\")) {\n      return;\n    }\n    const numLabels = labels.length;\n    if (numLabels !== this.pagesCount) {\n      console.error(\n        \"The number of Page Labels does not match the number of pages in the document.\"\n      );\n      return;\n    }\n    let i = 0;\n    // Ignore page labels that correspond to standard page numbering.\n    while (i < numLabels && labels[i] === (i + 1).toString()) {\n      i++;\n    }\n    if (i === numLabels) {\n      return;\n    }\n    const {\n      pdfViewer,\n      // pdfThumbnailViewer,\n      // toolbar\n    } = this;\n\n    pdfViewer.setPageLabels(labels);\n    // pdfThumbnailViewer.setPageLabels(labels);\n\n    // Changing toolbar page display to use labels and we need to set\n    // the label of the current page.\n    // toolbar.setPagesCount(numLabels, true);\n    // toolbar.setPageNumber(\n    //   pdfViewer.currentPageNumber,\n    //   pdfViewer.currentPageLabel\n    // );\n  },\n\n  /**\n   * @private\n   */\n  _initializePdfHistory({ fingerprint, viewOnLoad, initialDest = null }) {\n    if (this.isViewerEmbedded || AppOptions.get(\"disableHistory\")) {\n      // The browsing history is only enabled when the viewer is standalone,\n      // i.e. not when it is embedded in a web page.\n      return;\n    }\n    this.pdfHistory.initialize({\n      fingerprint,\n      resetHistory: viewOnLoad === ViewOnLoad.INITIAL,\n      updateUrl: AppOptions.get(\"historyUpdateUrl\"),\n    });\n\n    if (this.pdfHistory.initialBookmark) {\n      this.initialBookmark = this.pdfHistory.initialBookmark;\n\n      this.initialRotation = this.pdfHistory.initialRotation;\n    }\n\n    // Always let the browser history/document hash take precedence.\n    if (\n      initialDest &&\n      !this.initialBookmark &&\n      viewOnLoad === ViewOnLoad.UNKNOWN\n    ) {\n      this.initialBookmark = JSON.stringify(initialDest);\n      // TODO: Re-factor the `PDFHistory` initialization to remove this hack\n      // that's currently necessary to prevent weird initial history state.\n      this.pdfHistory.push({ explicitDest: initialDest, pageNumber: null });\n    }\n  },\n\n  /**\n   * @private\n   */\n  async _initializePermissions(pdfDocument) {\n    const permissions = await pdfDocument.getPermissions();\n\n    if (pdfDocument !== this.pdfDocument) {\n      return; // The document was closed while the permissions resolved.\n    }\n    if (!permissions || !AppOptions.get(\"enablePermissions\")) {\n      return;\n    }\n    // Currently only the \"copy\"-permission is supported.\n    if (!permissions.includes(PermissionFlag.COPY)) {\n      this.appConfig.viewerContainer.classList.add(ENABLE_PERMISSIONS_CLASS);\n    }\n  },\n\n  setInitialView(\n    storedHash,\n    { rotation, sidebarView, scrollMode, spreadMode } = {}\n  ) {\n    const setRotation = angle => {\n      if (isValidRotation(angle)) {\n        this.pdfViewer.pagesRotation = angle;\n      }\n    };\n    const setViewerModes = (scroll, spread) => {\n      if (isValidScrollMode(scroll)) {\n        this.pdfViewer.scrollMode = scroll;\n      }\n      if (isValidSpreadMode(spread)) {\n        this.pdfViewer.spreadMode = spread;\n      }\n    };\n    this.isInitialViewSet = true;\n    // this.pdfSidebar.setInitialView(sidebarView);\n\n    setViewerModes(scrollMode, spreadMode);\n\n    if (this.initialBookmark) {\n      setRotation(this.initialRotation);\n      delete this.initialRotation;\n\n      this.pdfLinkService.setHash(this.initialBookmark);\n      this.initialBookmark = null;\n    } else if (storedHash) {\n      setRotation(rotation);\n\n      this.pdfLinkService.setHash(storedHash);\n    }\n\n    // Ensure that the correct page number is displayed in the UI,\n    // even if the active page didn't change during document load.\n    store.dispatch(\"updatePageNumberPageLabel\", {\n      pageNumber: this.pdfViewer.currentPageNumber,\n      pageLabel: this.pdfViewer.currentPageLabel\n    });\n    // this.secondaryToolbar.setPageNumber(this.pdfViewer.currentPageNumber);\n\n    if (!this.pdfViewer.currentScaleValue) {\n      // Scale was not initialized: invalid bookmark or scale was not specified.\n      // Setting the default one.\n      this.pdfViewer.currentScaleValue = DEFAULT_SCALE_VALUE;\n    }\n  },\n\n  cleanup() {\n    if (!this.pdfDocument) {\n      return; // run cleanup when document is loaded\n    }\n    this.pdfViewer.cleanup();\n    // this.pdfThumbnailViewer.cleanup();\n\n    // We don't want to remove fonts used by active page SVGs.\n    if (this.pdfViewer.renderer !== RendererType.SVG) {\n      this.pdfDocument.cleanup();\n    }\n  },\n\n  forceRendering() {\n    this.pdfRenderingQueue.printing = this.printing;\n    // this.pdfRenderingQueue.isThumbnailViewEnabled = this.pdfSidebar.isThumbnailViewVisible;\n    this.pdfRenderingQueue.renderHighestPriority();\n  },\n\n  beforePrint() {\n    if (this.printService) {\n      // There is no way to suppress beforePrint/afterPrint events,\n      // but PDFPrintService may generate double events -- this will ignore\n      // the second event that will be coming from native window.print().\n      return;\n    }\n\n    if (!this.supportsPrinting) {\n      this.l10n\n        .get(\n          \"printing_not_supported\",\n          null,\n          \"Warning: Printing is not fully supported by this browser.\"\n        )\n        .then(printMessage => {\n          this.error(printMessage);\n        });\n      return;\n    }\n\n    // The beforePrint is a sync method and we need to know layout before\n    // returning from this method. Ensure that we can get sizes of the pages.\n    if (!this.pdfViewer.pageViewsReady) {\n      this.l10n\n        .get(\n          \"printing_not_ready\",\n          null,\n          \"Warning: The PDF is not fully loaded for printing.\"\n        )\n        .then(notReadyMessage => {\n          window.alert(notReadyMessage);\n        });\n      return;\n    }\n\n    const pagesOverview = this.pdfViewer.getPagesOverview();\n    const printContainer = this.appConfig.printContainer;\n    const printService = PDFPrintServiceFactory.instance.createPrintService(\n      this.pdfDocument,\n      pagesOverview,\n      printContainer,\n      this.l10n\n    );\n    this.printService = printService;\n    this.forceRendering();\n\n    printService.layout();\n\n    if (\n      typeof PDFJSDev === \"undefined\" ||\n      PDFJSDev.test(\"MOZCENTRAL || GENERIC\")\n    ) {\n      this.externalServices.reportTelemetry({\n        type: \"print\",\n      });\n    }\n  },\n\n  afterPrint() {\n    if (this.printService) {\n      this.printService.destroy();\n      this.printService = null;\n    }\n    this.forceRendering();\n  },\n\n  rotatePages(delta) {\n    if (!this.pdfDocument) {\n      return;\n    }\n    const newRotation = (this.pdfViewer.pagesRotation + 360 + delta) % 360;\n    this.pdfViewer.pagesRotation = newRotation;\n    // Note that the thumbnail viewer is updated, and rendering is triggered,\n    // in the 'rotationchanging' event handler.\n  },\n\n  requestPresentationMode() {\n    // if (!this.pdfPresentationMode) {\n    //   return;\n    // }\n    // this.pdfPresentationMode.request();\n  },\n\n  bindEvents() {\n    const { eventBus, _boundEvents } = this;\n\n    _boundEvents.beforePrint = this.beforePrint.bind(this);\n    _boundEvents.afterPrint = this.afterPrint.bind(this);\n\n    eventBus._on(\"resize\", webViewerResize);\n    eventBus._on(\"hashchange\", webViewerHashchange);\n    eventBus._on(\"beforeprint\", _boundEvents.beforePrint);\n    eventBus._on(\"afterprint\", _boundEvents.afterPrint);\n    eventBus._on(\"pagerendered\", webViewerPageRendered);\n    eventBus._on(\"updateviewarea\", webViewerUpdateViewarea);\n    eventBus._on(\"pagechanging\", webViewerPageChanging);\n    eventBus._on(\"scalechanging\", webViewerScaleChanging);\n    eventBus._on(\"rotationchanging\", webViewerRotationChanging);\n    eventBus._on(\"sidebarviewchanged\", webViewerSidebarViewChanged);\n    eventBus._on(\"pagemode\", webViewerPageMode);\n    eventBus._on(\"namedaction\", webViewerNamedAction);\n    eventBus._on(\"presentationmodechanged\", webViewerPresentationModeChanged);\n    eventBus._on(\"presentationmode\", webViewerPresentationMode);\n    eventBus._on(\"print\", webViewerPrint);\n    eventBus._on(\"download\", webViewerDownload);\n    eventBus._on(\"firstpage\", webViewerFirstPage);\n    eventBus._on(\"lastpage\", webViewerLastPage);\n    eventBus._on(\"nextpage\", webViewerNextPage);\n    eventBus._on(\"previouspage\", webViewerPreviousPage);\n    eventBus._on(\"zoomin\", webViewerZoomIn);\n    eventBus._on(\"zoomout\", webViewerZoomOut);\n    eventBus._on(\"zoomreset\", webViewerZoomReset);\n    eventBus._on(\"pagenumberchanged\", webViewerPageNumberChanged);\n    eventBus._on(\"scalechanged\", webViewerScaleChanged);\n    eventBus._on(\"rotatecw\", webViewerRotateCw);\n    eventBus._on(\"rotateccw\", webViewerRotateCcw);\n    eventBus._on(\"switchscrollmode\", webViewerSwitchScrollMode);\n    eventBus._on(\"scrollmodechanged\", webViewerScrollModeChanged);\n    eventBus._on(\"switchspreadmode\", webViewerSwitchSpreadMode);\n    eventBus._on(\"spreadmodechanged\", webViewerSpreadModeChanged);\n    eventBus._on(\"documentproperties\", webViewerDocumentProperties);\n    eventBus._on(\"find\", webViewerFind);\n    eventBus._on(\"findfromurlhash\", webViewerFindFromUrlHash);\n    eventBus._on(\"updatefindmatchescount\", webViewerUpdateFindMatchesCount);\n    eventBus._on(\"updatefindcontrolstate\", webViewerUpdateFindControlState);\n    if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) {\n      eventBus._on(\"fileinputchange\", webViewerFileInputChange);\n      eventBus._on(\"openfile\", webViewerOpenFile);\n    }\n  },\n\n  bindWindowEvents() {\n    const { eventBus, _boundEvents } = this;\n\n    _boundEvents.windowResize = () => {\n      eventBus.dispatch(\"resize\", { source: window });\n    };\n    _boundEvents.windowHashChange = () => {\n      eventBus.dispatch(\"hashchange\", {\n        source: window,\n        hash: document.location.hash.substring(1),\n      });\n    };\n    _boundEvents.windowBeforePrint = () => {\n      eventBus.dispatch(\"beforeprint\", { source: window });\n    };\n    _boundEvents.windowAfterPrint = () => {\n      eventBus.dispatch(\"afterprint\", { source: window });\n    };\n\n    window.addEventListener(\"visibilitychange\", webViewerVisibilityChange);\n    window.addEventListener(\"wheel\", webViewerWheel, { passive: false });\n    window.addEventListener(\"click\", webViewerClick);\n    window.addEventListener(\"keydown\", webViewerKeyDown);\n    window.addEventListener(\"resize\", _boundEvents.windowResize);\n    window.addEventListener(\"hashchange\", _boundEvents.windowHashChange);\n    window.addEventListener(\"beforeprint\", _boundEvents.windowBeforePrint);\n    window.addEventListener(\"afterprint\", _boundEvents.windowAfterPrint);\n  },\n\n  unbindEvents() {\n    const { eventBus, _boundEvents } = this;\n\n    eventBus._off(\"resize\", webViewerResize);\n    eventBus._off(\"hashchange\", webViewerHashchange);\n    eventBus._off(\"beforeprint\", _boundEvents.beforePrint);\n    eventBus._off(\"afterprint\", _boundEvents.afterPrint);\n    eventBus._off(\"pagerendered\", webViewerPageRendered);\n    eventBus._off(\"updateviewarea\", webViewerUpdateViewarea);\n    eventBus._off(\"pagechanging\", webViewerPageChanging);\n    eventBus._off(\"scalechanging\", webViewerScaleChanging);\n    eventBus._off(\"rotationchanging\", webViewerRotationChanging);\n    eventBus._off(\"sidebarviewchanged\", webViewerSidebarViewChanged);\n    eventBus._off(\"pagemode\", webViewerPageMode);\n    eventBus._off(\"namedaction\", webViewerNamedAction);\n    eventBus._off(\"presentationmodechanged\", webViewerPresentationModeChanged);\n    eventBus._off(\"presentationmode\", webViewerPresentationMode);\n    eventBus._off(\"print\", webViewerPrint);\n    eventBus._off(\"download\", webViewerDownload);\n    eventBus._off(\"firstpage\", webViewerFirstPage);\n    eventBus._off(\"lastpage\", webViewerLastPage);\n    eventBus._off(\"nextpage\", webViewerNextPage);\n    eventBus._off(\"previouspage\", webViewerPreviousPage);\n    eventBus._off(\"zoomin\", webViewerZoomIn);\n    eventBus._off(\"zoomout\", webViewerZoomOut);\n    eventBus._off(\"zoomreset\", webViewerZoomReset);\n    eventBus._off(\"pagenumberchanged\", webViewerPageNumberChanged);\n    eventBus._off(\"scalechanged\", webViewerScaleChanged);\n    eventBus._off(\"rotatecw\", webViewerRotateCw);\n    eventBus._off(\"rotateccw\", webViewerRotateCcw);\n    eventBus._off(\"switchscrollmode\", webViewerSwitchScrollMode);\n    eventBus._off(\"scrollmodechanged\", webViewerScrollModeChanged);\n    eventBus._off(\"switchspreadmode\", webViewerSwitchSpreadMode);\n    eventBus._off(\"spreadmodechanged\", webViewerSpreadModeChanged);\n    eventBus._off(\"documentproperties\", webViewerDocumentProperties);\n    eventBus._off(\"find\", webViewerFind);\n    eventBus._off(\"findfromurlhash\", webViewerFindFromUrlHash);\n    eventBus._off(\"updatefindmatchescount\", webViewerUpdateFindMatchesCount);\n    eventBus._off(\"updatefindcontrolstate\", webViewerUpdateFindControlState);\n    if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) {\n      eventBus._off(\"fileinputchange\", webViewerFileInputChange);\n      eventBus._off(\"openfile\", webViewerOpenFile);\n    }\n\n    _boundEvents.beforePrint = null;\n    _boundEvents.afterPrint = null;\n  },\n\n  unbindWindowEvents() {\n    const { _boundEvents } = this;\n\n    window.removeEventListener(\"visibilitychange\", webViewerVisibilityChange);\n    window.removeEventListener(\"wheel\", webViewerWheel, { passive: false });\n    window.removeEventListener(\"click\", webViewerClick);\n    window.removeEventListener(\"keydown\", webViewerKeyDown);\n    window.removeEventListener(\"resize\", _boundEvents.windowResize);\n    window.removeEventListener(\"hashchange\", _boundEvents.windowHashChange);\n    window.removeEventListener(\"beforeprint\", _boundEvents.windowBeforePrint);\n    window.removeEventListener(\"afterprint\", _boundEvents.windowAfterPrint);\n\n    _boundEvents.windowResize = null;\n    _boundEvents.windowHashChange = null;\n    _boundEvents.windowBeforePrint = null;\n    _boundEvents.windowAfterPrint = null;\n  },\n};\n\nlet validateFileURL;\nif (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) {\n  const HOSTED_VIEWER_ORIGINS = [\n    \"null\",\n    \"http://mozilla.github.io\",\n    \"https://mozilla.github.io\",\n  ];\n  validateFileURL = function (file) {\n    if (file === undefined) {\n      return;\n    }\n    try {\n      const viewerOrigin = new URL(window.location.href).origin || \"null\";\n      if (HOSTED_VIEWER_ORIGINS.includes(viewerOrigin)) {\n        // Hosted or local viewer, allow for any file locations\n        return;\n      }\n      const { origin, protocol } = new URL(file, window.location.href);\n      // Removing of the following line will not guarantee that the viewer will\n      // start accepting URLs from foreign origin -- CORS headers on the remote\n      // server must be properly configured.\n      // IE10 / IE11 does not include an origin in `blob:`-URLs. So don't block\n      // any blob:-URL. The browser's same-origin policy will block requests to\n      // blob:-URLs from other origins, so this is safe.\n      if (origin !== viewerOrigin && protocol !== \"blob:\") {\n        throw new Error(\"file origin does not match viewer's\");\n      }\n    } catch (ex) {\n      const message = ex && ex.message;\n      PDFViewerApplication.l10n\n        .get(\"loading_error\", null, \"An error occurred while loading the PDF.\")\n        .then(loadingErrorMessage => {\n          PDFViewerApplication.error(loadingErrorMessage, { message });\n        });\n      throw ex;\n    }\n  };\n}\n\nasync function loadFakeWorker() {\n  if (!GlobalWorkerOptions.workerSrc) {\n    GlobalWorkerOptions.workerSrc = AppOptions.get(\"workerSrc\");\n  }\n  if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"PRODUCTION\")) {\n    if (typeof SystemJS !== \"object\") {\n      throw new Error(\"SystemJS must be used to load fake worker.\");\n    }\n    window.pdfjsWorker = await SystemJS.import(\"pdfjs/core/worker.js\");\n    return undefined;\n  }\n  return loadScript(PDFWorker.getWorkerSrc());\n}\n\nfunction loadAndEnablePDFBug(enabledTabs) {\n  const appConfig = PDFViewerApplication.appConfig;\n  return loadScript(appConfig.debuggerScriptPath).then(function () {\n    PDFBug.enable(enabledTabs);\n    PDFBug.init({ OPS }, appConfig.mainContainer);\n  });\n}\n\nfunction webViewerInitialized() {\n  const appConfig = PDFViewerApplication.appConfig;\n  let file;\n  if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) {\n    const queryString = document.location.search.substring(1);\n    const params = parseQueryString(queryString);\n    file = \"file\" in params ? params.file : AppOptions.get(\"defaultUrl\");\n    validateFileURL(file);\n  } else if (PDFJSDev.test(\"MOZCENTRAL\")) {\n    file = window.location.href.split(\"#\")[0];\n  } else if (PDFJSDev.test(\"CHROME\")) {\n    file = AppOptions.get(\"defaultUrl\");\n  }\n\n  if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) {\n    const fileInput = document.createElement(\"input\");\n    fileInput.id = appConfig.openFileInputName;\n    fileInput.className = \"fileInput\";\n    fileInput.setAttribute(\"type\", \"file\");\n    fileInput.oncontextmenu = noContextMenuHandler;\n    fileInput.style = \"visibility: hidden\";\n    document.body.appendChild(fileInput);\n\n    if (\n      !window.File ||\n      !window.FileReader ||\n      !window.FileList ||\n      !window.Blob\n    ) {\n      // appConfig.toolbar.openFile.setAttribute(\"hidden\", \"true\");\n      // appConfig.secondaryToolbar.openFileButton.setAttribute(\"hidden\", \"true\");\n    } else {\n      fileInput.value = null;\n    }\n\n    fileInput.addEventListener(\"change\", function (evt) {\n      const files = evt.target.files;\n      if (!files || files.length === 0) {\n        return;\n      }\n      PDFViewerApplication.eventBus.dispatch(\"fileinputchange\", {\n        source: this,\n        fileInput: evt.target,\n      });\n    });\n\n    // Enable dragging-and-dropping a new PDF file onto the viewerContainer.\n    appConfig.mainContainer.addEventListener(\"dragover\", function (evt) {\n      evt.preventDefault();\n\n      evt.dataTransfer.dropEffect = \"move\";\n    });\n    appConfig.mainContainer.addEventListener(\"drop\", function (evt) {\n      evt.preventDefault();\n\n      const files = evt.dataTransfer.files;\n      if (!files || files.length === 0) {\n        return;\n      }\n      PDFViewerApplication.eventBus.dispatch(\"fileinputchange\", {\n        source: this,\n        fileInput: evt.dataTransfer,\n      });\n    });\n  } else {\n    // appConfig.toolbar.openFile.setAttribute(\"hidden\", \"true\");\n    // appConfig.secondaryToolbar.openFileButton.setAttribute(\"hidden\", \"true\");\n  }\n\n  if (\n    (typeof PDFJSDev === \"undefined\" ||\n      PDFJSDev.test(\"MOZCENTRAL || GENERIC\")) &&\n    !PDFViewerApplication.supportsDocumentFonts\n  ) {\n    AppOptions.set(\"disableFontFace\", true);\n    PDFViewerApplication.l10n\n      .get(\n        \"web_fonts_disabled\",\n        null,\n        \"Web fonts are disabled: unable to use embedded PDF fonts.\"\n      )\n      .then(msg => {\n        console.warn(msg);\n      });\n  }\n\n  if (!PDFViewerApplication.supportsPrinting) {\n    // appConfig.toolbar.print.classList.add(\"hidden\");\n    // appConfig.secondaryToolbar.printButton.classList.add(\"hidden\");\n  }\n\n  if (!PDFViewerApplication.supportsFullscreen) {\n    // appConfig.toolbar.presentationModeButton.classList.add(\"hidden\");\n    // appConfig.secondaryToolbar.presentationModeButton.classList.add(\"hidden\");\n  }\n\n  if (PDFViewerApplication.supportsIntegratedFind) {\n    // appConfig.toolbar.viewFind.classList.add(\"hidden\");\n  }\n\n  appConfig.mainContainer.addEventListener(\n    \"transitionend\",\n    function (evt) {\n      if (evt.target === /* mainContainer */ this) {\n        PDFViewerApplication.eventBus.dispatch(\"resize\", { source: this });\n      }\n    },\n    true\n  );\n\n  try {\n    webViewerOpenFileViaURL(file);\n  } catch (reason) {\n    PDFViewerApplication.l10n\n      .get(\"loading_error\", null, \"An error occurred while loading the PDF.\")\n      .then(msg => {\n        PDFViewerApplication.error(msg, reason);\n      });\n  }\n}\n\nlet webViewerOpenFileViaURL;\nif (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) {\n  webViewerOpenFileViaURL = function (file) {\n    if (file && file.lastIndexOf(\"file:\", 0) === 0) {\n      // file:-scheme. Load the contents in the main thread because QtWebKit\n      // cannot load file:-URLs in a Web Worker. file:-URLs are usually loaded\n      // very quickly, so there is no need to set up progress event listeners.\n      PDFViewerApplication.setTitleUsingUrl(file);\n      const xhr = new XMLHttpRequest();\n      xhr.onload = function () {\n        PDFViewerApplication.open(new Uint8Array(xhr.response));\n      };\n      xhr.open(\"GET\", file);\n      xhr.responseType = \"arraybuffer\";\n      xhr.send();\n      return;\n    }\n\n    if (file) {\n      PDFViewerApplication.open(file);\n    }\n  };\n} else if (PDFJSDev.test(\"MOZCENTRAL || CHROME\")) {\n  webViewerOpenFileViaURL = function (file) {\n    PDFViewerApplication.setTitleUsingUrl(file);\n    PDFViewerApplication.initPassiveLoading();\n  };\n} else {\n  webViewerOpenFileViaURL = function (file) {\n    if (file) {\n      throw new Error(\"Not implemented: webViewerOpenFileViaURL\");\n    }\n  };\n}\n\nfunction webViewerResetPermissions() {\n  const { appConfig } = PDFViewerApplication;\n  if (!appConfig) {\n    return;\n  }\n  // Currently only the \"copy\"-permission is supported.\n  appConfig.viewerContainer.classList.remove(ENABLE_PERMISSIONS_CLASS);\n}\n\nfunction webViewerPageRendered(evt) {\n  const pageNumber = evt.pageNumber;\n  const pageIndex = pageNumber - 1;\n  const pageView = PDFViewerApplication.pdfViewer.getPageView(pageIndex);\n\n  // If the page is still visible when it has finished rendering,\n  // ensure that the page number input loading indicator is hidden.\n  if (pageNumber === PDFViewerApplication.page) {\n    // PDFViewerApplication.toolbar.updateLoadingIndicatorState(false);\n  }\n\n  // Prevent errors in the edge-case where the PDF document is removed *before*\n  // the 'pagerendered' event handler is invoked.\n  if (!pageView) {\n    return;\n  }\n\n  // Use the rendered page to set the corresponding thumbnail image.\n  // if (PDFViewerApplication.pdfSidebar.isThumbnailViewVisible) {\n  //   const thumbnailView = PDFViewerApplication.pdfThumbnailViewer.getThumbnail(\n  //     pageIndex\n  //   );\n  //   thumbnailView.setImage(pageView);\n  // }\n\n  if (typeof Stats !== \"undefined\" && Stats.enabled && pageView.stats) {\n    Stats.add(pageNumber, pageView.stats);\n  }\n\n  if (pageView.error) {\n    PDFViewerApplication.l10n\n      .get(\n        \"rendering_error\",\n        null,\n        \"An error occurred while rendering the page.\"\n      )\n      .then(msg => {\n        PDFViewerApplication.error(msg, pageView.error);\n      });\n  }\n\n  if (\n    typeof PDFJSDev === \"undefined\" ||\n    PDFJSDev.test(\"MOZCENTRAL || GENERIC\")\n  ) {\n    PDFViewerApplication.externalServices.reportTelemetry({\n      type: \"pageInfo\",\n      timestamp: evt.timestamp,\n    });\n    // It is a good time to report stream and font types.\n    PDFViewerApplication.pdfDocument.getStats().then(function (stats) {\n      PDFViewerApplication.externalServices.reportTelemetry({\n        type: \"documentStats\",\n        stats,\n      });\n    });\n  }\n}\n\nfunction webViewerPageMode({ mode }) {\n  // Handle the 'pagemode' hash parameter, see also `PDFLinkService_setHash`.\n  let view;\n  switch (mode) {\n    case \"thumbs\":\n      view = SidebarView.THUMBS;\n      break;\n    case \"bookmarks\":\n    case \"outline\":\n      view = SidebarView.OUTLINE;\n      break;\n    case \"attachments\":\n      view = SidebarView.ATTACHMENTS;\n      break;\n    case \"none\":\n      view = SidebarView.NONE;\n      break;\n    default:\n      console.error('Invalid \"pagemode\" hash parameter: ' + mode);\n      return;\n  }\n  // PDFViewerApplication.pdfSidebar.switchView(view, /* forceOpen = */ true);\n}\n\nfunction webViewerNamedAction(evt) {\n  // Processing couple of named actions that might be useful.\n  // See also PDFLinkService.executeNamedAction\n  const action = evt.action;\n  switch (action) {\n    case \"GoToPage\":\n      // PDFViewerApplication.appConfig.toolbar.pageNumber.select();\n      break;\n\n    case \"Find\":\n      if (!PDFViewerApplication.supportsIntegratedFind) {\n        // PDFViewerApplication.findBar.toggle();\n      }\n      break;\n  }\n}\n\nfunction webViewerPresentationModeChanged({ active, switchInProgress }) {\n  let state = PresentationModeState.NORMAL;\n  if (switchInProgress) {\n    state = PresentationModeState.CHANGING;\n  } else if (active) {\n    state = PresentationModeState.FULLSCREEN;\n  }\n  PDFViewerApplication.pdfViewer.presentationModeState = state;\n}\n\nfunction webViewerSidebarViewChanged(evt) {\n  // PDFViewerApplication.pdfRenderingQueue.isThumbnailViewEnabled =\n  //   PDFViewerApplication.pdfSidebar.isThumbnailViewVisible;\n\n  const store = PDFViewerApplication.store;\n  if (store && PDFViewerApplication.isInitialViewSet) {\n    // Only update the storage when the document has been loaded *and* rendered.\n    store.set(\"sidebarView\", evt.view).catch(function () {});\n  }\n}\n\nfunction webViewerUpdateViewarea(evt) {\n  const location = evt.location,\n    store = PDFViewerApplication.store;\n\n  if (store && PDFViewerApplication.isInitialViewSet) {\n    store\n      .setMultiple({\n        page: location.pageNumber,\n        zoom: location.scale,\n        scrollLeft: location.left,\n        scrollTop: location.top,\n        rotation: location.rotation,\n      })\n      .catch(function () {\n        /* unable to write to storage */\n      });\n  }\n  const href = PDFViewerApplication.pdfLinkService.getAnchorUrl(\n    location.pdfOpenParams\n  );\n  // PDFViewerApplication.appConfig.toolbar.viewBookmark.href = href;\n  // PDFViewerApplication.appConfig.secondaryToolbar.viewBookmarkButton.href = href;\n\n  // Show/hide the loading indicator in the page number input element.\n  const currentPage = PDFViewerApplication.pdfViewer.getPageView(\n    PDFViewerApplication.page - 1\n  );\n  const loading = currentPage.renderingState !== RenderingStates.FINISHED;\n  // PDFViewerApplication.toolbar.updateLoadingIndicatorState(loading);\n}\n\nfunction webViewerScrollModeChanged(evt) {\n  const store = PDFViewerApplication.store;\n  if (store && PDFViewerApplication.isInitialViewSet) {\n    // Only update the storage when the document has been loaded *and* rendered.\n    store.set(\"scrollMode\", evt.mode).catch(function () {});\n  }\n}\n\nfunction webViewerSpreadModeChanged(evt) {\n  const store = PDFViewerApplication.store;\n  if (store && PDFViewerApplication.isInitialViewSet) {\n    // Only update the storage when the document has been loaded *and* rendered.\n    store.set(\"spreadMode\", evt.mode).catch(function () {});\n  }\n}\n\nfunction webViewerResize() {\n  const { pdfDocument, pdfViewer } = PDFViewerApplication;\n  if (!pdfDocument) {\n    return;\n  }\n  const currentScaleValue = pdfViewer.currentScaleValue;\n  if (\n    currentScaleValue === \"auto\" ||\n    currentScaleValue === \"page-fit\" ||\n    currentScaleValue === \"page-width\"\n  ) {\n    // Note: the scale is constant for 'page-actual'.\n    pdfViewer.currentScaleValue = currentScaleValue;\n  }\n  pdfViewer.update();\n}\n\nfunction webViewerHashchange(evt) {\n  const hash = evt.hash;\n  if (!hash) {\n    return;\n  }\n  if (!PDFViewerApplication.isInitialViewSet) {\n    PDFViewerApplication.initialBookmark = hash;\n  } else if (!PDFViewerApplication.pdfHistory.popStateInProgress) {\n    PDFViewerApplication.pdfLinkService.setHash(hash);\n  }\n}\n\nlet webViewerFileInputChange, webViewerOpenFile;\nif (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) {\n  webViewerFileInputChange = function (evt) {\n    if (\n      PDFViewerApplication.pdfViewer &&\n      PDFViewerApplication.pdfViewer.isInPresentationMode\n    ) {\n      return; // Opening a new PDF file isn't supported in Presentation Mode.\n    }\n    const file = evt.fileInput.files[0];\n\n    if (URL.createObjectURL && !AppOptions.get(\"disableCreateObjectURL\")) {\n      let url = URL.createObjectURL(file);\n      if (file.name) {\n        url = { url, originalUrl: file.name };\n      }\n      PDFViewerApplication.open(url);\n    } else {\n      PDFViewerApplication.setTitleUsingUrl(file.name);\n      // Read the local file into a Uint8Array.\n      const fileReader = new FileReader();\n      fileReader.onload = function webViewerChangeFileReaderOnload(event) {\n        const buffer = event.target.result;\n        PDFViewerApplication.open(new Uint8Array(buffer));\n      };\n      fileReader.readAsArrayBuffer(file);\n    }\n\n    // URL does not reflect proper document location - hiding some icons.\n    const appConfig = PDFViewerApplication.appConfig;\n    // appConfig.toolbar.viewBookmark.setAttribute(\"hidden\", \"true\");\n    // appConfig.secondaryToolbar.viewBookmarkButton.setAttribute(\n    //   \"hidden\",\n    //   \"true\"\n    // );\n    // appConfig.toolbar.download.setAttribute(\"hidden\", \"true\");\n    // appConfig.secondaryToolbar.downloadButton.setAttribute(\"hidden\", \"true\");\n  };\n\n  webViewerOpenFile = function (evt) {\n    const openFileInputName = PDFViewerApplication.appConfig.openFileInputName;\n    document.getElementById(openFileInputName).click();\n  };\n}\n\nfunction webViewerPresentationMode() {\n  PDFViewerApplication.requestPresentationMode();\n}\nfunction webViewerPrint() {\n  window.print();\n}\nfunction webViewerDownload() {\n  PDFViewerApplication.download();\n}\nfunction webViewerFirstPage() {\n  if (PDFViewerApplication.pdfDocument) {\n    PDFViewerApplication.page = 1;\n  }\n}\nfunction webViewerLastPage() {\n  if (PDFViewerApplication.pdfDocument) {\n    PDFViewerApplication.page = PDFViewerApplication.pagesCount;\n  }\n}\nfunction webViewerNextPage() {\n  PDFViewerApplication.page++;\n}\nfunction webViewerPreviousPage() {\n  PDFViewerApplication.page--;\n}\nfunction webViewerZoomIn() {\n  PDFViewerApplication.zoomIn();\n}\nfunction webViewerZoomOut() {\n  PDFViewerApplication.zoomOut();\n}\nfunction webViewerZoomReset() {\n  PDFViewerApplication.zoomReset();\n}\nfunction webViewerPageNumberChanged(evt) {\n  const pdfViewer = PDFViewerApplication.pdfViewer;\n  // Note that for `<input type=\"number\">` HTML elements, an empty string will\n  // be returned for non-number inputs; hence we simply do nothing in that case.\n  if (evt.value !== \"\") {\n    pdfViewer.currentPageLabel = evt.value;\n  }\n\n  // Ensure that the page number input displays the correct value, even if the\n  // value entered by the user was invalid (e.g. a floating point number).\n  if (\n    evt.value !== pdfViewer.currentPageNumber.toString() &&\n    evt.value !== pdfViewer.currentPageLabel\n  ) {\n    // PDFViewerApplication.toolbar.setPageNumber(\n    //   pdfViewer.currentPageNumber,\n    //   pdfViewer.currentPageLabel\n    // );\n  }\n}\nfunction webViewerScaleChanged(evt) {\n  PDFViewerApplication.pdfViewer.currentScaleValue = evt.value;\n}\nfunction webViewerRotateCw() {\n  PDFViewerApplication.rotatePages(90);\n}\nfunction webViewerRotateCcw() {\n  PDFViewerApplication.rotatePages(-90);\n}\nfunction webViewerSwitchScrollMode(evt) {\n  PDFViewerApplication.pdfViewer.scrollMode = evt.mode;\n}\nfunction webViewerSwitchSpreadMode(evt) {\n  PDFViewerApplication.pdfViewer.spreadMode = evt.mode;\n}\nfunction webViewerDocumentProperties() {\n  // PDFViewerApplication.pdfDocumentProperties.open();\n}\n\nfunction webViewerFind(evt) {\n  PDFViewerApplication.findController.executeCommand(\"find\" + evt.type, {\n    query: evt.query,\n    phraseSearch: evt.phraseSearch,\n    caseSensitive: evt.caseSensitive,\n    entireWord: evt.entireWord,\n    highlightAll: evt.highlightAll,\n    findPrevious: evt.findPrevious,\n  });\n}\n\nfunction webViewerFindFromUrlHash(evt) {\n  PDFViewerApplication.findController.executeCommand(\"find\", {\n    query: evt.query,\n    phraseSearch: evt.phraseSearch,\n    caseSensitive: false,\n    entireWord: false,\n    highlightAll: true,\n    findPrevious: false,\n  });\n}\n\nfunction webViewerUpdateFindMatchesCount({ matchesCount }) {\n  store.dispatch(\"updateFindNumberAndResults\", matchesCount);\n}\n\nfunction webViewerUpdateFindControlState({ state, previous, matchesCount }) {\n  store.dispatch(\"updateFindNumberAndResults\", matchesCount);\n\n  // if (PDFViewerApplication.supportsIntegratedFind) {\n  //   PDFViewerApplication.externalServices.updateFindControlState({\n  //     result: state,\n  //     findPrevious: previous,\n  //     matchesCount,\n  //   });\n  // } else {\n    // PDFViewerApplication.findBar.updateUIState(state, previous, matchesCount);\n  // }\n}\n\nfunction webViewerScaleChanging(evt) {\n  // PDFViewerApplication.toolbar.setPageScale(evt.presetValue, evt.scale);\n\n  PDFViewerApplication.pdfViewer.update();\n}\n\nfunction webViewerRotationChanging(evt) {\n  // PDFViewerApplication.pdfThumbnailViewer.pagesRotation = evt.pagesRotation;\n\n  PDFViewerApplication.forceRendering();\n  // Ensure that the active page doesn't change during rotation.\n  PDFViewerApplication.pdfViewer.currentPageNumber = evt.pageNumber;\n}\n\nfunction webViewerPageChanging(evt) {\n  const page = evt.pageNumber;\n\n  store.dispatch(\"updatePageNumberPageLabel\", {\n    pageNumber: page,\n    pageLabel: evt.pageLabel\n  });\n  // PDFViewerApplication.secondaryToolbar.setPageNumber(page);\n\n  // if (PDFViewerApplication.pdfSidebar.isThumbnailViewVisible) {\n  //   PDFViewerApplication.pdfThumbnailViewer.scrollThumbnailIntoView(page);\n  // }\n\n  // We need to update stats.\n  if (typeof Stats !== \"undefined\" && Stats.enabled) {\n    const pageView = PDFViewerApplication.pdfViewer.getPageView(page - 1);\n    if (pageView && pageView.stats) {\n      Stats.add(page, pageView.stats);\n    }\n  }\n}\n\nfunction webViewerVisibilityChange(evt) {\n  if (document.visibilityState === \"visible\") {\n    // Ignore mouse wheel zooming during tab switches (bug 1503412).\n    setZoomDisabledTimeout();\n  }\n}\n\nlet zoomDisabledTimeout = null;\nfunction setZoomDisabledTimeout() {\n  if (zoomDisabledTimeout) {\n    clearTimeout(zoomDisabledTimeout);\n  }\n  zoomDisabledTimeout = setTimeout(function () {\n    zoomDisabledTimeout = null;\n  }, WHEEL_ZOOM_DISABLED_TIMEOUT);\n}\n\nfunction webViewerWheel(evt) {\n  const {\n    pdfViewer,\n    supportedMouseWheelZoomModifierKeys,\n  } = PDFViewerApplication;\n\n  if (pdfViewer.isInPresentationMode) {\n    return;\n  }\n\n  if (\n    (evt.ctrlKey && supportedMouseWheelZoomModifierKeys.ctrlKey) ||\n    (evt.metaKey && supportedMouseWheelZoomModifierKeys.metaKey)\n  ) {\n    // Only zoom the pages, not the entire viewer.\n    evt.preventDefault();\n    // NOTE: this check must be placed *after* preventDefault.\n    if (zoomDisabledTimeout || document.visibilityState === \"hidden\") {\n      return;\n    }\n\n    const previousScale = pdfViewer.currentScale;\n\n    const delta = normalizeWheelEventDelta(evt);\n\n    const MOUSE_WHEEL_DELTA_PER_PAGE_SCALE = 3.0;\n    const ticks = delta * MOUSE_WHEEL_DELTA_PER_PAGE_SCALE;\n    if (ticks < 0) {\n      PDFViewerApplication.zoomOut(-ticks);\n    } else {\n      PDFViewerApplication.zoomIn(ticks);\n    }\n\n    const currentScale = pdfViewer.currentScale;\n    if (previousScale !== currentScale) {\n      // After scaling the page via zoomIn/zoomOut, the position of the upper-\n      // left corner is restored. When the mouse wheel is used, the position\n      // under the cursor should be restored instead.\n      const scaleCorrectionFactor = currentScale / previousScale - 1;\n      const rect = pdfViewer.container.getBoundingClientRect();\n      const dx = evt.clientX - rect.left;\n      const dy = evt.clientY - rect.top;\n      pdfViewer.container.scrollLeft += dx * scaleCorrectionFactor;\n      pdfViewer.container.scrollTop += dy * scaleCorrectionFactor;\n    }\n  } else {\n    setZoomDisabledTimeout();\n  }\n}\n\nfunction webViewerClick(evt) {\n  // if (!PDFViewerApplication.secondaryToolbar.isOpen) {\n  //   return;\n  // }\n  const appConfig = PDFViewerApplication.appConfig;\n  if (\n    PDFViewerApplication.pdfViewer.containsElement(evt.target)\n      // || (appConfig.toolbar.container.contains(evt.target)\n      //   && evt.target !== appConfig.secondaryToolbar.toggleButton\n      //   )\n  ) {\n    // PDFViewerApplication.secondaryToolbar.close();\n  }\n}\n\nfunction webViewerKeyDown(evt) {\n  // if (PDFViewerApplication.overlayManager.active) {\n  //   return;\n  // }\n\n  let handled = false,\n    ensureViewerFocused = false;\n  const cmd =\n    (evt.ctrlKey ? 1 : 0) |\n    (evt.altKey ? 2 : 0) |\n    (evt.shiftKey ? 4 : 0) |\n    (evt.metaKey ? 8 : 0);\n\n  const pdfViewer = PDFViewerApplication.pdfViewer;\n  const isViewerInPresentationMode =\n    pdfViewer && pdfViewer.isInPresentationMode;\n\n  // First, handle the key bindings that are independent whether an input\n  // control is selected or not.\n  if (cmd === 1 || cmd === 8 || cmd === 5 || cmd === 12) {\n    // either CTRL or META key with optional SHIFT.\n    switch (evt.keyCode) {\n      case 70: // f\n        if (!PDFViewerApplication.supportsIntegratedFind) {\n          // PDFViewerApplication.findBar.open();\n          handled = true;\n        }\n        break;\n      case 71: // g\n        if (!PDFViewerApplication.supportsIntegratedFind) {\n          const findState = PDFViewerApplication.findController.state;\n          if (findState) {\n            PDFViewerApplication.findController.executeCommand(\"findagain\", {\n              query: findState.query,\n              phraseSearch: findState.phraseSearch,\n              caseSensitive: findState.caseSensitive,\n              entireWord: findState.entireWord,\n              highlightAll: findState.highlightAll,\n              findPrevious: cmd === 5 || cmd === 12,\n            });\n          }\n          handled = true;\n        }\n        break;\n      case 61: // FF/Mac '='\n      case 107: // FF '+' and '='\n      case 187: // Chrome '+'\n      case 171: // FF with German keyboard\n        if (!isViewerInPresentationMode) {\n          PDFViewerApplication.zoomIn();\n        }\n        handled = true;\n        break;\n      case 173: // FF/Mac '-'\n      case 109: // FF '-'\n      case 189: // Chrome '-'\n        if (!isViewerInPresentationMode) {\n          PDFViewerApplication.zoomOut();\n        }\n        handled = true;\n        break;\n      case 48: // '0'\n      case 96: // '0' on Numpad of Swedish keyboard\n        if (!isViewerInPresentationMode) {\n          // keeping it unhandled (to restore page zoom to 100%)\n          setTimeout(function () {\n            // ... and resetting the scale after browser adjusts its scale\n            PDFViewerApplication.zoomReset();\n          });\n          handled = false;\n        }\n        break;\n\n      case 38: // up arrow\n        if (isViewerInPresentationMode || PDFViewerApplication.page > 1) {\n          PDFViewerApplication.page = 1;\n          handled = true;\n          ensureViewerFocused = true;\n        }\n        break;\n      case 40: // down arrow\n        if (\n          isViewerInPresentationMode ||\n          PDFViewerApplication.page < PDFViewerApplication.pagesCount\n        ) {\n          PDFViewerApplication.page = PDFViewerApplication.pagesCount;\n          handled = true;\n          ensureViewerFocused = true;\n        }\n        break;\n    }\n  }\n\n  if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC || CHROME\")) {\n    const { eventBus } = PDFViewerApplication;\n\n    // CTRL or META without shift\n    if (cmd === 1 || cmd === 8) {\n      switch (evt.keyCode) {\n        case 83: // s\n          eventBus.dispatch(\"download\", { source: window });\n          handled = true;\n          break;\n\n        case 79: // o\n          if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) {\n            eventBus.dispatch(\"openfile\", { source: window });\n            handled = true;\n          }\n          break;\n      }\n    }\n  }\n\n  // CTRL+ALT or Option+Command\n  if (cmd === 3 || cmd === 10) {\n    switch (evt.keyCode) {\n      case 80: // p\n        PDFViewerApplication.requestPresentationMode();\n        handled = true;\n        break;\n      case 71: // g\n        // focuses input#pageNumber field\n        // PDFViewerApplication.appConfig.toolbar.pageNumber.select();\n        handled = true;\n        break;\n    }\n  }\n\n  if (handled) {\n    if (ensureViewerFocused && !isViewerInPresentationMode) {\n      pdfViewer.focus();\n    }\n    evt.preventDefault();\n    return;\n  }\n\n  // Some shortcuts should not get handled if a control/input element\n  // is selected.\n  const curElement = document.activeElement || document.querySelector(\":focus\");\n  const curElementTagName = curElement && curElement.tagName.toUpperCase();\n  if (\n    curElementTagName === \"INPUT\" ||\n    curElementTagName === \"TEXTAREA\" ||\n    curElementTagName === \"SELECT\" ||\n    (curElement && curElement.isContentEditable)\n  ) {\n    // Make sure that the secondary toolbar is closed when Escape is pressed.\n    if (evt.keyCode !== /* Esc = */ 27) {\n      return;\n    }\n  }\n\n  // No control key pressed at all.\n  if (cmd === 0) {\n    let turnPage = 0,\n      turnOnlyIfPageFit = false;\n    switch (evt.keyCode) {\n      case 38: // up arrow\n      case 33: // pg up\n        // vertical scrolling using arrow/pg keys\n        if (pdfViewer.isVerticalScrollbarEnabled) {\n          turnOnlyIfPageFit = true;\n        }\n        turnPage = -1;\n        break;\n      case 8: // backspace\n        if (!isViewerInPresentationMode) {\n          turnOnlyIfPageFit = true;\n        }\n        turnPage = -1;\n        break;\n      case 37: // left arrow\n        // horizontal scrolling using arrow keys\n        if (pdfViewer.isHorizontalScrollbarEnabled) {\n          turnOnlyIfPageFit = true;\n        }\n      /* falls through */\n      case 75: // 'k'\n      case 80: // 'p'\n        turnPage = -1;\n        break;\n      case 27: // esc key\n        // if (PDFViewerApplication.secondaryToolbar.isOpen) {\n        //   PDFViewerApplication.secondaryToolbar.close();\n        //   handled = true;\n        // }\n        if (\n          !PDFViewerApplication.supportsIntegratedFind\n          // && PDFViewerApplication.findBar.opened\n        ) {\n          // PDFViewerApplication.findBar.close();\n          handled = true;\n        }\n        break;\n      case 40: // down arrow\n      case 34: // pg down\n        // vertical scrolling using arrow/pg keys\n        if (pdfViewer.isVerticalScrollbarEnabled) {\n          turnOnlyIfPageFit = true;\n        }\n        turnPage = 1;\n        break;\n      case 13: // enter key\n      case 32: // spacebar\n        if (!isViewerInPresentationMode) {\n          turnOnlyIfPageFit = true;\n        }\n        turnPage = 1;\n        break;\n      case 39: // right arrow\n        // horizontal scrolling using arrow keys\n        if (pdfViewer.isHorizontalScrollbarEnabled) {\n          turnOnlyIfPageFit = true;\n        }\n      /* falls through */\n      case 74: // 'j'\n      case 78: // 'n'\n        turnPage = 1;\n        break;\n\n      case 36: // home\n        if (isViewerInPresentationMode || PDFViewerApplication.page > 1) {\n          PDFViewerApplication.page = 1;\n          handled = true;\n          ensureViewerFocused = true;\n        }\n        break;\n      case 35: // end\n        if (\n          isViewerInPresentationMode ||\n          PDFViewerApplication.page < PDFViewerApplication.pagesCount\n        ) {\n          PDFViewerApplication.page = PDFViewerApplication.pagesCount;\n          handled = true;\n          ensureViewerFocused = true;\n        }\n        break;\n\n      case 83: // 's'\n        PDFViewerApplication.pdfCursorTools.switchTool(CursorTool.SELECT);\n        break;\n      case 72: // 'h'\n        PDFViewerApplication.pdfCursorTools.switchTool(CursorTool.HAND);\n        break;\n\n      case 82: // 'r'\n        PDFViewerApplication.rotatePages(90);\n        break;\n\n      case 115: // F4\n        // PDFViewerApplication.pdfSidebar.toggle();\n        break;\n    }\n\n    if (\n      turnPage !== 0 &&\n      (!turnOnlyIfPageFit || pdfViewer.currentScaleValue === \"page-fit\")\n    ) {\n      if (turnPage > 0) {\n        if (PDFViewerApplication.page < PDFViewerApplication.pagesCount) {\n          PDFViewerApplication.page++;\n        }\n      } else {\n        if (PDFViewerApplication.page > 1) {\n          PDFViewerApplication.page--;\n        }\n      }\n      handled = true;\n    }\n  }\n\n  // shift-key\n  if (cmd === 4) {\n    switch (evt.keyCode) {\n      case 13: // enter key\n      case 32: // spacebar\n        if (\n          !isViewerInPresentationMode &&\n          pdfViewer.currentScaleValue !== \"page-fit\"\n        ) {\n          break;\n        }\n        if (PDFViewerApplication.page > 1) {\n          PDFViewerApplication.page--;\n        }\n        handled = true;\n        break;\n\n      case 82: // 'r'\n        PDFViewerApplication.rotatePages(-90);\n        break;\n    }\n  }\n\n  if (!handled && !isViewerInPresentationMode) {\n    // 33=Page Up  34=Page Down  35=End    36=Home\n    // 37=Left     38=Up         39=Right  40=Down\n    // 32=Spacebar\n    if (\n      (evt.keyCode >= 33 && evt.keyCode <= 40) ||\n      (evt.keyCode === 32 && curElementTagName !== \"BUTTON\")\n    ) {\n      ensureViewerFocused = true;\n    }\n  }\n\n  if (ensureViewerFocused && !pdfViewer.containsElement(curElement)) {\n    // The page container is not focused, but a page navigation key has been\n    // pressed. Change the focus to the viewer container to make sure that\n    // navigation by keyboard works as expected.\n    pdfViewer.focus();\n  }\n\n  if (handled) {\n    evt.preventDefault();\n  }\n}\n\n/**\n * Converts API PageLayout values to the format used by `PDFViewer`.\n * NOTE: This is supported to the extent that the viewer implements the\n *       necessary Scroll/Spread modes (since SinglePage, TwoPageLeft,\n *       and TwoPageRight all suggests using non-continuous scrolling).\n * @param {string} mode - The API PageLayout value.\n * @returns {number} A value from {SpreadMode}.\n */\nfunction apiPageLayoutToSpreadMode(layout) {\n  switch (layout) {\n    case \"SinglePage\":\n    case \"OneColumn\":\n      return SpreadMode.NONE;\n    case \"TwoColumnLeft\":\n    case \"TwoPageLeft\":\n      return SpreadMode.ODD;\n    case \"TwoColumnRight\":\n    case \"TwoPageRight\":\n      return SpreadMode.EVEN;\n  }\n  return SpreadMode.NONE; // Default value.\n}\n\n/**\n * Converts API PageMode values to the format used by `PDFSidebar`.\n * NOTE: There's also a \"FullScreen\" parameter which is not possible to support,\n *       since the Fullscreen API used in browsers requires that entering\n *       fullscreen mode only occurs as a result of a user-initiated event.\n * @param {string} mode - The API PageMode value.\n * @returns {number} A value from {SidebarView}.\n */\nfunction apiPageModeToSidebarView(mode) {\n  switch (mode) {\n    case \"UseNone\":\n      return SidebarView.NONE;\n    case \"UseThumbs\":\n      return SidebarView.THUMBS;\n    case \"UseOutlines\":\n      return SidebarView.OUTLINE;\n    case \"UseAttachments\":\n      return SidebarView.ATTACHMENTS;\n    case \"UseOC\":\n    // Not implemented, since we don't support Optional Content Groups yet.\n  }\n  return SidebarView.NONE; // Default value.\n}\n\n/* Abstract factory for the print service. */\nconst PDFPrintServiceFactory = {\n  instance: {\n    supportsPrinting: false,\n    createPrintService() {\n      throw new Error(\"Not implemented: createPrintService\");\n    },\n  },\n};\n\nexport {\n  PDFViewerApplication,\n  DefaultExternalServices,\n  PDFPrintServiceFactory,\n};\n","/* Copyright 2014 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { BaseViewer } from \"./base_viewer.js\";\nimport { shadow } from \"./pdf\";\n\nclass PDFViewer extends BaseViewer {\n  get _viewerElement() {\n    return shadow(this, \"_viewerElement\", this.viewer);\n  }\n\n  _scrollIntoView({ pageDiv, pageSpot = null, pageNumber = null }) {\n    if (!pageSpot && !this.isInPresentationMode) {\n      const left = pageDiv.offsetLeft + pageDiv.clientLeft;\n      const right = left + pageDiv.clientWidth;\n      const { scrollLeft, clientWidth } = this.container;\n      if (\n        this._isScrollModeHorizontal ||\n        left < scrollLeft ||\n        right > scrollLeft + clientWidth\n      ) {\n        pageSpot = { left: 0, top: 0 };\n      }\n    }\n    super._scrollIntoView({ pageDiv, pageSpot, pageNumber });\n  }\n\n  _getVisiblePages() {\n    if (this.isInPresentationMode) {\n      // The algorithm in `getVisibleElements` doesn't work in all browsers and\n      // configurations (e.g. Chrome) when Presentation Mode is active.\n      return this._getCurrentVisiblePage();\n    }\n    return super._getVisiblePages();\n  }\n\n  _updateHelper(visiblePages) {\n    if (this.isInPresentationMode) {\n      return;\n    }\n    let currentId = this._currentPageNumber;\n    let stillFullyVisible = false;\n\n    for (const page of visiblePages) {\n      if (page.percent < 100) {\n        break;\n      }\n      debugger;\n      if (page.id === currentId) {\n        stillFullyVisible = true;\n        break;\n      }\n    }\n    if (!stillFullyVisible) {\n      currentId = visiblePages[0].id;\n    }\n    this._setCurrentPageNumber(currentId);\n  }\n}\n\nexport { PDFViewer };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst DEFAULT_VIEW_HISTORY_CACHE_SIZE = 20;\n\n/**\n * View History - This is a utility for saving various view parameters for\n *                recently opened files.\n *\n * The way that the view parameters are stored depends on how PDF.js is built,\n * for 'gulp <flag>' the following cases exist:\n *  - MOZCENTRAL        - uses sessionStorage.\n *  - GENERIC or CHROME - uses localStorage, if it is available.\n */\nclass ViewHistory {\n  constructor(fingerprint, cacheSize = DEFAULT_VIEW_HISTORY_CACHE_SIZE) {\n    this.fingerprint = fingerprint;\n    this.cacheSize = cacheSize;\n\n    this._initializedPromise = this._readFromStorage().then(databaseStr => {\n      const database = JSON.parse(databaseStr || \"{}\");\n      let index = -1;\n      if (!Array.isArray(database.files)) {\n        database.files = [];\n      } else {\n        while (database.files.length >= this.cacheSize) {\n          database.files.shift();\n        }\n\n        for (let i = 0, ii = database.files.length; i < ii; i++) {\n          const branch = database.files[i];\n          if (branch.fingerprint === this.fingerprint) {\n            index = i;\n            break;\n          }\n        }\n      }\n      if (index === -1) {\n        index = database.files.push({ fingerprint: this.fingerprint }) - 1;\n      }\n      this.file = database.files[index];\n      this.database = database;\n    });\n  }\n\n  async _writeToStorage() {\n    const databaseStr = JSON.stringify(this.database);\n\n    if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n      sessionStorage.setItem(\"pdfjs.history\", databaseStr);\n      return;\n    }\n    localStorage.setItem(\"pdfjs.history\", databaseStr);\n  }\n\n  async _readFromStorage() {\n    if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n      return sessionStorage.getItem(\"pdfjs.history\");\n    }\n    return localStorage.getItem(\"pdfjs.history\");\n  }\n\n  async set(name, val) {\n    await this._initializedPromise;\n    this.file[name] = val;\n    return this._writeToStorage();\n  }\n\n  async setMultiple(properties) {\n    await this._initializedPromise;\n    for (const name in properties) {\n      this.file[name] = properties[name];\n    }\n    return this._writeToStorage();\n  }\n\n  async get(name, defaultValue) {\n    await this._initializedPromise;\n    const val = this.file[name];\n    return val !== undefined ? val : defaultValue;\n  }\n\n  async getMultiple(properties) {\n    await this._initializedPromise;\n    const values = Object.create(null);\n\n    for (const name in properties) {\n      const val = this.file[name];\n      values[name] = val !== undefined ? val : properties[name];\n    }\n    return values;\n  }\n}\n\nexport { ViewHistory };\n","'use strict';\nvar fixRegExpWellKnownSymbolLogic = require('../internals/fix-regexp-well-known-symbol-logic');\nvar anObject = require('../internals/an-object');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar sameValue = require('../internals/same-value');\nvar regExpExec = require('../internals/regexp-exec-abstract');\n\n// @@search logic\nfixRegExpWellKnownSymbolLogic('search', 1, function (SEARCH, nativeSearch, maybeCallNative) {\n  return [\n    // `String.prototype.search` method\n    // https://tc39.github.io/ecma262/#sec-string.prototype.search\n    function search(regexp) {\n      var O = requireObjectCoercible(this);\n      var searcher = regexp == undefined ? undefined : regexp[SEARCH];\n      return searcher !== undefined ? searcher.call(regexp, O) : new RegExp(regexp)[SEARCH](String(O));\n    },\n    // `RegExp.prototype[@@search]` method\n    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@search\n    function (regexp) {\n      var res = maybeCallNative(nativeSearch, regexp, this);\n      if (res.done) return res.value;\n\n      var rx = anObject(regexp);\n      var S = String(this);\n\n      var previousLastIndex = rx.lastIndex;\n      if (!sameValue(previousLastIndex, 0)) rx.lastIndex = 0;\n      var result = regExpExec(rx, S);\n      if (!sameValue(rx.lastIndex, previousLastIndex)) rx.lastIndex = previousLastIndex;\n      return result === null ? -1 : result.index;\n    }\n  ];\n});\n"],"sourceRoot":""}